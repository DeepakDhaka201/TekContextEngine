{
  "codebaseName" : "comprehensive-test-project",
  "files" : [ {
    "path" : "src/main/java/com/testproject/AbstractService.java",
    "fileName" : "AbstractService.java",
    "checksum" : "8e7a9e75174e6fef6330c553bf32a59b",
    "lineCount" : 158
  }, {
    "path" : "src/main/java/com/testproject/ApplicationConfig.java",
    "fileName" : "ApplicationConfig.java",
    "checksum" : "16513287ae0a29537aa2c2c3d59ed38e",
    "lineCount" : 99
  }, {
    "path" : "src/main/java/com/testproject/Auditable.java",
    "fileName" : "Auditable.java",
    "checksum" : "90ca5fc080c990d71fd4a261f8a8f787",
    "lineCount" : 39
  }, {
    "path" : "src/main/java/com/testproject/BaseEntity.java",
    "fileName" : "BaseEntity.java",
    "checksum" : "3956e1ed8e13e1d8b69b8c76655a5869",
    "lineCount" : 189
  }, {
    "path" : "src/main/java/com/testproject/BaseRepository.java",
    "fileName" : "BaseRepository.java",
    "checksum" : "5f98ac0881dbb0b0f13dd5b1caba2f5e",
    "lineCount" : 58
  }, {
    "path" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "fileName" : "CompleteTestClasses.java",
    "checksum" : "7533f31a445e45620bab16d0c97b1804",
    "lineCount" : 319
  }, {
    "path" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "fileName" : "CompleteTestClasses.java",
    "checksum" : "7533f31a445e45620bab16d0c97b1804",
    "lineCount" : 319
  }, {
    "path" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "fileName" : "CompleteTestClasses.java",
    "checksum" : "7533f31a445e45620bab16d0c97b1804",
    "lineCount" : 319
  }, {
    "path" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "fileName" : "CompleteTestClasses.java",
    "checksum" : "7533f31a445e45620bab16d0c97b1804",
    "lineCount" : 319
  }, {
    "path" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "fileName" : "CompleteTestClasses.java",
    "checksum" : "7533f31a445e45620bab16d0c97b1804",
    "lineCount" : 319
  }, {
    "path" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "fileName" : "CompleteTestClasses.java",
    "checksum" : "7533f31a445e45620bab16d0c97b1804",
    "lineCount" : 319
  }, {
    "path" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "fileName" : "CompleteTestClasses.java",
    "checksum" : "7533f31a445e45620bab16d0c97b1804",
    "lineCount" : 319
  }, {
    "path" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "fileName" : "CompleteTestClasses.java",
    "checksum" : "7533f31a445e45620bab16d0c97b1804",
    "lineCount" : 319
  }, {
    "path" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "fileName" : "CompleteTestClasses.java",
    "checksum" : "7533f31a445e45620bab16d0c97b1804",
    "lineCount" : 319
  }, {
    "path" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "fileName" : "CompleteTestClasses.java",
    "checksum" : "7533f31a445e45620bab16d0c97b1804",
    "lineCount" : 319
  }, {
    "path" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "fileName" : "CompleteTestClasses.java",
    "checksum" : "7533f31a445e45620bab16d0c97b1804",
    "lineCount" : 319
  }, {
    "path" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "fileName" : "CompleteTestClasses.java",
    "checksum" : "7533f31a445e45620bab16d0c97b1804",
    "lineCount" : 319
  }, {
    "path" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "fileName" : "CompleteTestClasses.java",
    "checksum" : "7533f31a445e45620bab16d0c97b1804",
    "lineCount" : 319
  }, {
    "path" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "fileName" : "CompleteTestClasses.java",
    "checksum" : "7533f31a445e45620bab16d0c97b1804",
    "lineCount" : 319
  }, {
    "path" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "fileName" : "CompleteTestClasses.java",
    "checksum" : "7533f31a445e45620bab16d0c97b1804",
    "lineCount" : 319
  }, {
    "path" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "fileName" : "CompleteTestClasses.java",
    "checksum" : "7533f31a445e45620bab16d0c97b1804",
    "lineCount" : 319
  }, {
    "path" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "fileName" : "EdgeCaseTestClasses.java",
    "checksum" : "b0aba29ad074a5ef695bc1c0bd9208fa",
    "lineCount" : 570
  }, {
    "path" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "fileName" : "EdgeCaseTestClasses.java",
    "checksum" : "b0aba29ad074a5ef695bc1c0bd9208fa",
    "lineCount" : 570
  }, {
    "path" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "fileName" : "EdgeCaseTestClasses.java",
    "checksum" : "b0aba29ad074a5ef695bc1c0bd9208fa",
    "lineCount" : 570
  }, {
    "path" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "fileName" : "EdgeCaseTestClasses.java",
    "checksum" : "b0aba29ad074a5ef695bc1c0bd9208fa",
    "lineCount" : 570
  }, {
    "path" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "fileName" : "EdgeCaseTestClasses.java",
    "checksum" : "b0aba29ad074a5ef695bc1c0bd9208fa",
    "lineCount" : 570
  }, {
    "path" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "fileName" : "EdgeCaseTestClasses.java",
    "checksum" : "b0aba29ad074a5ef695bc1c0bd9208fa",
    "lineCount" : 570
  }, {
    "path" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "fileName" : "EdgeCaseTestClasses.java",
    "checksum" : "b0aba29ad074a5ef695bc1c0bd9208fa",
    "lineCount" : 570
  }, {
    "path" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "fileName" : "EdgeCaseTestClasses.java",
    "checksum" : "b0aba29ad074a5ef695bc1c0bd9208fa",
    "lineCount" : 570
  }, {
    "path" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "fileName" : "EdgeCaseTestClasses.java",
    "checksum" : "b0aba29ad074a5ef695bc1c0bd9208fa",
    "lineCount" : 570
  }, {
    "path" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "fileName" : "EdgeCaseTestClasses.java",
    "checksum" : "b0aba29ad074a5ef695bc1c0bd9208fa",
    "lineCount" : 570
  }, {
    "path" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "fileName" : "EdgeCaseTestClasses.java",
    "checksum" : "b0aba29ad074a5ef695bc1c0bd9208fa",
    "lineCount" : 570
  }, {
    "path" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "fileName" : "EdgeCaseTestClasses.java",
    "checksum" : "b0aba29ad074a5ef695bc1c0bd9208fa",
    "lineCount" : 570
  }, {
    "path" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "fileName" : "EdgeCaseTestClasses.java",
    "checksum" : "b0aba29ad074a5ef695bc1c0bd9208fa",
    "lineCount" : 570
  }, {
    "path" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "fileName" : "EdgeCaseTestClasses.java",
    "checksum" : "b0aba29ad074a5ef695bc1c0bd9208fa",
    "lineCount" : 570
  }, {
    "path" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "fileName" : "EdgeCaseTestClasses.java",
    "checksum" : "b0aba29ad074a5ef695bc1c0bd9208fa",
    "lineCount" : 570
  }, {
    "path" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "fileName" : "EdgeCaseTestClasses.java",
    "checksum" : "b0aba29ad074a5ef695bc1c0bd9208fa",
    "lineCount" : 570
  }, {
    "path" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "fileName" : "EdgeCaseTestClasses.java",
    "checksum" : "b0aba29ad074a5ef695bc1c0bd9208fa",
    "lineCount" : 570
  }, {
    "path" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "fileName" : "EdgeCaseTestClasses.java",
    "checksum" : "b0aba29ad074a5ef695bc1c0bd9208fa",
    "lineCount" : 570
  }, {
    "path" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "fileName" : "EdgeCaseTestClasses.java",
    "checksum" : "b0aba29ad074a5ef695bc1c0bd9208fa",
    "lineCount" : 570
  }, {
    "path" : "src/main/java/com/testproject/EntityNotFoundException.java",
    "fileName" : "EntityNotFoundException.java",
    "checksum" : "e56fcb8a2d902eda71192e7430513d71",
    "lineCount" : 105
  }, {
    "path" : "src/main/java/com/testproject/InnerClassTestCase.java",
    "fileName" : "InnerClassTestCase.java",
    "checksum" : "c93649c65b2ba83d384b93d3e5c5ddf7",
    "lineCount" : 311
  }, {
    "path" : "src/main/java/com/testproject/MethodOverloadingTestCase.java",
    "fileName" : "MethodOverloadingTestCase.java",
    "checksum" : "8d27761181086f3f82cf697aa88ae824",
    "lineCount" : 163
  }, {
    "path" : "src/main/java/com/testproject/Order.java",
    "fileName" : "Order.java",
    "checksum" : "f322722646915bc919846b98f51fe6e7",
    "lineCount" : 163
  }, {
    "path" : "src/main/java/com/testproject/OrderService.java",
    "fileName" : "OrderService.java",
    "checksum" : "a767b23303bec5aad82ca9cbde21a515",
    "lineCount" : 262
  }, {
    "path" : "src/main/java/com/testproject/SimpleCallTest.java",
    "fileName" : "SimpleCallTest.java",
    "checksum" : "6d8fc12b3dcfa77b9160eed4d85e6ffb",
    "lineCount" : 49
  }, {
    "path" : "src/main/java/com/testproject/SpringAnnotations.java",
    "fileName" : "SpringAnnotations.java",
    "checksum" : "dcfdec66dc1865e56e73677b1f60d3a2",
    "lineCount" : 205
  }, {
    "path" : "src/main/java/com/testproject/SpringAnnotations.java",
    "fileName" : "SpringAnnotations.java",
    "checksum" : "dcfdec66dc1865e56e73677b1f60d3a2",
    "lineCount" : 205
  }, {
    "path" : "src/main/java/com/testproject/SpringAnnotations.java",
    "fileName" : "SpringAnnotations.java",
    "checksum" : "dcfdec66dc1865e56e73677b1f60d3a2",
    "lineCount" : 205
  }, {
    "path" : "src/main/java/com/testproject/SpringAnnotations.java",
    "fileName" : "SpringAnnotations.java",
    "checksum" : "dcfdec66dc1865e56e73677b1f60d3a2",
    "lineCount" : 205
  }, {
    "path" : "src/main/java/com/testproject/SpringAnnotations.java",
    "fileName" : "SpringAnnotations.java",
    "checksum" : "dcfdec66dc1865e56e73677b1f60d3a2",
    "lineCount" : 205
  }, {
    "path" : "src/main/java/com/testproject/SpringAnnotations.java",
    "fileName" : "SpringAnnotations.java",
    "checksum" : "dcfdec66dc1865e56e73677b1f60d3a2",
    "lineCount" : 205
  }, {
    "path" : "src/main/java/com/testproject/SpringAnnotations.java",
    "fileName" : "SpringAnnotations.java",
    "checksum" : "dcfdec66dc1865e56e73677b1f60d3a2",
    "lineCount" : 205
  }, {
    "path" : "src/main/java/com/testproject/SpringAnnotations.java",
    "fileName" : "SpringAnnotations.java",
    "checksum" : "dcfdec66dc1865e56e73677b1f60d3a2",
    "lineCount" : 205
  }, {
    "path" : "src/main/java/com/testproject/SpringAnnotations.java",
    "fileName" : "SpringAnnotations.java",
    "checksum" : "dcfdec66dc1865e56e73677b1f60d3a2",
    "lineCount" : 205
  }, {
    "path" : "src/main/java/com/testproject/SpringAnnotations.java",
    "fileName" : "SpringAnnotations.java",
    "checksum" : "dcfdec66dc1865e56e73677b1f60d3a2",
    "lineCount" : 205
  }, {
    "path" : "src/main/java/com/testproject/SpringAnnotations.java",
    "fileName" : "SpringAnnotations.java",
    "checksum" : "dcfdec66dc1865e56e73677b1f60d3a2",
    "lineCount" : 205
  }, {
    "path" : "src/main/java/com/testproject/SpringAnnotations.java",
    "fileName" : "SpringAnnotations.java",
    "checksum" : "dcfdec66dc1865e56e73677b1f60d3a2",
    "lineCount" : 205
  }, {
    "path" : "src/main/java/com/testproject/SpringAnnotations.java",
    "fileName" : "SpringAnnotations.java",
    "checksum" : "dcfdec66dc1865e56e73677b1f60d3a2",
    "lineCount" : 205
  }, {
    "path" : "src/main/java/com/testproject/SpringAnnotations.java",
    "fileName" : "SpringAnnotations.java",
    "checksum" : "dcfdec66dc1865e56e73677b1f60d3a2",
    "lineCount" : 205
  }, {
    "path" : "src/main/java/com/testproject/SpringAnnotations.java",
    "fileName" : "SpringAnnotations.java",
    "checksum" : "dcfdec66dc1865e56e73677b1f60d3a2",
    "lineCount" : 205
  }, {
    "path" : "src/main/java/com/testproject/SpringAnnotations.java",
    "fileName" : "SpringAnnotations.java",
    "checksum" : "dcfdec66dc1865e56e73677b1f60d3a2",
    "lineCount" : 205
  }, {
    "path" : "src/main/java/com/testproject/SpringAnnotations.java",
    "fileName" : "SpringAnnotations.java",
    "checksum" : "dcfdec66dc1865e56e73677b1f60d3a2",
    "lineCount" : 205
  }, {
    "path" : "src/main/java/com/testproject/SpringAnnotations.java",
    "fileName" : "SpringAnnotations.java",
    "checksum" : "dcfdec66dc1865e56e73677b1f60d3a2",
    "lineCount" : 205
  }, {
    "path" : "src/main/java/com/testproject/SpringAnnotations.java",
    "fileName" : "SpringAnnotations.java",
    "checksum" : "dcfdec66dc1865e56e73677b1f60d3a2",
    "lineCount" : 205
  }, {
    "path" : "src/main/java/com/testproject/SpringAnnotations.java",
    "fileName" : "SpringAnnotations.java",
    "checksum" : "dcfdec66dc1865e56e73677b1f60d3a2",
    "lineCount" : 205
  }, {
    "path" : "src/main/java/com/testproject/SpringAnnotations.java",
    "fileName" : "SpringAnnotations.java",
    "checksum" : "dcfdec66dc1865e56e73677b1f60d3a2",
    "lineCount" : 205
  }, {
    "path" : "src/main/java/com/testproject/SpringAnnotations.java",
    "fileName" : "SpringAnnotations.java",
    "checksum" : "dcfdec66dc1865e56e73677b1f60d3a2",
    "lineCount" : 205
  }, {
    "path" : "src/main/java/com/testproject/SpringAnnotations.java",
    "fileName" : "SpringAnnotations.java",
    "checksum" : "dcfdec66dc1865e56e73677b1f60d3a2",
    "lineCount" : 205
  }, {
    "path" : "src/main/java/com/testproject/SpringAnnotations.java",
    "fileName" : "SpringAnnotations.java",
    "checksum" : "dcfdec66dc1865e56e73677b1f60d3a2",
    "lineCount" : 205
  }, {
    "path" : "src/main/java/com/testproject/SpringAnnotations.java",
    "fileName" : "SpringAnnotations.java",
    "checksum" : "dcfdec66dc1865e56e73677b1f60d3a2",
    "lineCount" : 205
  }, {
    "path" : "src/main/java/com/testproject/SpringAnnotations.java",
    "fileName" : "SpringAnnotations.java",
    "checksum" : "dcfdec66dc1865e56e73677b1f60d3a2",
    "lineCount" : 205
  }, {
    "path" : "src/main/java/com/testproject/SpringAnnotations.java",
    "fileName" : "SpringAnnotations.java",
    "checksum" : "dcfdec66dc1865e56e73677b1f60d3a2",
    "lineCount" : 205
  }, {
    "path" : "src/main/java/com/testproject/SpringAnnotations.java",
    "fileName" : "SpringAnnotations.java",
    "checksum" : "dcfdec66dc1865e56e73677b1f60d3a2",
    "lineCount" : 205
  }, {
    "path" : "src/main/java/com/testproject/SpringAnnotations.java",
    "fileName" : "SpringAnnotations.java",
    "checksum" : "dcfdec66dc1865e56e73677b1f60d3a2",
    "lineCount" : 205
  }, {
    "path" : "src/main/java/com/testproject/SpringAnnotations.java",
    "fileName" : "SpringAnnotations.java",
    "checksum" : "dcfdec66dc1865e56e73677b1f60d3a2",
    "lineCount" : 205
  }, {
    "path" : "src/main/java/com/testproject/User.java",
    "fileName" : "User.java",
    "checksum" : "77c2b837316f7f3a7dc569603f4ba36f",
    "lineCount" : 176
  }, {
    "path" : "src/main/java/com/testproject/UserController.java",
    "fileName" : "UserController.java",
    "checksum" : "e96fae17d351ef7cadd7e24e69ddd4ce",
    "lineCount" : 152
  }, {
    "path" : "src/main/java/com/testproject/UserRepository.java",
    "fileName" : "UserRepository.java",
    "checksum" : "52f0b8d23f6ff2875d021ade110ea651",
    "lineCount" : 110
  }, {
    "path" : "src/main/java/com/testproject/UserService.java",
    "fileName" : "UserService.java",
    "checksum" : "74e9790dfbe498b42f30b2efae249850",
    "lineCount" : 237
  }, {
    "path" : "src/main/java/com/testproject/UserServiceTest.java",
    "fileName" : "UserServiceTest.java",
    "checksum" : "8d85be7dfb5552323805969583781c9d",
    "lineCount" : 219
  }, {
    "path" : "src/main/java/com/testproject/UserStatus.java",
    "fileName" : "UserStatus.java",
    "checksum" : "1ca034d15f305d077c6c22e27d33681d",
    "lineCount" : 41
  }, {
    "path" : "src/main/java/com/testproject/ValidationException.java",
    "fileName" : "ValidationException.java",
    "checksum" : "6b1d74c866a23bf0e8f5d2cfbb0789e5",
    "lineCount" : 56
  } ],
  "classes" : [ {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : true,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.AbstractService",
    "name" : "AbstractService",
    "fullyQualifiedName" : "com.testproject.AbstractService",
    "comment" : "Abstract service class demonstrating:\n- Abstract classes with generic parameters\n- Template method pattern\n- Abstract and concrete methods\n- Complex inheritance hierarchy\n",
    "visibility" : "public",
    "isAbstract" : true,
    "isFinal" : false,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/AbstractService.java",
    "startLine" : 14,
    "endLine" : 158,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : true,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.ApplicationConfig",
    "name" : "ApplicationConfig",
    "fullyQualifiedName" : "com.testproject.ApplicationConfig",
    "comment" : "Configuration class demonstrating:\n- Configuration annotations\n- Bean definitions\n- Profile-specific configurations\n- ConfigurationProperties\n- Static methods\n",
    "visibility" : "public",
    "isAbstract" : false,
    "isFinal" : false,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/ApplicationConfig.java",
    "startLine" : 19,
    "endLine" : 99,
    "decorators" : [ {
      "name" : "Configuration",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : true,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : true,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.ApplicationConfig$CustomThreadFactory",
    "name" : "CustomThreadFactory",
    "fullyQualifiedName" : "com.testproject.ApplicationConfig$CustomThreadFactory",
    "comment" : "Inner class for thread factory\n",
    "visibility" : "private",
    "isAbstract" : false,
    "isFinal" : false,
    "isStatic" : true,
    "filePath" : "src/main/java/com/testproject/ApplicationConfig.java",
    "startLine" : 88,
    "endLine" : 98,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : true,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.BaseEntity",
    "name" : "BaseEntity",
    "fullyQualifiedName" : "com.testproject.BaseEntity",
    "comment" : "Abstract base entity demonstrating:\n- Abstract classes\n- Interface implementation  \n- Field declarations with various types\n- Constructor overloading\n- Method overriding\n- Generic methods\n",
    "visibility" : "public",
    "isAbstract" : true,
    "isFinal" : false,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/BaseEntity.java",
    "startLine" : 15,
    "endLine" : 189,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : true,
    "id" : "comprehensive-test-project:com.testproject.OrderStatus",
    "name" : "OrderStatus",
    "fullyQualifiedName" : "com.testproject.OrderStatus",
    "comment" : "",
    "visibility" : "package",
    "isAbstract" : false,
    "isFinal" : true,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "startLine" : 9,
    "endLine" : 11,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.Role",
    "name" : "Role",
    "fullyQualifiedName" : "com.testproject.Role",
    "comment" : "",
    "visibility" : "package",
    "isAbstract" : false,
    "isFinal" : false,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "startLine" : 19,
    "endLine" : 35,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.Permission",
    "name" : "Permission",
    "fullyQualifiedName" : "com.testproject.Permission",
    "comment" : "",
    "visibility" : "package",
    "isAbstract" : false,
    "isFinal" : false,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "startLine" : 37,
    "endLine" : 44,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.OrderItem",
    "name" : "OrderItem",
    "fullyQualifiedName" : "com.testproject.OrderItem",
    "comment" : "",
    "visibility" : "package",
    "isAbstract" : false,
    "isFinal" : false,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "startLine" : 61,
    "endLine" : 80,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.Product",
    "name" : "Product",
    "fullyQualifiedName" : "com.testproject.Product",
    "comment" : "",
    "visibility" : "package",
    "isAbstract" : false,
    "isFinal" : false,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "startLine" : 82,
    "endLine" : 99,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.ShippingAddress",
    "name" : "ShippingAddress",
    "fullyQualifiedName" : "com.testproject.ShippingAddress",
    "comment" : "",
    "visibility" : "package",
    "isAbstract" : false,
    "isFinal" : false,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "startLine" : 101,
    "endLine" : 112,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserDto",
    "name" : "UserDto",
    "fullyQualifiedName" : "com.testproject.UserDto",
    "comment" : "",
    "visibility" : "package",
    "isAbstract" : false,
    "isFinal" : false,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "startLine" : 173,
    "endLine" : 197,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.OrderDto",
    "name" : "OrderDto",
    "fullyQualifiedName" : "com.testproject.OrderDto",
    "comment" : "",
    "visibility" : "package",
    "isAbstract" : false,
    "isFinal" : false,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "startLine" : 199,
    "endLine" : 213,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.CreateUserRequest",
    "name" : "CreateUserRequest",
    "fullyQualifiedName" : "com.testproject.CreateUserRequest",
    "comment" : "",
    "visibility" : "package",
    "isAbstract" : false,
    "isFinal" : false,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "startLine" : 217,
    "endLine" : 226,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UpdateUserRequest",
    "name" : "UpdateUserRequest",
    "fullyQualifiedName" : "com.testproject.UpdateUserRequest",
    "comment" : "",
    "visibility" : "package",
    "isAbstract" : false,
    "isFinal" : false,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "startLine" : 228,
    "endLine" : 234,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.CreateOrderRequest",
    "name" : "CreateOrderRequest",
    "fullyQualifiedName" : "com.testproject.CreateOrderRequest",
    "comment" : "",
    "visibility" : "package",
    "isAbstract" : false,
    "isFinal" : false,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "startLine" : 236,
    "endLine" : 241,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.OrderItemRequest",
    "name" : "OrderItemRequest",
    "fullyQualifiedName" : "com.testproject.OrderItemRequest",
    "comment" : "",
    "visibility" : "package",
    "isAbstract" : false,
    "isFinal" : false,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "startLine" : 243,
    "endLine" : 248,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserMapper",
    "name" : "UserMapper",
    "fullyQualifiedName" : "com.testproject.UserMapper",
    "comment" : "",
    "visibility" : "package",
    "isAbstract" : false,
    "isFinal" : false,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "startLine" : 252,
    "endLine" : 277,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.DataSource",
    "name" : "DataSource",
    "fullyQualifiedName" : "com.testproject.DataSource",
    "comment" : "",
    "visibility" : "package",
    "isAbstract" : false,
    "isFinal" : false,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "startLine" : 281,
    "endLine" : 292,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.SecurityProperties",
    "name" : "SecurityProperties",
    "fullyQualifiedName" : "com.testproject.SecurityProperties",
    "comment" : "",
    "visibility" : "package",
    "isAbstract" : false,
    "isFinal" : false,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "startLine" : 294,
    "endLine" : 300,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.CacheManager",
    "name" : "CacheManager",
    "fullyQualifiedName" : "com.testproject.CacheManager",
    "comment" : "",
    "visibility" : "package",
    "isAbstract" : false,
    "isFinal" : false,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "startLine" : 302,
    "endLine" : 307,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.GenericUtils",
    "name" : "GenericUtils",
    "fullyQualifiedName" : "com.testproject.GenericUtils",
    "comment" : "Generic utility class with nested static classes\n",
    "visibility" : "package",
    "isAbstract" : false,
    "isFinal" : false,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "startLine" : 23,
    "endLine" : 89,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : true,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.GenericUtils$TypeSafeBuilder",
    "name" : "TypeSafeBuilder",
    "fullyQualifiedName" : "com.testproject.GenericUtils$TypeSafeBuilder",
    "comment" : "Nested static class with generics\n",
    "visibility" : "public",
    "isAbstract" : false,
    "isFinal" : false,
    "isStatic" : true,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "startLine" : 28,
    "endLine" : 51,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.GenericUtils$InstanceBuilder",
    "name" : "InstanceBuilder",
    "fullyQualifiedName" : "com.testproject.GenericUtils$InstanceBuilder",
    "comment" : "Nested inner class (non-static)\n",
    "visibility" : "public",
    "isAbstract" : false,
    "isFinal" : false,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "startLine" : 56,
    "endLine" : 66,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : true,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.BaseService",
    "name" : "BaseService",
    "fullyQualifiedName" : "com.testproject.BaseService",
    "comment" : "Base class for all services\n",
    "visibility" : "package",
    "isAbstract" : true,
    "isFinal" : false,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "startLine" : 96,
    "endLine" : 109,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : true,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.CacheableService",
    "name" : "CacheableService",
    "fullyQualifiedName" : "com.testproject.CacheableService",
    "comment" : "Complex service with multiple inheritance\n",
    "visibility" : "package",
    "isAbstract" : true,
    "isFinal" : false,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "startLine" : 138,
    "endLine" : 200,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : true,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.BusinessException",
    "name" : "BusinessException",
    "fullyQualifiedName" : "com.testproject.BusinessException",
    "comment" : "Base business exception\n",
    "visibility" : "package",
    "isAbstract" : true,
    "isFinal" : false,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "startLine" : 207,
    "endLine" : 237,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.PaymentException",
    "name" : "PaymentException",
    "fullyQualifiedName" : "com.testproject.PaymentException",
    "comment" : "Payment related exceptions\n",
    "visibility" : "package",
    "isAbstract" : false,
    "isFinal" : false,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "startLine" : 242,
    "endLine" : 255,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.PaymentServiceException",
    "name" : "PaymentServiceException",
    "fullyQualifiedName" : "com.testproject.PaymentServiceException",
    "comment" : "",
    "visibility" : "package",
    "isAbstract" : false,
    "isFinal" : false,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "startLine" : 257,
    "endLine" : 265,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.NotificationService",
    "name" : "NotificationService",
    "fullyQualifiedName" : "com.testproject.NotificationService",
    "comment" : "",
    "visibility" : "package",
    "isAbstract" : false,
    "isFinal" : false,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "startLine" : 269,
    "endLine" : 378,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.EmailService",
    "name" : "EmailService",
    "fullyQualifiedName" : "com.testproject.EmailService",
    "comment" : "",
    "visibility" : "package",
    "isAbstract" : false,
    "isFinal" : false,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "startLine" : 382,
    "endLine" : 400,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.SmsService",
    "name" : "SmsService",
    "fullyQualifiedName" : "com.testproject.SmsService",
    "comment" : "",
    "visibility" : "package",
    "isAbstract" : false,
    "isFinal" : false,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "startLine" : 402,
    "endLine" : 420,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.ProductService",
    "name" : "ProductService",
    "fullyQualifiedName" : "com.testproject.ProductService",
    "comment" : "",
    "visibility" : "package",
    "isAbstract" : false,
    "isFinal" : false,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "startLine" : 422,
    "endLine" : 465,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.InventoryService",
    "name" : "InventoryService",
    "fullyQualifiedName" : "com.testproject.InventoryService",
    "comment" : "",
    "visibility" : "package",
    "isAbstract" : false,
    "isFinal" : false,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "startLine" : 467,
    "endLine" : 475,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.PaymentService",
    "name" : "PaymentService",
    "fullyQualifiedName" : "com.testproject.PaymentService",
    "comment" : "",
    "visibility" : "package",
    "isAbstract" : false,
    "isFinal" : false,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "startLine" : 477,
    "endLine" : 486,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.PaymentRequest",
    "name" : "PaymentRequest",
    "fullyQualifiedName" : "com.testproject.PaymentRequest",
    "comment" : "",
    "visibility" : "package",
    "isAbstract" : false,
    "isFinal" : false,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "startLine" : 490,
    "endLine" : 497,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.PaymentResult",
    "name" : "PaymentResult",
    "fullyQualifiedName" : "com.testproject.PaymentResult",
    "comment" : "",
    "visibility" : "package",
    "isAbstract" : false,
    "isFinal" : false,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "startLine" : 499,
    "endLine" : 513,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.OrderRepository",
    "name" : "OrderRepository",
    "fullyQualifiedName" : "com.testproject.OrderRepository",
    "comment" : "",
    "visibility" : "package",
    "isAbstract" : false,
    "isFinal" : false,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "startLine" : 517,
    "endLine" : 546,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.ProductRepository",
    "name" : "ProductRepository",
    "fullyQualifiedName" : "com.testproject.ProductRepository",
    "comment" : "",
    "visibility" : "package",
    "isAbstract" : false,
    "isFinal" : false,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "startLine" : 548,
    "endLine" : 567,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.EntityNotFoundException",
    "name" : "EntityNotFoundException",
    "fullyQualifiedName" : "com.testproject.EntityNotFoundException",
    "comment" : "Custom runtime exception demonstrating:\n- Exception class inheritance from RuntimeException\n- Constructor overloading\n- Exception chaining\n- Custom fields and methods\n",
    "visibility" : "public",
    "isAbstract" : false,
    "isFinal" : false,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/EntityNotFoundException.java",
    "startLine" : 10,
    "endLine" : 105,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.InnerClassTestCase",
    "name" : "InnerClassTestCase",
    "fullyQualifiedName" : "com.testproject.InnerClassTestCase",
    "comment" : "Comprehensive test class for inner classes demonstrating:\n- Static nested classes\n- Non-static inner classes\n- Local classes (within methods)\n- Anonymous classes\n- Nested inner classes (multiple levels)\n",
    "visibility" : "public",
    "isAbstract" : false,
    "isFinal" : false,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/InnerClassTestCase.java",
    "startLine" : 14,
    "endLine" : 311,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : true,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.InnerClassTestCase$StaticNestedClass",
    "name" : "StaticNestedClass",
    "fullyQualifiedName" : "com.testproject.InnerClassTestCase$StaticNestedClass",
    "comment" : "Static nested class\n",
    "visibility" : "public",
    "isAbstract" : false,
    "isFinal" : false,
    "isStatic" : true,
    "filePath" : "src/main/java/com/testproject/InnerClassTestCase.java",
    "startLine" : 21,
    "endLine" : 38,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.InnerClassTestCase$StaticNestedClass$InnerInStaticNested",
    "name" : "InnerInStaticNested",
    "fullyQualifiedName" : "com.testproject.InnerClassTestCase$StaticNestedClass$InnerInStaticNested",
    "comment" : "Inner class within static nested class\n",
    "visibility" : "public",
    "isAbstract" : false,
    "isFinal" : false,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/InnerClassTestCase.java",
    "startLine" : 31,
    "endLine" : 37,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.InnerClassTestCase$InnerClass",
    "name" : "InnerClass",
    "fullyQualifiedName" : "com.testproject.InnerClassTestCase$InnerClass",
    "comment" : "Non-static inner class\n",
    "visibility" : "public",
    "isAbstract" : false,
    "isFinal" : false,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/InnerClassTestCase.java",
    "startLine" : 43,
    "endLine" : 69,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.InnerClassTestCase$InnerClass$NestedInnerClass",
    "name" : "NestedInnerClass",
    "fullyQualifiedName" : "com.testproject.InnerClassTestCase$InnerClass$NestedInnerClass",
    "comment" : "Nested inner class (multiple levels)\n",
    "visibility" : "public",
    "isAbstract" : false,
    "isFinal" : false,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/InnerClassTestCase.java",
    "startLine" : 53,
    "endLine" : 68,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.InnerClassTestCase$InnerClass$NestedInnerClass$TripleNestedClass",
    "name" : "TripleNestedClass",
    "fullyQualifiedName" : "com.testproject.InnerClassTestCase$InnerClass$NestedInnerClass$TripleNestedClass",
    "comment" : "Triple nested class\n",
    "visibility" : "public",
    "isAbstract" : false,
    "isFinal" : false,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/InnerClassTestCase.java",
    "startLine" : 63,
    "endLine" : 67,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.InnerClassTestCase$ProtectedInnerClass",
    "name" : "ProtectedInnerClass",
    "fullyQualifiedName" : "com.testproject.InnerClassTestCase$ProtectedInnerClass",
    "comment" : "Protected inner class\n",
    "visibility" : "protected",
    "isAbstract" : false,
    "isFinal" : false,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/InnerClassTestCase.java",
    "startLine" : 74,
    "endLine" : 78,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.InnerClassTestCase$PrivateInnerClass",
    "name" : "PrivateInnerClass",
    "fullyQualifiedName" : "com.testproject.InnerClassTestCase$PrivateInnerClass",
    "comment" : "Private inner class\n",
    "visibility" : "private",
    "isAbstract" : false,
    "isFinal" : false,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/InnerClassTestCase.java",
    "startLine" : 83,
    "endLine" : 94,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : true,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.InnerClassTestCase$AbstractInnerClass",
    "name" : "AbstractInnerClass",
    "fullyQualifiedName" : "com.testproject.InnerClassTestCase$AbstractInnerClass",
    "comment" : "Abstract inner class\n",
    "visibility" : "public",
    "isAbstract" : true,
    "isFinal" : false,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/InnerClassTestCase.java",
    "startLine" : 99,
    "endLine" : 105,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : true,
    "id" : "comprehensive-test-project:com.testproject.InnerClassTestCase$FinalInnerClass",
    "name" : "FinalInnerClass",
    "fullyQualifiedName" : "com.testproject.InnerClassTestCase$FinalInnerClass",
    "comment" : "Final inner class\n",
    "visibility" : "public",
    "isAbstract" : false,
    "isFinal" : true,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/InnerClassTestCase.java",
    "startLine" : 110,
    "endLine" : 119,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.InnerClassTestCase$GenericInnerClass",
    "name" : "GenericInnerClass",
    "fullyQualifiedName" : "com.testproject.InnerClassTestCase$GenericInnerClass",
    "comment" : "Generic inner class\n",
    "visibility" : "public",
    "isAbstract" : false,
    "isFinal" : false,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/InnerClassTestCase.java",
    "startLine" : 205,
    "endLine" : 227,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.InnerClassTestCase$GenericInnerClass$NestedGenericInner",
    "name" : "NestedGenericInner",
    "fullyQualifiedName" : "com.testproject.InnerClassTestCase$GenericInnerClass$NestedGenericInner",
    "comment" : "Nested generic inner class\n",
    "visibility" : "public",
    "isAbstract" : false,
    "isFinal" : false,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/InnerClassTestCase.java",
    "startLine" : 219,
    "endLine" : 226,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : true,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : true,
    "id" : "comprehensive-test-project:com.testproject.InnerClassTestCase$InnerEnum",
    "name" : "InnerEnum",
    "fullyQualifiedName" : "com.testproject.InnerClassTestCase$InnerEnum",
    "comment" : "Enum as inner class\n",
    "visibility" : "public",
    "isAbstract" : false,
    "isFinal" : true,
    "isStatic" : true,
    "filePath" : "src/main/java/com/testproject/InnerClassTestCase.java",
    "startLine" : 232,
    "endLine" : 246,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.InnerClassTestCase$InnerInterfaceImpl",
    "name" : "InnerInterfaceImpl",
    "fullyQualifiedName" : "com.testproject.InnerClassTestCase$InnerInterfaceImpl",
    "comment" : "Class implementing inner interface\n",
    "visibility" : "public",
    "isAbstract" : false,
    "isFinal" : false,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/InnerClassTestCase.java",
    "startLine" : 269,
    "endLine" : 274,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase",
    "name" : "MethodOverloadingTestCase",
    "fullyQualifiedName" : "com.testproject.MethodOverloadingTestCase",
    "comment" : "Test case for method overloading to verify CALLS relationships\nuse full method signatures to distinguish between overloaded methods.\n",
    "visibility" : "public",
    "isAbstract" : false,
    "isFinal" : false,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/MethodOverloadingTestCase.java",
    "startLine" : 10,
    "endLine" : 163,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.Order",
    "name" : "Order",
    "fullyQualifiedName" : "com.testproject.Order",
    "comment" : "Order entity demonstrating:\n- Complex field types\n- Nested generics\n- BigDecimal usage\n- Map collections\n",
    "visibility" : "public",
    "isAbstract" : false,
    "isFinal" : false,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/Order.java",
    "startLine" : 17,
    "endLine" : 163,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : true,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.OrderService",
    "name" : "OrderService",
    "fullyQualifiedName" : "com.testproject.OrderService",
    "comment" : "Order service demonstrating:\n- Service extending abstract service\n- Method overriding\n- Complex business logic\n- Transaction management\n",
    "visibility" : "public",
    "isAbstract" : false,
    "isFinal" : false,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/OrderService.java",
    "startLine" : 18,
    "endLine" : 262,
    "decorators" : [ {
      "name" : "Service",
      "arguments" : [ ],
      "properties" : { }
    }, {
      "name" : "Transactional",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isController" : false,
    "isService" : true,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.SimpleCallTest",
    "name" : "SimpleCallTest",
    "fullyQualifiedName" : "com.testproject.SimpleCallTest",
    "comment" : "Simple test case to verify CALLS relationships are generated.\n",
    "visibility" : "public",
    "isAbstract" : false,
    "isFinal" : false,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/SimpleCallTest.java",
    "startLine" : 6,
    "endLine" : 49,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.MediaType",
    "name" : "MediaType",
    "fullyQualifiedName" : "com.testproject.MediaType",
    "comment" : "",
    "visibility" : "package",
    "isAbstract" : false,
    "isFinal" : false,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/SpringAnnotations.java",
    "startLine" : 161,
    "endLine" : 165,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : true,
    "id" : "comprehensive-test-project:com.testproject.HttpStatus",
    "name" : "HttpStatus",
    "fullyQualifiedName" : "com.testproject.HttpStatus",
    "comment" : "",
    "visibility" : "package",
    "isAbstract" : false,
    "isFinal" : true,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/SpringAnnotations.java",
    "startLine" : 168,
    "endLine" : 170,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.ResponseEntity",
    "name" : "ResponseEntity",
    "fullyQualifiedName" : "com.testproject.ResponseEntity",
    "comment" : "",
    "visibility" : "package",
    "isAbstract" : false,
    "isFinal" : false,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/SpringAnnotations.java",
    "startLine" : 173,
    "endLine" : 205,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.User",
    "name" : "User",
    "fullyQualifiedName" : "com.testproject.User",
    "comment" : "User entity demonstrating:\n- Entity annotations\n- Field types with collections\n- Relationship annotations\n- Constructor variations\n- Business logic methods\n",
    "visibility" : "public",
    "isAbstract" : false,
    "isFinal" : false,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/User.java",
    "startLine" : 16,
    "endLine" : 176,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : true,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserController",
    "name" : "UserController",
    "fullyQualifiedName" : "com.testproject.UserController",
    "comment" : "REST Controller demonstrating:\n- Spring Boot annotations\n- API endpoint mappings\n- Multiple HTTP methods\n- Path parameters and request bodies\n- Complex annotation parameters\n",
    "visibility" : "public",
    "isAbstract" : false,
    "isFinal" : false,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/UserController.java",
    "startLine" : 22,
    "endLine" : 152,
    "decorators" : [ {
      "name" : "RestController",
      "arguments" : [ ],
      "properties" : { }
    }, {
      "name" : "RequestMapping",
      "arguments" : [ "\"/api/v1/users\"", "com.testproject.MediaType.APPLICATION_JSON_VALUE" ],
      "properties" : { }
    }, {
      "name" : "CrossOrigin",
      "arguments" : [ "\"*\"" ],
      "properties" : { }
    } ],
    "isController" : true,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : {
      "basePath" : "/api/v1/users"
    }
  }, {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : true,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserRepository",
    "name" : "UserRepository",
    "fullyQualifiedName" : "com.testproject.UserRepository",
    "comment" : "Repository class demonstrating:\n- Repository annotations\n- Interface implementation\n- Generic repository pattern\n- Custom query methods\n",
    "visibility" : "public",
    "isAbstract" : false,
    "isFinal" : false,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/UserRepository.java",
    "startLine" : 15,
    "endLine" : 110,
    "decorators" : [ {
      "name" : "Repository",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isController" : false,
    "isService" : false,
    "isRepository" : true,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : true,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserService",
    "name" : "UserService",
    "fullyQualifiedName" : "com.testproject.UserService",
    "comment" : "Service class demonstrating:\n- Service annotations\n- Transaction management\n- Business logic methods\n- Exception handling\n- Method overriding from abstract parent\n",
    "visibility" : "public",
    "isAbstract" : false,
    "isFinal" : false,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/UserService.java",
    "startLine" : 19,
    "endLine" : 237,
    "decorators" : [ {
      "name" : "Service",
      "arguments" : [ ],
      "properties" : { }
    }, {
      "name" : "Transactional",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isController" : false,
    "isService" : true,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserServiceTest",
    "name" : "UserServiceTest",
    "fullyQualifiedName" : "com.testproject.UserServiceTest",
    "comment" : "Test class demonstrating:\n- JUnit 5 annotations\n- Mockito usage\n- Test method patterns\n- Exception testing\n- Parameterized tests\n",
    "visibility" : "public",
    "isAbstract" : false,
    "isFinal" : false,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/UserServiceTest.java",
    "startLine" : 21,
    "endLine" : 219,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : true,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserServiceTest$AssertThat",
    "name" : "AssertThat",
    "fullyQualifiedName" : "com.testproject.UserServiceTest$AssertThat",
    "comment" : "Simple assertion helper class\n",
    "visibility" : "private",
    "isAbstract" : false,
    "isFinal" : false,
    "isStatic" : true,
    "filePath" : "src/main/java/com/testproject/UserServiceTest.java",
    "startLine" : 207,
    "endLine" : 218,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : true,
    "id" : "comprehensive-test-project:com.testproject.UserStatus",
    "name" : "UserStatus",
    "fullyQualifiedName" : "com.testproject.UserStatus",
    "comment" : "Enum demonstrating:\n- Enum definitions\n- Enum with methods\n- Enum with fields\n",
    "visibility" : "public",
    "isAbstract" : false,
    "isFinal" : true,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/UserStatus.java",
    "startLine" : 9,
    "endLine" : 41,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  }, {
    "static" : false,
    "entity" : false,
    "service" : false,
    "controller" : false,
    "repository" : false,
    "component" : false,
    "configuration" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.ValidationException",
    "name" : "ValidationException",
    "fullyQualifiedName" : "com.testproject.ValidationException",
    "comment" : "Custom exception demonstrating:\n- Exception class inheritance\n- Constructor overloading\n- Exception chaining\n",
    "visibility" : "public",
    "isAbstract" : false,
    "isFinal" : false,
    "isStatic" : false,
    "filePath" : "src/main/java/com/testproject/ValidationException.java",
    "startLine" : 9,
    "endLine" : 56,
    "decorators" : [ ],
    "isController" : false,
    "isService" : false,
    "isRepository" : false,
    "isComponent" : false,
    "isConfiguration" : false,
    "isEntity" : false,
    "properties" : { }
  } ],
  "interfaces" : [ {
    "id" : "comprehensive-test-project:com.testproject.Auditable",
    "name" : "Auditable",
    "fullyQualifiedName" : "com.testproject.Auditable",
    "comment" : "Interface for auditable entities demonstrating:\n- Interface inheritance\n- Default methods\n- Built-in type usage\n",
    "filePath" : "src/main/java/com/testproject/Auditable.java",
    "startLine" : 11,
    "endLine" : 39,
    "decorators" : [ ]
  }, {
    "id" : "comprehensive-test-project:com.testproject.BaseRepository",
    "name" : "BaseRepository",
    "fullyQualifiedName" : "com.testproject.BaseRepository",
    "comment" : "Base repository interface demonstrating:\n- Interface definitions with generics\n- Method signatures with generic parameters\n- Complex return types\n",
    "filePath" : "src/main/java/com/testproject/BaseRepository.java",
    "startLine" : 12,
    "endLine" : 58,
    "decorators" : [ ]
  }, {
    "id" : "comprehensive-test-project:com.testproject.DataProcessor",
    "name" : "DataProcessor",
    "fullyQualifiedName" : "com.testproject.DataProcessor",
    "comment" : "",
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "startLine" : 14,
    "endLine" : 18,
    "decorators" : [ ]
  }, {
    "id" : "comprehensive-test-project:com.testproject.Cacheable",
    "name" : "Cacheable",
    "fullyQualifiedName" : "com.testproject.Cacheable",
    "comment" : "Cacheable mixin interface\n",
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "startLine" : 114,
    "endLine" : 121,
    "decorators" : [ ]
  }, {
    "id" : "comprehensive-test-project:com.testproject.Monitorable",
    "name" : "Monitorable",
    "fullyQualifiedName" : "com.testproject.Monitorable",
    "comment" : "Monitorable mixin interface\n",
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "startLine" : 126,
    "endLine" : 133,
    "decorators" : [ ]
  } ],
  "methods" : [ {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.AbstractService.afterCreate(com.testproject.BaseEntity)",
    "name" : "afterCreate",
    "signature" : "afterCreate(com.testproject.BaseEntity)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    // Default empty implementation\n}",
    "visibility" : "protected",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "T entity" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/AbstractService.java",
    "className" : "com.testproject.AbstractService",
    "startLine" : 105,
    "endLine" : 107,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.AbstractService.afterDelete(com.testproject.BaseEntity)",
    "name" : "afterDelete",
    "signature" : "afterDelete(com.testproject.BaseEntity)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    // Default empty implementation\n}",
    "visibility" : "protected",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "T entity" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/AbstractService.java",
    "className" : "com.testproject.AbstractService",
    "startLine" : 121,
    "endLine" : 123,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.AbstractService.afterFindAll(java.util.List)",
    "name" : "afterFindAll",
    "signature" : "afterFindAll(java.util.List)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    // Default empty implementation\n}",
    "visibility" : "protected",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.util.List entities" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/AbstractService.java",
    "className" : "com.testproject.AbstractService",
    "startLine" : 129,
    "endLine" : 131,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.AbstractService.afterUpdate(com.testproject.BaseEntity)",
    "name" : "afterUpdate",
    "signature" : "afterUpdate(com.testproject.BaseEntity)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    // Default empty implementation\n}",
    "visibility" : "protected",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "T entity" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/AbstractService.java",
    "className" : "com.testproject.AbstractService",
    "startLine" : 113,
    "endLine" : 115,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.AbstractService.beforeCreate(com.testproject.BaseEntity)",
    "name" : "beforeCreate",
    "signature" : "beforeCreate(com.testproject.BaseEntity)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    // Default empty implementation\n}",
    "visibility" : "protected",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "T entity" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/AbstractService.java",
    "className" : "com.testproject.AbstractService",
    "startLine" : 101,
    "endLine" : 103,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.AbstractService.beforeDelete(com.testproject.BaseEntity)",
    "name" : "beforeDelete",
    "signature" : "beforeDelete(com.testproject.BaseEntity)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    // Default empty implementation\n}",
    "visibility" : "protected",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "T entity" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/AbstractService.java",
    "className" : "com.testproject.AbstractService",
    "startLine" : 117,
    "endLine" : 119,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.AbstractService.beforeFindAll()",
    "name" : "beforeFindAll",
    "signature" : "beforeFindAll()",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    // Default empty implementation\n}",
    "visibility" : "protected",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/AbstractService.java",
    "className" : "com.testproject.AbstractService",
    "startLine" : 125,
    "endLine" : 127,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.AbstractService.beforeUpdate(com.testproject.BaseEntity,com.testproject.BaseEntity)",
    "name" : "beforeUpdate",
    "signature" : "beforeUpdate(com.testproject.BaseEntity,com.testproject.BaseEntity)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    // Default empty implementation\n}",
    "visibility" : "protected",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "T existing", "T updated" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/AbstractService.java",
    "className" : "com.testproject.AbstractService",
    "startLine" : 109,
    "endLine" : 111,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.AbstractService.convertToRelated(com.testproject.BaseEntity,java.lang.Class)",
    "name" : "convertToRelated",
    "signature" : "convertToRelated(com.testproject.BaseEntity,java.lang.Class)",
    "returnType" : "R",
    "comment" : "Generic method with multiple bounds\n",
    "body" : "{\n    try {\n        R instance = targetType.newInstance();\n        // Copy audit fields\n        instance.setCreatedAt(entity.getCreatedAt());\n        instance.setUpdatedAt(entity.getUpdatedAt());\n        instance.setCreatedBy(entity.getCreatedBy());\n        instance.setUpdatedBy(entity.getUpdatedBy());\n        return instance;\n    } catch (java.lang.Exception e) {\n        throw new java.lang.RuntimeException(\"Cannot convert entity\", e);\n    }\n}",
    "visibility" : "protected",
    "cyclomaticComplexity" : 2,
    "parameters" : [ "T entity", "java.lang.Class targetType" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/AbstractService.java",
    "className" : "com.testproject.AbstractService",
    "startLine" : 136,
    "endLine" : 148,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : true,
    "id" : "comprehensive-test-project:com.testproject.AbstractService.create(com.testproject.BaseEntity)",
    "name" : "create",
    "signature" : "create(com.testproject.BaseEntity)",
    "returnType" : "T",
    "comment" : "Template method - calls abstract methods\n",
    "body" : "{\n    validateForCreation(entity);\n    beforeCreate(entity);\n    T savedEntity = repository.save(entity);\n    afterCreate(savedEntity);\n    return savedEntity;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 2,
    "parameters" : [ "T entity" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : true,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/AbstractService.java",
    "className" : "com.testproject.AbstractService",
    "startLine" : 26,
    "endLine" : 34,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.AbstractService.delete(java.lang.Object)",
    "name" : "delete",
    "signature" : "delete(java.lang.Object)",
    "returnType" : "boolean",
    "comment" : "Virtual method that can be overridden\n",
    "body" : "{\n    java.util.Optional<T> entity = repository.findById(id);\n    if (entity.isPresent()) {\n        beforeDelete(entity.get());\n        repository.deleteById(id);\n        afterDelete(entity.get());\n        return true;\n    }\n    return false;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 3,
    "parameters" : [ "ID id" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/AbstractService.java",
    "className" : "com.testproject.AbstractService",
    "startLine" : 79,
    "endLine" : 88,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.AbstractService.findAll()",
    "name" : "findAll",
    "signature" : "findAll()",
    "returnType" : "java.util.List",
    "comment" : "Concrete method that can be overridden\n",
    "body" : "{\n    beforeFindAll();\n    java.util.List<T> entities = repository.findAll();\n    afterFindAll(entities);\n    return entities;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 2,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/AbstractService.java",
    "className" : "com.testproject.AbstractService",
    "startLine" : 59,
    "endLine" : 64,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.AbstractService.findById(java.lang.Object)",
    "name" : "findById",
    "signature" : "findById(java.lang.Object)",
    "returnType" : "java.util.Optional",
    "comment" : "Concrete method with default implementation\n",
    "body" : "{\n    if (id == null) {\n        return java.util.Optional.empty();\n    }\n    return repository.findById(id);\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 2,
    "parameters" : [ "ID id" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/AbstractService.java",
    "className" : "com.testproject.AbstractService",
    "startLine" : 69,
    "endLine" : 74,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : true,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.AbstractService.getEntityName()",
    "name" : "getEntityName",
    "signature" : "getEntityName()",
    "returnType" : "java.lang.String",
    "comment" : "",
    "body" : null,
    "visibility" : "protected",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : true,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/AbstractService.java",
    "className" : "com.testproject.AbstractService",
    "startLine" : 91,
    "endLine" : 91,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.AbstractService.groupEntities(java.util.List)",
    "name" : "groupEntities",
    "signature" : "groupEntities(java.util.List)",
    "returnType" : "java.util.Map",
    "comment" : "Method with nested generics and wildcards\n",
    "body" : "{\n    java.util.Map<java.lang.String, java.util.List<? extends T>> grouped = new java.util.HashMap<>();\n    // Grouping logic would go here\n    return grouped;\n}",
    "visibility" : "protected",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.util.List entities" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/AbstractService.java",
    "className" : "com.testproject.AbstractService",
    "startLine" : 153,
    "endLine" : 157,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.AbstractService.initializeService()",
    "name" : "initializeService",
    "signature" : "initializeService()",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    // Default empty implementation\n}",
    "visibility" : "protected",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/AbstractService.java",
    "className" : "com.testproject.AbstractService",
    "startLine" : 97,
    "endLine" : 99,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : true,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.AbstractService.performUpdate(com.testproject.BaseEntity,com.testproject.BaseEntity)",
    "name" : "performUpdate",
    "signature" : "performUpdate(com.testproject.BaseEntity,com.testproject.BaseEntity)",
    "returnType" : "T",
    "comment" : "",
    "body" : null,
    "visibility" : "protected",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "T existing", "T updated" ],
    "isAbstract" : true,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/AbstractService.java",
    "className" : "com.testproject.AbstractService",
    "startLine" : 94,
    "endLine" : 94,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : true,
    "id" : "comprehensive-test-project:com.testproject.AbstractService.update(java.lang.Object,com.testproject.BaseEntity)",
    "name" : "update",
    "signature" : "update(java.lang.Object,com.testproject.BaseEntity)",
    "returnType" : "T",
    "comment" : "Template method for updates\n",
    "body" : "{\n    java.util.Optional<T> existing = repository.findById(id);\n    if (!existing.isPresent()) {\n        throw new com.testproject.EntityNotFoundException(getEntityName(), id, \"update\");\n    }\n    T existingEntity = existing.get();\n    validateForUpdate(existingEntity, entity);\n    beforeUpdate(existingEntity, entity);\n    T updatedEntity = performUpdate(existingEntity, entity);\n    T savedEntity = repository.save(updatedEntity);\n    afterUpdate(savedEntity);\n    return savedEntity;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 4,
    "parameters" : [ "ID id", "T entity" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : true,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/AbstractService.java",
    "className" : "com.testproject.AbstractService",
    "startLine" : 39,
    "endLine" : 54,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : true,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.AbstractService.validateForCreation(com.testproject.BaseEntity)",
    "name" : "validateForCreation",
    "signature" : "validateForCreation(com.testproject.BaseEntity)",
    "returnType" : "void",
    "comment" : "",
    "body" : null,
    "visibility" : "protected",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "T entity" ],
    "isAbstract" : true,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/AbstractService.java",
    "className" : "com.testproject.AbstractService",
    "startLine" : 92,
    "endLine" : 92,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : true,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.AbstractService.validateForUpdate(com.testproject.BaseEntity,com.testproject.BaseEntity)",
    "name" : "validateForUpdate",
    "signature" : "validateForUpdate(com.testproject.BaseEntity,com.testproject.BaseEntity)",
    "returnType" : "void",
    "comment" : "",
    "body" : null,
    "visibility" : "protected",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "T existing", "T updated" ],
    "isAbstract" : true,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/AbstractService.java",
    "className" : "com.testproject.AbstractService",
    "startLine" : 93,
    "endLine" : 93,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : true,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.AbstractService.com.testproject.AbstractService(com.testproject.BaseRepository)",
    "name" : "<init>",
    "signature" : "com.testproject.AbstractService(com.testproject.BaseRepository)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    this.repository = repository;\n    initializeService();\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "com.testproject.BaseRepository repository" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/AbstractService.java",
    "className" : "com.testproject.AbstractService",
    "startLine" : 18,
    "endLine" : 21,
    "isConstructor" : true,
    "decorators" : null,
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.ApplicationConfig.cacheManager()",
    "name" : "cacheManager",
    "signature" : "cacheManager()",
    "returnType" : "com.testproject.CacheManager",
    "comment" : "",
    "body" : "{\n    com.testproject.CacheManager cacheManager = new com.testproject.CacheManager();\n    cacheManager.setCacheNames(java.util.Arrays.asList(\"users\", \"orders\", \"products\"));\n    return cacheManager;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/ApplicationConfig.java",
    "className" : "com.testproject.ApplicationConfig",
    "startLine" : 61,
    "endLine" : 65,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Bean",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.ApplicationConfig.createBean(java.lang.Class)",
    "name" : "createBean",
    "signature" : "createBean(java.lang.Class)",
    "returnType" : "T",
    "comment" : "Method with generic parameters\n",
    "body" : "{\n    try {\n        return beanClass.newInstance();\n    } catch (java.lang.Exception e) {\n        throw new java.lang.RuntimeException(\"Failed to create bean\", e);\n    }\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 2,
    "parameters" : [ "java.lang.Class beanClass" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/ApplicationConfig.java",
    "className" : "com.testproject.ApplicationConfig",
    "startLine" : 77,
    "endLine" : 83,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.ApplicationConfig.developmentDataSource()",
    "name" : "developmentDataSource",
    "signature" : "developmentDataSource()",
    "returnType" : "com.testproject.DataSource",
    "comment" : "",
    "body" : "{\n    com.testproject.DataSource dataSource = new com.testproject.DataSource();\n    dataSource.setUrl(\"jdbc:h2:mem:testdb\");\n    dataSource.setUsername(\"sa\");\n    dataSource.setPassword(\"\");\n    return dataSource;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/ApplicationConfig.java",
    "className" : "com.testproject.ApplicationConfig",
    "startLine" : 23,
    "endLine" : 29,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Bean",
      "arguments" : [ ],
      "properties" : { }
    }, {
      "name" : "Profile",
      "arguments" : [ "\"development\"" ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : true,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.ApplicationConfig.getApplicationVersion()",
    "name" : "getApplicationVersion",
    "signature" : "getApplicationVersion()",
    "returnType" : "java.lang.String",
    "comment" : "Static utility method\n",
    "body" : "{\n    return \"1.0.0\";\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : true,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/ApplicationConfig.java",
    "className" : "com.testproject.ApplicationConfig",
    "startLine" : 70,
    "endLine" : 72,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.ApplicationConfig.productionDataSource()",
    "name" : "productionDataSource",
    "signature" : "productionDataSource()",
    "returnType" : "com.testproject.DataSource",
    "comment" : "",
    "body" : "{\n    com.testproject.DataSource dataSource = new com.testproject.DataSource();\n    dataSource.setUrl(\"jdbc:postgresql://localhost:5432/proddb\");\n    dataSource.setUsername(\"prod_user\");\n    dataSource.setPassword(\"prod_password\");\n    return dataSource;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/ApplicationConfig.java",
    "className" : "com.testproject.ApplicationConfig",
    "startLine" : 33,
    "endLine" : 39,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Bean",
      "arguments" : [ ],
      "properties" : { }
    }, {
      "name" : "Profile",
      "arguments" : [ "\"production\"" ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.ApplicationConfig.securityProperties()",
    "name" : "securityProperties",
    "signature" : "securityProperties()",
    "returnType" : "com.testproject.SecurityProperties",
    "comment" : "",
    "body" : "{\n    return new com.testproject.SecurityProperties();\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/ApplicationConfig.java",
    "className" : "com.testproject.ApplicationConfig",
    "startLine" : 56,
    "endLine" : 58,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Bean",
      "arguments" : [ ],
      "properties" : { }
    }, {
      "name" : "ConfigurationProperties",
      "arguments" : [ "prefix=\"app.security\"" ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.ApplicationConfig.taskExecutor()",
    "name" : "taskExecutor",
    "signature" : "taskExecutor()",
    "returnType" : "java.util.concurrent.Executor",
    "comment" : "",
    "body" : "{\n    java.util.concurrent.ThreadPoolExecutor executor = // core pool size\n    // maximum pool size\n    // keep alive time\n    new java.util.concurrent.ThreadPoolExecutor(5, 10, 60, java.util.concurrent.TimeUnit.SECONDS, new java.util.concurrent.LinkedBlockingQueue<>());\n    executor.setThreadFactory(new com.testproject.ApplicationConfig.CustomThreadFactory());\n    return executor;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/ApplicationConfig.java",
    "className" : "com.testproject.ApplicationConfig",
    "startLine" : 42,
    "endLine" : 52,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Bean",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.BaseEntity.equals(java.lang.Object)",
    "name" : "equals",
    "signature" : "equals(java.lang.Object)",
    "returnType" : "boolean",
    "comment" : "",
    "body" : "{\n    if (this == obj) {\n        return true;\n    }\n    if ((obj == null) || (getClass() != obj.getClass())) {\n        return false;\n    }\n    com.testproject.BaseEntity that = ((com.testproject.BaseEntity) (obj));\n    return java.util.Objects.equals(id, that.id);\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 4,
    "parameters" : [ "java.lang.Object obj" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/BaseEntity.java",
    "className" : "com.testproject.BaseEntity",
    "startLine" : 171,
    "endLine" : 177,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.BaseEntity.getCreatedAt()",
    "name" : "getCreatedAt",
    "signature" : "getCreatedAt()",
    "returnType" : "java.time.LocalDateTime",
    "comment" : "",
    "body" : "{\n    return createdAt;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/BaseEntity.java",
    "className" : "com.testproject.BaseEntity",
    "startLine" : 64,
    "endLine" : 66,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.BaseEntity.getCreatedBy()",
    "name" : "getCreatedBy",
    "signature" : "getCreatedBy()",
    "returnType" : "java.lang.String",
    "comment" : "",
    "body" : "{\n    return createdBy;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/BaseEntity.java",
    "className" : "com.testproject.BaseEntity",
    "startLine" : 84,
    "endLine" : 86,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : true,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.BaseEntity.getEntityName()",
    "name" : "getEntityName",
    "signature" : "getEntityName()",
    "returnType" : "java.lang.String",
    "comment" : "Abstract method to be implemented by subclasses\n",
    "body" : null,
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : true,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/BaseEntity.java",
    "className" : "com.testproject.BaseEntity",
    "startLine" : 122,
    "endLine" : 122,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.BaseEntity.getId()",
    "name" : "getId",
    "signature" : "getId()",
    "returnType" : "java.lang.Long",
    "comment" : "",
    "body" : "{\n    return id;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/BaseEntity.java",
    "className" : "com.testproject.BaseEntity",
    "startLine" : 47,
    "endLine" : 49,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.BaseEntity.getUpdatedAt()",
    "name" : "getUpdatedAt",
    "signature" : "getUpdatedAt()",
    "returnType" : "java.time.LocalDateTime",
    "comment" : "",
    "body" : "{\n    return updatedAt;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/BaseEntity.java",
    "className" : "com.testproject.BaseEntity",
    "startLine" : 74,
    "endLine" : 76,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.BaseEntity.getUpdatedBy()",
    "name" : "getUpdatedBy",
    "signature" : "getUpdatedBy()",
    "returnType" : "java.lang.String",
    "comment" : "",
    "body" : "{\n    return updatedBy;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/BaseEntity.java",
    "className" : "com.testproject.BaseEntity",
    "startLine" : 94,
    "endLine" : 96,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.BaseEntity.getVersion()",
    "name" : "getVersion",
    "signature" : "getVersion()",
    "returnType" : "java.lang.String",
    "comment" : "",
    "body" : "{\n    return version;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/BaseEntity.java",
    "className" : "com.testproject.BaseEntity",
    "startLine" : 55,
    "endLine" : 57,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.BaseEntity.hashCode()",
    "name" : "hashCode",
    "signature" : "hashCode()",
    "returnType" : "int",
    "comment" : "",
    "body" : "{\n    return java.util.Objects.hash(id, getEntityName());\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/BaseEntity.java",
    "className" : "com.testproject.BaseEntity",
    "startLine" : 180,
    "endLine" : 182,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.BaseEntity.isActive()",
    "name" : "isActive",
    "signature" : "isActive()",
    "returnType" : "boolean",
    "comment" : "",
    "body" : "{\n    return active;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/BaseEntity.java",
    "className" : "com.testproject.BaseEntity",
    "startLine" : 111,
    "endLine" : 113,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.BaseEntity.isDeleted()",
    "name" : "isDeleted",
    "signature" : "isDeleted()",
    "returnType" : "boolean",
    "comment" : "",
    "body" : "{\n    return deleted;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/BaseEntity.java",
    "className" : "com.testproject.BaseEntity",
    "startLine" : 103,
    "endLine" : 105,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.BaseEntity.isSameType(com.testproject.BaseEntity)",
    "name" : "isSameType",
    "signature" : "isSameType(com.testproject.BaseEntity)",
    "returnType" : "boolean",
    "comment" : "Generic method with bounded type parameter\n",
    "body" : "{\n    return (other != null) && this.getClass().equals(other.getClass());\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 2,
    "parameters" : [ "T other" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/BaseEntity.java",
    "className" : "com.testproject.BaseEntity",
    "startLine" : 127,
    "endLine" : 129,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.BaseEntity.markAsUpdated(java.lang.String)",
    "name" : "markAsUpdated",
    "signature" : "markAsUpdated(java.lang.String)",
    "returnType" : "void",
    "comment" : "Method with complex logic demonstrating:\n- Local variables\n- Conditional statements\n- Method calls\n- Exception handling\n",
    "body" : "{\n    if ((updatedBy == null) || updatedBy.trim().isEmpty()) {\n        throw new com.testproject.ValidationException(\"UpdatedBy cannot be null or empty\");\n    }\n    java.time.LocalDateTime now = java.time.LocalDateTime.now();\n    this.updatedAt = now;\n    this.updatedBy = updatedBy;\n    // Update version\n    try {\n        double currentVersion = java.lang.Double.parseDouble(this.version);\n        this.version = java.lang.String.valueOf(currentVersion + 0.1);\n    } catch (java.lang.NumberFormatException e) {\n        this.version = \"1.1\";\n    }\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 4,
    "parameters" : [ "java.lang.String updatedBy" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/BaseEntity.java",
    "className" : "com.testproject.BaseEntity",
    "startLine" : 138,
    "endLine" : 154,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.BaseEntity.setActive(boolean)",
    "name" : "setActive",
    "signature" : "setActive(boolean)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    this.active = active;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "boolean active" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/BaseEntity.java",
    "className" : "com.testproject.BaseEntity",
    "startLine" : 115,
    "endLine" : 117,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.BaseEntity.setCreatedAt(java.time.LocalDateTime)",
    "name" : "setCreatedAt",
    "signature" : "setCreatedAt(java.time.LocalDateTime)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    this.createdAt = createdAt;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.time.LocalDateTime createdAt" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/BaseEntity.java",
    "className" : "com.testproject.BaseEntity",
    "startLine" : 69,
    "endLine" : 71,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.BaseEntity.setCreatedBy(java.lang.String)",
    "name" : "setCreatedBy",
    "signature" : "setCreatedBy(java.lang.String)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    this.createdBy = createdBy;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String createdBy" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/BaseEntity.java",
    "className" : "com.testproject.BaseEntity",
    "startLine" : 89,
    "endLine" : 91,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.BaseEntity.setDeleted(boolean)",
    "name" : "setDeleted",
    "signature" : "setDeleted(boolean)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    this.deleted = deleted;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "boolean deleted" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/BaseEntity.java",
    "className" : "com.testproject.BaseEntity",
    "startLine" : 107,
    "endLine" : 109,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.BaseEntity.setId(java.lang.Long)",
    "name" : "setId",
    "signature" : "setId(java.lang.Long)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    this.id = id;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.Long id" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/BaseEntity.java",
    "className" : "com.testproject.BaseEntity",
    "startLine" : 51,
    "endLine" : 53,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.BaseEntity.setUpdatedAt(java.time.LocalDateTime)",
    "name" : "setUpdatedAt",
    "signature" : "setUpdatedAt(java.time.LocalDateTime)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    this.updatedAt = updatedAt;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.time.LocalDateTime updatedAt" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/BaseEntity.java",
    "className" : "com.testproject.BaseEntity",
    "startLine" : 79,
    "endLine" : 81,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.BaseEntity.setUpdatedBy(java.lang.String)",
    "name" : "setUpdatedBy",
    "signature" : "setUpdatedBy(java.lang.String)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    this.updatedBy = updatedBy;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String updatedBy" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/BaseEntity.java",
    "className" : "com.testproject.BaseEntity",
    "startLine" : 99,
    "endLine" : 101,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.BaseEntity.setVersion(java.lang.String)",
    "name" : "setVersion",
    "signature" : "setVersion(java.lang.String)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    this.version = version;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String version" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/BaseEntity.java",
    "className" : "com.testproject.BaseEntity",
    "startLine" : 59,
    "endLine" : 61,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.BaseEntity.softDelete()",
    "name" : "softDelete",
    "signature" : "softDelete()",
    "returnType" : "void",
    "comment" : "Method demonstrating static method calls and type casting\n",
    "body" : "{\n    this.deleted = true;\n    this.active = false;\n    this.updatedAt = java.time.LocalDateTime.now();\n    // Log the deletion\n    java.lang.String message = java.lang.String.format(\"Entity %s with ID %d marked as deleted\", getEntityName(), getId());\n    java.lang.System.out.println(message);\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 2,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/BaseEntity.java",
    "className" : "com.testproject.BaseEntity",
    "startLine" : 159,
    "endLine" : 168,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.BaseEntity.toString()",
    "name" : "toString",
    "signature" : "toString()",
    "returnType" : "java.lang.String",
    "comment" : "",
    "body" : "{\n    return java.lang.String.format(\"%s{id=%d, version='%s', active=%s}\", getEntityName(), id, version, active);\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 2,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/BaseEntity.java",
    "className" : "com.testproject.BaseEntity",
    "startLine" : 185,
    "endLine" : 188,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : true,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.BaseEntity.com.testproject.BaseEntity()",
    "name" : "<init>",
    "signature" : "com.testproject.BaseEntity()",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    java.time.LocalDateTime now = java.time.LocalDateTime.now();\n    this.createdAt = now;\n    this.updatedAt = now;\n    this.deleted = false;\n    this.active = true;\n    this.version = \"1.0\";\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/BaseEntity.java",
    "className" : "com.testproject.BaseEntity",
    "startLine" : 26,
    "endLine" : 33,
    "isConstructor" : true,
    "decorators" : null,
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : true,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.BaseEntity.com.testproject.BaseEntity(java.lang.Long,java.lang.String)",
    "name" : "<init>",
    "signature" : "com.testproject.BaseEntity(java.lang.Long,java.lang.String)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    this(createdBy);\n    this.id = id;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.Long id", "java.lang.String createdBy" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/BaseEntity.java",
    "className" : "com.testproject.BaseEntity",
    "startLine" : 41,
    "endLine" : 44,
    "isConstructor" : true,
    "decorators" : null,
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : true,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.BaseEntity.com.testproject.BaseEntity(java.lang.String)",
    "name" : "<init>",
    "signature" : "com.testproject.BaseEntity(java.lang.String)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    this();\n    this.createdBy = createdBy;\n    this.updatedBy = createdBy;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String createdBy" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/BaseEntity.java",
    "className" : "com.testproject.BaseEntity",
    "startLine" : 35,
    "endLine" : 39,
    "isConstructor" : true,
    "decorators" : null,
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.Role.getEntityName()",
    "name" : "getEntityName",
    "signature" : "getEntityName()",
    "returnType" : "java.lang.String",
    "comment" : "",
    "body" : "{\n    return \"Role\";\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "className" : "com.testproject.Role",
    "startLine" : 29,
    "endLine" : 31,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.Role.getName()",
    "name" : "getName",
    "signature" : "getName()",
    "returnType" : "java.lang.String",
    "comment" : "",
    "body" : "{\n    return name;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "className" : "com.testproject.Role",
    "startLine" : 33,
    "endLine" : 33,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.Role.setName(java.lang.String)",
    "name" : "setName",
    "signature" : "setName(java.lang.String)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    this.name = name;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String name" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "className" : "com.testproject.Role",
    "startLine" : 34,
    "endLine" : 34,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : true,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.Role.com.testproject.Role()",
    "name" : "<init>",
    "signature" : "com.testproject.Role()",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    this.permissions = new java.util.HashSet<>();\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "className" : "com.testproject.Role",
    "startLine" : 24,
    "endLine" : 26,
    "isConstructor" : true,
    "decorators" : null,
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.Permission.getName()",
    "name" : "getName",
    "signature" : "getName()",
    "returnType" : "java.lang.String",
    "comment" : "",
    "body" : "{\n    return name;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "className" : "com.testproject.Permission",
    "startLine" : 42,
    "endLine" : 42,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.Permission.setName(java.lang.String)",
    "name" : "setName",
    "signature" : "setName(java.lang.String)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    this.name = name;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String name" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "className" : "com.testproject.Permission",
    "startLine" : 43,
    "endLine" : 43,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.OrderItem.getEntityName()",
    "name" : "getEntityName",
    "signature" : "getEntityName()",
    "returnType" : "java.lang.String",
    "comment" : "",
    "body" : "{\n    return \"OrderItem\";\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "className" : "com.testproject.OrderItem",
    "startLine" : 68,
    "endLine" : 70,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.OrderItem.getOrder()",
    "name" : "getOrder",
    "signature" : "getOrder()",
    "returnType" : "com.testproject.Order",
    "comment" : "",
    "body" : "{\n    return order;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "className" : "com.testproject.OrderItem",
    "startLine" : 72,
    "endLine" : 72,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.OrderItem.getPrice()",
    "name" : "getPrice",
    "signature" : "getPrice()",
    "returnType" : "java.math.BigDecimal",
    "comment" : "",
    "body" : "{\n    return price;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "className" : "com.testproject.OrderItem",
    "startLine" : 78,
    "endLine" : 78,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.OrderItem.getProduct()",
    "name" : "getProduct",
    "signature" : "getProduct()",
    "returnType" : "com.testproject.Product",
    "comment" : "",
    "body" : "{\n    return product;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "className" : "com.testproject.OrderItem",
    "startLine" : 74,
    "endLine" : 74,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.OrderItem.getQuantity()",
    "name" : "getQuantity",
    "signature" : "getQuantity()",
    "returnType" : "int",
    "comment" : "",
    "body" : "{\n    return quantity;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "className" : "com.testproject.OrderItem",
    "startLine" : 76,
    "endLine" : 76,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.OrderItem.setOrder(com.testproject.Order)",
    "name" : "setOrder",
    "signature" : "setOrder(com.testproject.Order)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    this.order = order;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "com.testproject.Order order" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "className" : "com.testproject.OrderItem",
    "startLine" : 73,
    "endLine" : 73,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.OrderItem.setPrice(java.math.BigDecimal)",
    "name" : "setPrice",
    "signature" : "setPrice(java.math.BigDecimal)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    this.price = price;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.math.BigDecimal price" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "className" : "com.testproject.OrderItem",
    "startLine" : 79,
    "endLine" : 79,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.OrderItem.setProduct(com.testproject.Product)",
    "name" : "setProduct",
    "signature" : "setProduct(com.testproject.Product)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    this.product = product;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "com.testproject.Product product" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "className" : "com.testproject.OrderItem",
    "startLine" : 75,
    "endLine" : 75,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.OrderItem.setQuantity(int)",
    "name" : "setQuantity",
    "signature" : "setQuantity(int)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    this.quantity = quantity;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "int quantity" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "className" : "com.testproject.OrderItem",
    "startLine" : 77,
    "endLine" : 77,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.Product.getCategory()",
    "name" : "getCategory",
    "signature" : "getCategory()",
    "returnType" : "java.lang.String",
    "comment" : "",
    "body" : "{\n    return category;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "className" : "com.testproject.Product",
    "startLine" : 95,
    "endLine" : 95,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.Product.getEntityName()",
    "name" : "getEntityName",
    "signature" : "getEntityName()",
    "returnType" : "java.lang.String",
    "comment" : "",
    "body" : "{\n    return \"Product\";\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "className" : "com.testproject.Product",
    "startLine" : 89,
    "endLine" : 91,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.Product.getName()",
    "name" : "getName",
    "signature" : "getName()",
    "returnType" : "java.lang.String",
    "comment" : "",
    "body" : "{\n    return name;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "className" : "com.testproject.Product",
    "startLine" : 93,
    "endLine" : 93,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.Product.getPrice()",
    "name" : "getPrice",
    "signature" : "getPrice()",
    "returnType" : "java.math.BigDecimal",
    "comment" : "",
    "body" : "{\n    return price;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "className" : "com.testproject.Product",
    "startLine" : 97,
    "endLine" : 97,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.Product.setCategory(java.lang.String)",
    "name" : "setCategory",
    "signature" : "setCategory(java.lang.String)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    this.category = category;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String category" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "className" : "com.testproject.Product",
    "startLine" : 96,
    "endLine" : 96,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.Product.setName(java.lang.String)",
    "name" : "setName",
    "signature" : "setName(java.lang.String)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    this.name = name;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String name" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "className" : "com.testproject.Product",
    "startLine" : 94,
    "endLine" : 94,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.Product.setPrice(java.math.BigDecimal)",
    "name" : "setPrice",
    "signature" : "setPrice(java.math.BigDecimal)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    this.price = price;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.math.BigDecimal price" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "className" : "com.testproject.Product",
    "startLine" : 98,
    "endLine" : 98,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.ShippingAddress.getEntityName()",
    "name" : "getEntityName",
    "signature" : "getEntityName()",
    "returnType" : "java.lang.String",
    "comment" : "",
    "body" : "{\n    return \"ShippingAddress\";\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "className" : "com.testproject.ShippingAddress",
    "startLine" : 109,
    "endLine" : 111,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserDto.getId()",
    "name" : "getId",
    "signature" : "getId()",
    "returnType" : "java.lang.Long",
    "comment" : "",
    "body" : "{\n    return id;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "className" : "com.testproject.UserDto",
    "startLine" : 193,
    "endLine" : 193,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserDto.getUsername()",
    "name" : "getUsername",
    "signature" : "getUsername()",
    "returnType" : "java.lang.String",
    "comment" : "",
    "body" : "{\n    return username;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "className" : "com.testproject.UserDto",
    "startLine" : 195,
    "endLine" : 195,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserDto.setId(java.lang.Long)",
    "name" : "setId",
    "signature" : "setId(java.lang.Long)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    this.id = id;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.Long id" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "className" : "com.testproject.UserDto",
    "startLine" : 194,
    "endLine" : 194,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserDto.setUsername(java.lang.String)",
    "name" : "setUsername",
    "signature" : "setUsername(java.lang.String)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    this.username = username;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String username" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "className" : "com.testproject.UserDto",
    "startLine" : 196,
    "endLine" : 196,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : true,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserDto.com.testproject.UserDto()",
    "name" : "<init>",
    "signature" : "com.testproject.UserDto()",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "className" : "com.testproject.UserDto",
    "startLine" : 181,
    "endLine" : 181,
    "isConstructor" : true,
    "decorators" : null,
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : true,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserDto.com.testproject.UserDto(com.testproject.User)",
    "name" : "<init>",
    "signature" : "com.testproject.UserDto(com.testproject.User)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    this.id = user.getId();\n    this.username = user.getUsername();\n    this.email = user.getEmail();\n    this.firstName = user.getFirstName();\n    this.lastName = user.getLastName();\n    this.status = user.getStatus();\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "com.testproject.User user" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "className" : "com.testproject.UserDto",
    "startLine" : 183,
    "endLine" : 190,
    "isConstructor" : true,
    "decorators" : null,
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : true,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.OrderDto.com.testproject.OrderDto()",
    "name" : "<init>",
    "signature" : "com.testproject.OrderDto()",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "className" : "com.testproject.OrderDto",
    "startLine" : 205,
    "endLine" : 205,
    "isConstructor" : true,
    "decorators" : null,
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : true,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.OrderDto.com.testproject.OrderDto(com.testproject.Order)",
    "name" : "<init>",
    "signature" : "com.testproject.OrderDto(com.testproject.Order)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    this.id = order.getId();\n    this.orderNumber = order.getOrderNumber();\n    this.status = order.getStatus();\n    this.totalAmount = order.getTotalAmount();\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "com.testproject.Order order" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "className" : "com.testproject.OrderDto",
    "startLine" : 207,
    "endLine" : 212,
    "isConstructor" : true,
    "decorators" : null,
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.CreateUserRequest.getUsername()",
    "name" : "getUsername",
    "signature" : "getUsername()",
    "returnType" : "java.lang.String",
    "comment" : "",
    "body" : "{\n    return username;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "className" : "com.testproject.CreateUserRequest",
    "startLine" : 224,
    "endLine" : 224,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.CreateUserRequest.setUsername(java.lang.String)",
    "name" : "setUsername",
    "signature" : "setUsername(java.lang.String)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    this.username = username;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String username" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "className" : "com.testproject.CreateUserRequest",
    "startLine" : 225,
    "endLine" : 225,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserMapper.toDto(com.testproject.User)",
    "name" : "toDto",
    "signature" : "toDto(com.testproject.User)",
    "returnType" : "com.testproject.UserDto",
    "comment" : "",
    "body" : "{\n    return new com.testproject.UserDto(user);\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "com.testproject.User user" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "className" : "com.testproject.UserMapper",
    "startLine" : 253,
    "endLine" : 255,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserMapper.toDto(java.util.List)",
    "name" : "toDto",
    "signature" : "toDto(java.util.List)",
    "returnType" : "java.util.List",
    "comment" : "",
    "body" : "{\n    java.util.List<com.testproject.UserDto> dtos = new java.util.ArrayList<>();\n    for (com.testproject.User user : users) {\n        dtos.add(toDto(user));\n    }\n    return dtos;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 2,
    "parameters" : [ "java.util.List users" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "className" : "com.testproject.UserMapper",
    "startLine" : 257,
    "endLine" : 263,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserMapper.toEntity(com.testproject.CreateUserRequest)",
    "name" : "toEntity",
    "signature" : "toEntity(com.testproject.CreateUserRequest)",
    "returnType" : "com.testproject.User",
    "comment" : "",
    "body" : "{\n    com.testproject.User user = new com.testproject.User();\n    user.setUsername(request.getUsername());\n    user.setEmail(request.getEmail());\n    return user;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "com.testproject.CreateUserRequest request" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "className" : "com.testproject.UserMapper",
    "startLine" : 265,
    "endLine" : 270,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserMapper.updateEntity(com.testproject.User,com.testproject.UpdateUserRequest)",
    "name" : "updateEntity",
    "signature" : "updateEntity(com.testproject.User,com.testproject.UpdateUserRequest)",
    "returnType" : "com.testproject.User",
    "comment" : "",
    "body" : "{\n    user.setFirstName(request.getFirstName());\n    user.setLastName(request.getLastName());\n    return user;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "com.testproject.User user", "com.testproject.UpdateUserRequest request" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "className" : "com.testproject.UserMapper",
    "startLine" : 272,
    "endLine" : 276,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.DataSource.getPassword()",
    "name" : "getPassword",
    "signature" : "getPassword()",
    "returnType" : "java.lang.String",
    "comment" : "",
    "body" : "{\n    return password;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "className" : "com.testproject.DataSource",
    "startLine" : 290,
    "endLine" : 290,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.DataSource.getUrl()",
    "name" : "getUrl",
    "signature" : "getUrl()",
    "returnType" : "java.lang.String",
    "comment" : "",
    "body" : "{\n    return url;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "className" : "com.testproject.DataSource",
    "startLine" : 286,
    "endLine" : 286,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.DataSource.getUsername()",
    "name" : "getUsername",
    "signature" : "getUsername()",
    "returnType" : "java.lang.String",
    "comment" : "",
    "body" : "{\n    return username;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "className" : "com.testproject.DataSource",
    "startLine" : 288,
    "endLine" : 288,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.DataSource.setPassword(java.lang.String)",
    "name" : "setPassword",
    "signature" : "setPassword(java.lang.String)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    this.password = password;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String password" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "className" : "com.testproject.DataSource",
    "startLine" : 291,
    "endLine" : 291,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.DataSource.setUrl(java.lang.String)",
    "name" : "setUrl",
    "signature" : "setUrl(java.lang.String)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    this.url = url;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String url" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "className" : "com.testproject.DataSource",
    "startLine" : 287,
    "endLine" : 287,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.DataSource.setUsername(java.lang.String)",
    "name" : "setUsername",
    "signature" : "setUsername(java.lang.String)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    this.username = username;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String username" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "className" : "com.testproject.DataSource",
    "startLine" : 289,
    "endLine" : 289,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.CacheManager.getCacheNames()",
    "name" : "getCacheNames",
    "signature" : "getCacheNames()",
    "returnType" : "java.util.List",
    "comment" : "",
    "body" : "{\n    return cacheNames;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "className" : "com.testproject.CacheManager",
    "startLine" : 305,
    "endLine" : 305,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.CacheManager.setCacheNames(java.util.List)",
    "name" : "setCacheNames",
    "signature" : "setCacheNames(java.util.List)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    this.cacheNames = cacheNames;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.util.List cacheNames" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/CompleteTestClasses.java",
    "className" : "com.testproject.CacheManager",
    "startLine" : 306,
    "endLine" : 306,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : true,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.GenericUtils.mapList(java.util.List,java.util.function.Function)",
    "name" : "mapList",
    "signature" : "mapList(java.util.List,java.util.function.Function)",
    "returnType" : "java.util.List",
    "comment" : "Static method with complex generics\n",
    "body" : "{\n    java.util.List<R> result = new java.util.ArrayList<>();\n    for (T item : source) {\n        result.add(mapper.apply(item));\n    }\n    return result;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 2,
    "parameters" : [ "java.util.List source", "java.util.function.Function mapper" ],
    "isAbstract" : false,
    "isStatic" : true,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.GenericUtils",
    "startLine" : 71,
    "endLine" : 77,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : true,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.GenericUtils.sortMapByValue(java.util.Map)",
    "name" : "sortMapByValue",
    "signature" : "sortMapByValue(java.util.Map)",
    "returnType" : "java.util.Map",
    "comment" : "Method with multiple type parameters and wildcards\n",
    "body" : "{\n    return map.entrySet().stream().sorted(java.util.Map.Entry.<K, V>comparingByValue()).collect(java.util.LinkedHashMap::new, (m, e) -> m.put(e.getKey(), e.getValue()), java.util.LinkedHashMap::putAll);\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.util.Map map" ],
    "isAbstract" : false,
    "isStatic" : true,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.GenericUtils",
    "startLine" : 82,
    "endLine" : 88,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : true,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.BaseService.initialize()",
    "name" : "initialize",
    "signature" : "initialize()",
    "returnType" : "void",
    "comment" : "",
    "body" : null,
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : true,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.BaseService",
    "startLine" : 103,
    "endLine" : 103,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.BaseService.logMessage(java.lang.String)",
    "name" : "logMessage",
    "signature" : "logMessage(java.lang.String)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    java.lang.System.out.println(((\"[\" + serviceName) + \"] \") + message);\n}",
    "visibility" : "protected",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String message" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.BaseService",
    "startLine" : 106,
    "endLine" : 108,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : true,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.BaseService.shutdown()",
    "name" : "shutdown",
    "signature" : "shutdown()",
    "returnType" : "void",
    "comment" : "",
    "body" : null,
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : true,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.BaseService",
    "startLine" : 104,
    "endLine" : 104,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : true,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.BaseService.com.testproject.BaseService(java.lang.String)",
    "name" : "<init>",
    "signature" : "com.testproject.BaseService(java.lang.String)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    this.serviceName = serviceName;\n}",
    "visibility" : "protected",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String serviceName" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.BaseService",
    "startLine" : 99,
    "endLine" : 101,
    "isConstructor" : true,
    "decorators" : null,
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : true,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.CacheableService.cacheValue(java.lang.String,java.lang.Object)",
    "name" : "cacheValue",
    "signature" : "cacheValue(java.lang.String,java.lang.Object)",
    "returnType" : "void",
    "comment" : "",
    "body" : null,
    "visibility" : "protected",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String key", "java.lang.Object value" ],
    "isAbstract" : true,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.CacheableService",
    "startLine" : 199,
    "endLine" : 199,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.CacheableService.clearCache()",
    "name" : "clearCache",
    "signature" : "clearCache()",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    cache.clear();\n    recordMetric(\"cache.cleared\", java.time.LocalDateTime.now());\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.CacheableService",
    "startLine" : 149,
    "endLine" : 152,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.CacheableService.getCacheSize()",
    "name" : "getCacheSize",
    "signature" : "getCacheSize()",
    "returnType" : "long",
    "comment" : "",
    "body" : "{\n    return cache.size();\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.CacheableService",
    "startLine" : 155,
    "endLine" : 157,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : true,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.CacheableService.getCachedValue(java.lang.String,java.lang.Class)",
    "name" : "getCachedValue",
    "signature" : "getCachedValue(java.lang.String,java.lang.Class)",
    "returnType" : "T",
    "comment" : "",
    "body" : null,
    "visibility" : "protected",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String key", "java.lang.Class type" ],
    "isAbstract" : true,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.CacheableService",
    "startLine" : 170,
    "endLine" : 170,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.CacheableService.getMetrics()",
    "name" : "getMetrics",
    "signature" : "getMetrics()",
    "returnType" : "java.util.Map",
    "comment" : "",
    "body" : "{\n    return new java.util.HashMap<>(metrics);\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.CacheableService",
    "startLine" : 160,
    "endLine" : 162,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : true,
    "id" : "comprehensive-test-project:com.testproject.CacheableService.processWithCache(java.lang.String,java.util.function.Supplier,java.lang.Class)",
    "name" : "processWithCache",
    "signature" : "processWithCache(java.lang.String,java.util.function.Supplier,java.lang.Class)",
    "returnType" : "T",
    "comment" : "",
    "body" : "{\n    long startTime = java.lang.System.currentTimeMillis();\n    try {\n        // Check cache first\n        T cached = getCachedValue(key, type);\n        if (cached != null) {\n            recordMetric(\"cache.hits\", ((java.lang.Long) (metrics.getOrDefault(\"cache.hits\", 0L))) + 1);\n            return cached;\n        }\n        // Execute supplier\n        T result = supplier.get();\n        // Cache result\n        cacheValue(key, result);\n        recordMetric(\"cache.misses\", ((java.lang.Long) (metrics.getOrDefault(\"cache.misses\", 0L))) + 1);\n        return result;\n    } finally {\n        long executionTime = java.lang.System.currentTimeMillis() - startTime;\n        recordExecutionTime(\"processWithCache\", executionTime);\n    }\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 2,
    "parameters" : [ "java.lang.String key", "java.util.function.Supplier supplier", "java.lang.Class type" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : true,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.CacheableService",
    "startLine" : 173,
    "endLine" : 197,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.CacheableService.recordMetric(java.lang.String,java.lang.Object)",
    "name" : "recordMetric",
    "signature" : "recordMetric(java.lang.String,java.lang.Object)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    metrics.put(name, value);\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String name", "java.lang.Object value" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.CacheableService",
    "startLine" : 165,
    "endLine" : 167,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : true,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.CacheableService.com.testproject.CacheableService(java.lang.String)",
    "name" : "<init>",
    "signature" : "com.testproject.CacheableService(java.lang.String)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    super(serviceName);\n    this.cache = new java.util.concurrent.ConcurrentHashMap<>();\n    this.metrics = new java.util.concurrent.ConcurrentHashMap<>();\n}",
    "visibility" : "protected",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String serviceName" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.CacheableService",
    "startLine" : 142,
    "endLine" : 146,
    "isConstructor" : true,
    "decorators" : null,
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.BusinessException.addContext(java.lang.String,java.lang.Object)",
    "name" : "addContext",
    "signature" : "addContext(java.lang.String,java.lang.Object)",
    "returnType" : "com.testproject.BusinessException",
    "comment" : "",
    "body" : "{\n    this.context.put(key, value);\n    return this;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String key", "java.lang.Object value" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.BusinessException",
    "startLine" : 231,
    "endLine" : 234,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : true,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.BusinessException.getBusinessMessage()",
    "name" : "getBusinessMessage",
    "signature" : "getBusinessMessage()",
    "returnType" : "java.lang.String",
    "comment" : "",
    "body" : null,
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : true,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.BusinessException",
    "startLine" : 236,
    "endLine" : 236,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.BusinessException.getContext()",
    "name" : "getContext",
    "signature" : "getContext()",
    "returnType" : "java.util.Map",
    "comment" : "",
    "body" : "{\n    return new java.util.HashMap<>(context);\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.BusinessException",
    "startLine" : 227,
    "endLine" : 229,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.BusinessException.getErrorCode()",
    "name" : "getErrorCode",
    "signature" : "getErrorCode()",
    "returnType" : "java.lang.String",
    "comment" : "",
    "body" : "{\n    return errorCode;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.BusinessException",
    "startLine" : 223,
    "endLine" : 225,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : true,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.BusinessException.com.testproject.BusinessException(java.lang.String,java.lang.String)",
    "name" : "<init>",
    "signature" : "com.testproject.BusinessException(java.lang.String,java.lang.String)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    super(message);\n    this.errorCode = errorCode;\n    this.context = new java.util.HashMap<>();\n}",
    "visibility" : "protected",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String errorCode", "java.lang.String message" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.BusinessException",
    "startLine" : 211,
    "endLine" : 215,
    "isConstructor" : true,
    "decorators" : null,
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : true,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.BusinessException.com.testproject.BusinessException(java.lang.String,java.lang.String,java.lang.Throwable)",
    "name" : "<init>",
    "signature" : "com.testproject.BusinessException(java.lang.String,java.lang.String,java.lang.Throwable)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    super(message, cause);\n    this.errorCode = errorCode;\n    this.context = new java.util.HashMap<>();\n}",
    "visibility" : "protected",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String errorCode", "java.lang.String message", "java.lang.Throwable cause" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.BusinessException",
    "startLine" : 217,
    "endLine" : 221,
    "isConstructor" : true,
    "decorators" : null,
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.PaymentException.getBusinessMessage()",
    "name" : "getBusinessMessage",
    "signature" : "getBusinessMessage()",
    "returnType" : "java.lang.String",
    "comment" : "",
    "body" : "{\n    return \"Payment processing failed: \" + getMessage();\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.PaymentException",
    "startLine" : 252,
    "endLine" : 254,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : true,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.PaymentException.com.testproject.PaymentException(java.lang.String)",
    "name" : "<init>",
    "signature" : "com.testproject.PaymentException(java.lang.String)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    super(\"PAYMENT_ERROR\", message);\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String message" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.PaymentException",
    "startLine" : 243,
    "endLine" : 245,
    "isConstructor" : true,
    "decorators" : null,
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : true,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.PaymentException.com.testproject.PaymentException(java.lang.String,java.lang.Throwable)",
    "name" : "<init>",
    "signature" : "com.testproject.PaymentException(java.lang.String,java.lang.Throwable)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    super(\"PAYMENT_ERROR\", message, cause);\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String message", "java.lang.Throwable cause" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.PaymentException",
    "startLine" : 247,
    "endLine" : 249,
    "isConstructor" : true,
    "decorators" : null,
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : true,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.PaymentServiceException.com.testproject.PaymentServiceException(java.lang.String)",
    "name" : "<init>",
    "signature" : "com.testproject.PaymentServiceException(java.lang.String)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    super(message);\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String message" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.PaymentServiceException",
    "startLine" : 258,
    "endLine" : 260,
    "isConstructor" : true,
    "decorators" : null,
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : true,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.PaymentServiceException.com.testproject.PaymentServiceException(java.lang.String,java.lang.Throwable)",
    "name" : "<init>",
    "signature" : "com.testproject.PaymentServiceException(java.lang.String,java.lang.Throwable)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    super(message, cause);\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String message", "java.lang.Throwable cause" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.PaymentServiceException",
    "startLine" : 262,
    "endLine" : 264,
    "isConstructor" : true,
    "decorators" : null,
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.NotificationService.cacheValue(java.lang.String,java.lang.Object)",
    "name" : "cacheValue",
    "signature" : "cacheValue(java.lang.String,java.lang.Object)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    cache.put(key, value);\n}",
    "visibility" : "protected",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String key", "java.lang.Object value" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.NotificationService",
    "startLine" : 305,
    "endLine" : 307,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.NotificationService.formatOrderTemplate(java.lang.String,com.testproject.Order)",
    "name" : "formatOrderTemplate",
    "signature" : "formatOrderTemplate(java.lang.String,com.testproject.Order)",
    "returnType" : "java.lang.String",
    "comment" : "",
    "body" : "{\n    return template.replace(\"{orderNumber}\", order.getOrderNumber()).replace(\"{total}\", order.getTotalAmount().toString());\n}",
    "visibility" : "private",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String template", "com.testproject.Order order" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.NotificationService",
    "startLine" : 374,
    "endLine" : 377,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.NotificationService.formatTemplate(java.lang.String,com.testproject.User)",
    "name" : "formatTemplate",
    "signature" : "formatTemplate(java.lang.String,com.testproject.User)",
    "returnType" : "java.lang.String",
    "comment" : "",
    "body" : "{\n    return template.replace(\"{username}\", user.getUsername()).replace(\"{email}\", user.getEmail());\n}",
    "visibility" : "private",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String template", "com.testproject.User user" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.NotificationService",
    "startLine" : 369,
    "endLine" : 372,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.NotificationService.getCachedValue(java.lang.String,java.lang.Class)",
    "name" : "getCachedValue",
    "signature" : "getCachedValue(java.lang.String,java.lang.Class)",
    "returnType" : "T",
    "comment" : "",
    "body" : "{\n    java.lang.Object value = cache.get(key);\n    if ((value != null) && type.isInstance(value)) {\n        return type.cast(value);\n    }\n    return null;\n}",
    "visibility" : "protected",
    "cyclomaticComplexity" : 3,
    "parameters" : [ "java.lang.String key", "java.lang.Class type" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.NotificationService",
    "startLine" : 296,
    "endLine" : 302,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.NotificationService.initialize()",
    "name" : "initialize",
    "signature" : "initialize()",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    logMessage(\"Initializing notification service\");\n    emailService.initialize();\n    smsService.initialize();\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 2,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.NotificationService",
    "startLine" : 281,
    "endLine" : 285,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.NotificationService.loadEmailTemplate(java.lang.String)",
    "name" : "loadEmailTemplate",
    "signature" : "loadEmailTemplate(java.lang.String)",
    "returnType" : "java.lang.String",
    "comment" : "",
    "body" : "{\n    // Simulate loading template\n    return \"Template for \" + templateName;\n}",
    "visibility" : "private",
    "cyclomaticComplexity" : 2,
    "parameters" : [ "java.lang.String templateName" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.NotificationService",
    "startLine" : 364,
    "endLine" : 367,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.NotificationService.sendAccountActivatedEmail(com.testproject.User)",
    "name" : "sendAccountActivatedEmail",
    "signature" : "sendAccountActivatedEmail(com.testproject.User)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    // Implementation\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "com.testproject.User user" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.NotificationService",
    "startLine" : 352,
    "endLine" : 354,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.NotificationService.sendAccountBlockedEmail(com.testproject.User)",
    "name" : "sendAccountBlockedEmail",
    "signature" : "sendAccountBlockedEmail(com.testproject.User)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    // Implementation\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "com.testproject.User user" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.NotificationService",
    "startLine" : 356,
    "endLine" : 358,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.NotificationService.sendAccountDeactivatedEmail(com.testproject.User)",
    "name" : "sendAccountDeactivatedEmail",
    "signature" : "sendAccountDeactivatedEmail(com.testproject.User)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    // Implementation\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "com.testproject.User user" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.NotificationService",
    "startLine" : 360,
    "endLine" : 362,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.NotificationService.sendCancellationNotification(com.testproject.Order)",
    "name" : "sendCancellationNotification",
    "signature" : "sendCancellationNotification(com.testproject.Order)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    // Implementation\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "com.testproject.Order order" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.NotificationService",
    "startLine" : 348,
    "endLine" : 350,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.NotificationService.sendDeliveryConfirmation(com.testproject.Order)",
    "name" : "sendDeliveryConfirmation",
    "signature" : "sendDeliveryConfirmation(com.testproject.Order)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    // Implementation\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "com.testproject.Order order" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.NotificationService",
    "startLine" : 344,
    "endLine" : 346,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.NotificationService.sendOrderConfirmation(com.testproject.Order)",
    "name" : "sendOrderConfirmation",
    "signature" : "sendOrderConfirmation(com.testproject.Order)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    java.util.concurrent.CompletableFuture.runAsync(() -> {\n        try {\n            java.lang.String template = loadEmailTemplate(\"order_confirmation\");\n            java.lang.String content = formatOrderTemplate(template, order);\n            emailService.sendEmail(order.getUser().getEmail(), \"Order Confirmed\", content);\n            // Also send SMS if phone number available\n            if (order.getShippingAddress() != null) {\n                smsService.sendSms(\"123-456-7890\", (\"Your order \" + order.getOrderNumber()) + \" has been confirmed\");\n            }\n        } catch (java.lang.Exception e) {\n            logMessage(\"Failed to send order confirmation: \" + e.getMessage());\n        }\n    });\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 5,
    "parameters" : [ "com.testproject.Order order" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.NotificationService",
    "startLine" : 318,
    "endLine" : 334,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.NotificationService.sendPaymentConfirmation(com.testproject.Order,com.testproject.PaymentResult)",
    "name" : "sendPaymentConfirmation",
    "signature" : "sendPaymentConfirmation(com.testproject.Order,com.testproject.PaymentResult)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    // Implementation\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "com.testproject.Order order", "com.testproject.PaymentResult result" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.NotificationService",
    "startLine" : 336,
    "endLine" : 338,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.NotificationService.sendShippingNotification(com.testproject.Order)",
    "name" : "sendShippingNotification",
    "signature" : "sendShippingNotification(com.testproject.Order)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    // Implementation\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "com.testproject.Order order" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.NotificationService",
    "startLine" : 340,
    "endLine" : 342,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.NotificationService.sendWelcomeEmail(com.testproject.User)",
    "name" : "sendWelcomeEmail",
    "signature" : "sendWelcomeEmail(com.testproject.User)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    java.lang.String templateKey = \"welcome_email_template\";\n    java.lang.String template = processWithCache(templateKey, () -> loadEmailTemplate(\"welcome\"), java.lang.String.class);\n    emailService.sendEmail(user.getEmail(), \"Welcome!\", formatTemplate(template, user));\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 2,
    "parameters" : [ "com.testproject.User user" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.NotificationService",
    "startLine" : 310,
    "endLine" : 316,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.NotificationService.shutdown()",
    "name" : "shutdown",
    "signature" : "shutdown()",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    logMessage(\"Shutting down notification service\");\n    emailService.shutdown();\n    smsService.shutdown();\n    clearCache();\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 2,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.NotificationService",
    "startLine" : 288,
    "endLine" : 293,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : true,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.NotificationService.com.testproject.NotificationService(com.testproject.EmailService,com.testproject.SmsService)",
    "name" : "<init>",
    "signature" : "com.testproject.NotificationService(com.testproject.EmailService,com.testproject.SmsService)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    super(\"NotificationService\");\n    this.emailService = emailService;\n    this.smsService = smsService;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 2,
    "parameters" : [ "com.testproject.EmailService emailService", "com.testproject.SmsService smsService" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.NotificationService",
    "startLine" : 274,
    "endLine" : 278,
    "isConstructor" : true,
    "decorators" : null,
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.EmailService.initialize()",
    "name" : "initialize",
    "signature" : "initialize()",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    logMessage(\"Email service initialized\");\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.EmailService",
    "startLine" : 388,
    "endLine" : 390,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.EmailService.sendEmail(java.lang.String,java.lang.String,java.lang.String)",
    "name" : "sendEmail",
    "signature" : "sendEmail(java.lang.String,java.lang.String,java.lang.String)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    logMessage(java.lang.String.format(\"Sending email to %s: %s\", to, subject));\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 2,
    "parameters" : [ "java.lang.String to", "java.lang.String subject", "java.lang.String content" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.EmailService",
    "startLine" : 397,
    "endLine" : 399,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.EmailService.shutdown()",
    "name" : "shutdown",
    "signature" : "shutdown()",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    logMessage(\"Email service shutdown\");\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.EmailService",
    "startLine" : 393,
    "endLine" : 395,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : true,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.EmailService.com.testproject.EmailService()",
    "name" : "<init>",
    "signature" : "com.testproject.EmailService()",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    super(\"EmailService\");\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.EmailService",
    "startLine" : 383,
    "endLine" : 385,
    "isConstructor" : true,
    "decorators" : null,
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.SmsService.initialize()",
    "name" : "initialize",
    "signature" : "initialize()",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    logMessage(\"SMS service initialized\");\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.SmsService",
    "startLine" : 408,
    "endLine" : 410,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.SmsService.sendSms(java.lang.String,java.lang.String)",
    "name" : "sendSms",
    "signature" : "sendSms(java.lang.String,java.lang.String)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    logMessage(java.lang.String.format(\"Sending SMS to %s: %s\", phoneNumber, message));\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 2,
    "parameters" : [ "java.lang.String phoneNumber", "java.lang.String message" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.SmsService",
    "startLine" : 417,
    "endLine" : 419,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.SmsService.shutdown()",
    "name" : "shutdown",
    "signature" : "shutdown()",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    logMessage(\"SMS service shutdown\");\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.SmsService",
    "startLine" : 413,
    "endLine" : 415,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : true,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.SmsService.com.testproject.SmsService()",
    "name" : "<init>",
    "signature" : "com.testproject.SmsService()",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    super(\"SmsService\");\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.SmsService",
    "startLine" : 403,
    "endLine" : 405,
    "isConstructor" : true,
    "decorators" : null,
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.ProductService.getEntityName()",
    "name" : "getEntityName",
    "signature" : "getEntityName()",
    "returnType" : "java.lang.String",
    "comment" : "",
    "body" : "{\n    return \"Product\";\n}",
    "visibility" : "protected",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.ProductService",
    "startLine" : 433,
    "endLine" : 435,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.ProductService.performUpdate(com.testproject.Product,com.testproject.Product)",
    "name" : "performUpdate",
    "signature" : "performUpdate(com.testproject.Product,com.testproject.Product)",
    "returnType" : "com.testproject.Product",
    "comment" : "",
    "body" : "{\n    // Update logic\n    return existing;\n}",
    "visibility" : "protected",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "com.testproject.Product existing", "com.testproject.Product updated" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.ProductService",
    "startLine" : 453,
    "endLine" : 456,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.ProductService.releaseInventory(java.lang.Long,int)",
    "name" : "releaseInventory",
    "signature" : "releaseInventory(java.lang.Long,int)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    inventoryService.release(productId, quantity);\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.Long productId", "int quantity" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.ProductService",
    "startLine" : 462,
    "endLine" : 464,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.ProductService.reserveInventory(java.lang.Long,int)",
    "name" : "reserveInventory",
    "signature" : "reserveInventory(java.lang.Long,int)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    inventoryService.reserve(productId, quantity);\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.Long productId", "int quantity" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.ProductService",
    "startLine" : 458,
    "endLine" : 460,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.ProductService.validateForCreation(com.testproject.Product)",
    "name" : "validateForCreation",
    "signature" : "validateForCreation(com.testproject.Product)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    if ((product.getName() == null) || product.getName().trim().isEmpty()) {\n        throw new com.testproject.ValidationException(\"Product name is required\");\n    }\n    if ((product.getPrice() == null) || (product.getPrice().compareTo(java.math.BigDecimal.ZERO) <= 0)) {\n        throw new com.testproject.ValidationException(\"Product price must be positive\");\n    }\n}",
    "visibility" : "protected",
    "cyclomaticComplexity" : 5,
    "parameters" : [ "com.testproject.Product product" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.ProductService",
    "startLine" : 438,
    "endLine" : 445,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.ProductService.validateForUpdate(com.testproject.Product,com.testproject.Product)",
    "name" : "validateForUpdate",
    "signature" : "validateForUpdate(com.testproject.Product,com.testproject.Product)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    // Validation logic\n}",
    "visibility" : "protected",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "com.testproject.Product existing", "com.testproject.Product updated" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.ProductService",
    "startLine" : 448,
    "endLine" : 450,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : true,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.ProductService.com.testproject.ProductService(com.testproject.ProductRepository,com.testproject.InventoryService)",
    "name" : "<init>",
    "signature" : "com.testproject.ProductService(com.testproject.ProductRepository,com.testproject.InventoryService)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    super(productRepository);\n    this.productRepository = productRepository;\n    this.inventoryService = inventoryService;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "com.testproject.ProductRepository productRepository", "com.testproject.InventoryService inventoryService" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.ProductService",
    "startLine" : 426,
    "endLine" : 430,
    "isConstructor" : true,
    "decorators" : null,
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.InventoryService.release(java.lang.Long,int)",
    "name" : "release",
    "signature" : "release(java.lang.Long,int)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    // Implementation\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.Long productId", "int quantity" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.InventoryService",
    "startLine" : 472,
    "endLine" : 474,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.InventoryService.reserve(java.lang.Long,int)",
    "name" : "reserve",
    "signature" : "reserve(java.lang.Long,int)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    // Implementation\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.Long productId", "int quantity" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.InventoryService",
    "startLine" : 468,
    "endLine" : 470,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.PaymentService.processPayment(java.math.BigDecimal,com.testproject.PaymentRequest)",
    "name" : "processPayment",
    "signature" : "processPayment(java.math.BigDecimal,com.testproject.PaymentRequest)",
    "returnType" : "com.testproject.PaymentResult",
    "comment" : "",
    "body" : "{\n    // Simulate payment processing\n    if (amount.compareTo(java.math.BigDecimal.valueOf(10000)) > 0) {\n        throw new com.testproject.PaymentServiceException(\"Amount too large\");\n    }\n    return new com.testproject.PaymentResult(true, \"TXN-\" + java.lang.System.currentTimeMillis(), null);\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 2,
    "parameters" : [ "java.math.BigDecimal amount", "com.testproject.PaymentRequest request" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.PaymentService",
    "startLine" : 478,
    "endLine" : 485,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.PaymentRequest.getMethod()",
    "name" : "getMethod",
    "signature" : "getMethod()",
    "returnType" : "java.lang.String",
    "comment" : "",
    "body" : "{\n    return method;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.PaymentRequest",
    "startLine" : 495,
    "endLine" : 495,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.PaymentRequest.setMethod(java.lang.String)",
    "name" : "setMethod",
    "signature" : "setMethod(java.lang.String)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    this.method = method;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String method" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.PaymentRequest",
    "startLine" : 496,
    "endLine" : 496,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.PaymentResult.getErrorMessage()",
    "name" : "getErrorMessage",
    "signature" : "getErrorMessage()",
    "returnType" : "java.lang.String",
    "comment" : "",
    "body" : "{\n    return errorMessage;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.PaymentResult",
    "startLine" : 512,
    "endLine" : 512,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.PaymentResult.getTransactionId()",
    "name" : "getTransactionId",
    "signature" : "getTransactionId()",
    "returnType" : "java.lang.String",
    "comment" : "",
    "body" : "{\n    return transactionId;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.PaymentResult",
    "startLine" : 511,
    "endLine" : 511,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.PaymentResult.isSuccessful()",
    "name" : "isSuccessful",
    "signature" : "isSuccessful()",
    "returnType" : "boolean",
    "comment" : "",
    "body" : "{\n    return successful;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.PaymentResult",
    "startLine" : 510,
    "endLine" : 510,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : true,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.PaymentResult.com.testproject.PaymentResult(boolean,java.lang.String,java.lang.String)",
    "name" : "<init>",
    "signature" : "com.testproject.PaymentResult(boolean,java.lang.String,java.lang.String)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    this.successful = successful;\n    this.transactionId = transactionId;\n    this.errorMessage = errorMessage;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "boolean successful", "java.lang.String transactionId", "java.lang.String errorMessage" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.PaymentResult",
    "startLine" : 504,
    "endLine" : 508,
    "isConstructor" : true,
    "decorators" : null,
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.OrderRepository.count()",
    "name" : "count",
    "signature" : "count()",
    "returnType" : "long",
    "comment" : "",
    "body" : "{\n    return 0;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.OrderRepository",
    "startLine" : 530,
    "endLine" : 530,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.OrderRepository.deleteAll()",
    "name" : "deleteAll",
    "signature" : "deleteAll()",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.OrderRepository",
    "startLine" : 536,
    "endLine" : 536,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.OrderRepository.deleteById(java.lang.Long)",
    "name" : "deleteById",
    "signature" : "deleteById(java.lang.Long)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.Long id" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.OrderRepository",
    "startLine" : 526,
    "endLine" : 526,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.OrderRepository.existsById(java.lang.Long)",
    "name" : "existsById",
    "signature" : "existsById(java.lang.Long)",
    "returnType" : "boolean",
    "comment" : "",
    "body" : "{\n    return false;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.Long id" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.OrderRepository",
    "startLine" : 528,
    "endLine" : 528,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.OrderRepository.findAll()",
    "name" : "findAll",
    "signature" : "findAll()",
    "returnType" : "java.util.List",
    "comment" : "",
    "body" : "{\n    return java.util.Collections.emptyList();\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.OrderRepository",
    "startLine" : 522,
    "endLine" : 522,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.OrderRepository.findAllById(java.lang.Iterable)",
    "name" : "findAllById",
    "signature" : "findAllById(java.lang.Iterable)",
    "returnType" : "java.util.List",
    "comment" : "",
    "body" : "{\n    return java.util.Collections.emptyList();\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.Iterable ids" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.OrderRepository",
    "startLine" : 532,
    "endLine" : 532,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.OrderRepository.findById(java.lang.Long)",
    "name" : "findById",
    "signature" : "findById(java.lang.Long)",
    "returnType" : "java.util.Optional",
    "comment" : "",
    "body" : "{\n    return java.util.Optional.empty();\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.Long id" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.OrderRepository",
    "startLine" : 520,
    "endLine" : 520,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.OrderRepository.findByUserAndDeletedFalse(com.testproject.User)",
    "name" : "findByUserAndDeletedFalse",
    "signature" : "findByUserAndDeletedFalse(com.testproject.User)",
    "returnType" : "java.util.List",
    "comment" : "",
    "body" : "{\n    return java.util.Collections.emptyList();\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "com.testproject.User user" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.OrderRepository",
    "startLine" : 539,
    "endLine" : 541,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.OrderRepository.findByUserAndStatusIn(com.testproject.User,com.testproject.OrderStatus[])",
    "name" : "findByUserAndStatusIn",
    "signature" : "findByUserAndStatusIn(com.testproject.User,com.testproject.OrderStatus[])",
    "returnType" : "java.util.List",
    "comment" : "",
    "body" : "{\n    return java.util.Collections.emptyList();\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "com.testproject.User user", "com.testproject.OrderStatus[] statuses" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.OrderRepository",
    "startLine" : 543,
    "endLine" : 545,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.OrderRepository.save(com.testproject.Order)",
    "name" : "save",
    "signature" : "save(com.testproject.Order)",
    "returnType" : "com.testproject.Order",
    "comment" : "",
    "body" : "{\n    return order;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "com.testproject.Order order" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.OrderRepository",
    "startLine" : 524,
    "endLine" : 524,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.OrderRepository.saveAll(java.lang.Iterable)",
    "name" : "saveAll",
    "signature" : "saveAll(java.lang.Iterable)",
    "returnType" : "java.util.List",
    "comment" : "",
    "body" : "{\n    return java.util.Collections.emptyList();\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.Iterable orders" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.OrderRepository",
    "startLine" : 534,
    "endLine" : 534,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.ProductRepository.count()",
    "name" : "count",
    "signature" : "count()",
    "returnType" : "long",
    "comment" : "",
    "body" : "{\n    return 0;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.ProductRepository",
    "startLine" : 560,
    "endLine" : 560,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.ProductRepository.deleteAll()",
    "name" : "deleteAll",
    "signature" : "deleteAll()",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.ProductRepository",
    "startLine" : 566,
    "endLine" : 566,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.ProductRepository.deleteById(java.lang.Long)",
    "name" : "deleteById",
    "signature" : "deleteById(java.lang.Long)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.Long id" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.ProductRepository",
    "startLine" : 556,
    "endLine" : 556,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.ProductRepository.existsById(java.lang.Long)",
    "name" : "existsById",
    "signature" : "existsById(java.lang.Long)",
    "returnType" : "boolean",
    "comment" : "",
    "body" : "{\n    return false;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.Long id" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.ProductRepository",
    "startLine" : 558,
    "endLine" : 558,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.ProductRepository.findAll()",
    "name" : "findAll",
    "signature" : "findAll()",
    "returnType" : "java.util.List",
    "comment" : "",
    "body" : "{\n    return java.util.Collections.emptyList();\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.ProductRepository",
    "startLine" : 552,
    "endLine" : 552,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.ProductRepository.findAllById(java.lang.Iterable)",
    "name" : "findAllById",
    "signature" : "findAllById(java.lang.Iterable)",
    "returnType" : "java.util.List",
    "comment" : "",
    "body" : "{\n    return java.util.Collections.emptyList();\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.Iterable ids" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.ProductRepository",
    "startLine" : 562,
    "endLine" : 562,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.ProductRepository.findById(java.lang.Long)",
    "name" : "findById",
    "signature" : "findById(java.lang.Long)",
    "returnType" : "java.util.Optional",
    "comment" : "",
    "body" : "{\n    return java.util.Optional.empty();\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.Long id" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.ProductRepository",
    "startLine" : 550,
    "endLine" : 550,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.ProductRepository.save(com.testproject.Product)",
    "name" : "save",
    "signature" : "save(com.testproject.Product)",
    "returnType" : "com.testproject.Product",
    "comment" : "",
    "body" : "{\n    return product;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "com.testproject.Product product" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.ProductRepository",
    "startLine" : 554,
    "endLine" : 554,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.ProductRepository.saveAll(java.lang.Iterable)",
    "name" : "saveAll",
    "signature" : "saveAll(java.lang.Iterable)",
    "returnType" : "java.util.List",
    "comment" : "",
    "body" : "{\n    return java.util.Collections.emptyList();\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.Iterable products" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "className" : "com.testproject.ProductRepository",
    "startLine" : 564,
    "endLine" : 564,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.EntityNotFoundException.getEntityId()",
    "name" : "getEntityId",
    "signature" : "getEntityId()",
    "returnType" : "java.lang.Object",
    "comment" : "",
    "body" : "{\n    return entityId;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EntityNotFoundException.java",
    "className" : "com.testproject.EntityNotFoundException",
    "startLine" : 62,
    "endLine" : 64,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.EntityNotFoundException.getEntityType()",
    "name" : "getEntityType",
    "signature" : "getEntityType()",
    "returnType" : "java.lang.String",
    "comment" : "",
    "body" : "{\n    return entityType;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EntityNotFoundException.java",
    "className" : "com.testproject.EntityNotFoundException",
    "startLine" : 58,
    "endLine" : 60,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.EntityNotFoundException.getOperation()",
    "name" : "getOperation",
    "signature" : "getOperation()",
    "returnType" : "java.lang.String",
    "comment" : "",
    "body" : "{\n    return operation;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EntityNotFoundException.java",
    "className" : "com.testproject.EntityNotFoundException",
    "startLine" : 66,
    "endLine" : 68,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : true,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.EntityNotFoundException.orderNotFound(java.lang.Long)",
    "name" : "orderNotFound",
    "signature" : "orderNotFound(java.lang.Long)",
    "returnType" : "com.testproject.EntityNotFoundException",
    "comment" : "",
    "body" : "{\n    return new com.testproject.EntityNotFoundException(\"Order\", orderId);\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.Long orderId" ],
    "isAbstract" : false,
    "isStatic" : true,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EntityNotFoundException.java",
    "className" : "com.testproject.EntityNotFoundException",
    "startLine" : 77,
    "endLine" : 79,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : true,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.EntityNotFoundException.productNotFound(java.lang.String)",
    "name" : "productNotFound",
    "signature" : "productNotFound(java.lang.String)",
    "returnType" : "com.testproject.EntityNotFoundException",
    "comment" : "",
    "body" : "{\n    return new com.testproject.EntityNotFoundException(\"Product\", productCode);\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String productCode" ],
    "isAbstract" : false,
    "isStatic" : true,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EntityNotFoundException.java",
    "className" : "com.testproject.EntityNotFoundException",
    "startLine" : 81,
    "endLine" : 83,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.EntityNotFoundException.toString()",
    "name" : "toString",
    "signature" : "toString()",
    "returnType" : "java.lang.String",
    "comment" : "",
    "body" : "{\n    java.lang.StringBuilder sb = new java.lang.StringBuilder();\n    sb.append(getClass().getSimpleName()).append(\": \");\n    sb.append(getMessage());\n    if ((entityType != null) && (!entityType.equals(\"Unknown\"))) {\n        sb.append(\" [entityType: \").append(entityType).append(\"]\");\n    }\n    if (entityId != null) {\n        sb.append(\" [entityId: \").append(entityId).append(\"]\");\n    }\n    if ((operation != null) && (!operation.equals(\"find\"))) {\n        sb.append(\" [operation: \").append(operation).append(\"]\");\n    }\n    return sb.toString();\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 6,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EntityNotFoundException.java",
    "className" : "com.testproject.EntityNotFoundException",
    "startLine" : 86,
    "endLine" : 104,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : true,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.EntityNotFoundException.userNotFound(java.lang.Long)",
    "name" : "userNotFound",
    "signature" : "userNotFound(java.lang.Long)",
    "returnType" : "com.testproject.EntityNotFoundException",
    "comment" : "Static factory methods\n",
    "body" : "{\n    return new com.testproject.EntityNotFoundException(\"User\", userId);\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.Long userId" ],
    "isAbstract" : false,
    "isStatic" : true,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EntityNotFoundException.java",
    "className" : "com.testproject.EntityNotFoundException",
    "startLine" : 73,
    "endLine" : 75,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : true,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.EntityNotFoundException.com.testproject.EntityNotFoundException()",
    "name" : "<init>",
    "signature" : "com.testproject.EntityNotFoundException()",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    super(\"Entity not found\");\n    this.entityType = \"Unknown\";\n    this.entityId = null;\n    this.operation = \"find\";\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EntityNotFoundException.java",
    "className" : "com.testproject.EntityNotFoundException",
    "startLine" : 16,
    "endLine" : 21,
    "isConstructor" : true,
    "decorators" : null,
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : true,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.EntityNotFoundException.com.testproject.EntityNotFoundException(java.lang.String)",
    "name" : "<init>",
    "signature" : "com.testproject.EntityNotFoundException(java.lang.String)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    super(message);\n    this.entityType = \"Unknown\";\n    this.entityId = null;\n    this.operation = \"find\";\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String message" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EntityNotFoundException.java",
    "className" : "com.testproject.EntityNotFoundException",
    "startLine" : 23,
    "endLine" : 28,
    "isConstructor" : true,
    "decorators" : null,
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : true,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.EntityNotFoundException.com.testproject.EntityNotFoundException(java.lang.String,java.lang.Object)",
    "name" : "<init>",
    "signature" : "com.testproject.EntityNotFoundException(java.lang.String,java.lang.Object)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    super(java.lang.String.format(\"%s not found with id: %s\", entityType, entityId));\n    this.entityType = entityType;\n    this.entityId = entityId;\n    this.operation = \"find\";\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 2,
    "parameters" : [ "java.lang.String entityType", "java.lang.Object entityId" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EntityNotFoundException.java",
    "className" : "com.testproject.EntityNotFoundException",
    "startLine" : 37,
    "endLine" : 42,
    "isConstructor" : true,
    "decorators" : null,
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : true,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.EntityNotFoundException.com.testproject.EntityNotFoundException(java.lang.String,java.lang.Object,java.lang.String)",
    "name" : "<init>",
    "signature" : "com.testproject.EntityNotFoundException(java.lang.String,java.lang.Object,java.lang.String)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    super(java.lang.String.format(\"Cannot %s %s with id: %s\", operation, entityType, entityId));\n    this.entityType = entityType;\n    this.entityId = entityId;\n    this.operation = operation;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 2,
    "parameters" : [ "java.lang.String entityType", "java.lang.Object entityId", "java.lang.String operation" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EntityNotFoundException.java",
    "className" : "com.testproject.EntityNotFoundException",
    "startLine" : 44,
    "endLine" : 49,
    "isConstructor" : true,
    "decorators" : null,
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : true,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.EntityNotFoundException.com.testproject.EntityNotFoundException(java.lang.String,java.lang.Object,java.lang.String,java.lang.Throwable)",
    "name" : "<init>",
    "signature" : "com.testproject.EntityNotFoundException(java.lang.String,java.lang.Object,java.lang.String,java.lang.Throwable)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    super(java.lang.String.format(\"Cannot %s %s with id: %s\", operation, entityType, entityId), cause);\n    this.entityType = entityType;\n    this.entityId = entityId;\n    this.operation = operation;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 2,
    "parameters" : [ "java.lang.String entityType", "java.lang.Object entityId", "java.lang.String operation", "java.lang.Throwable cause" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EntityNotFoundException.java",
    "className" : "com.testproject.EntityNotFoundException",
    "startLine" : 51,
    "endLine" : 56,
    "isConstructor" : true,
    "decorators" : null,
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : true,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.EntityNotFoundException.com.testproject.EntityNotFoundException(java.lang.String,java.lang.Throwable)",
    "name" : "<init>",
    "signature" : "com.testproject.EntityNotFoundException(java.lang.String,java.lang.Throwable)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    super(message, cause);\n    this.entityType = \"Unknown\";\n    this.entityId = null;\n    this.operation = \"find\";\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String message", "java.lang.Throwable cause" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/EntityNotFoundException.java",
    "className" : "com.testproject.EntityNotFoundException",
    "startLine" : 30,
    "endLine" : 35,
    "isConstructor" : true,
    "decorators" : null,
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.InnerClassTestCase.createAnonymousRunner(java.lang.String)",
    "name" : "createAnonymousRunner",
    "signature" : "createAnonymousRunner(java.lang.String)",
    "returnType" : "java.lang.Runnable",
    "comment" : "Method that returns anonymous class\n",
    "body" : "{\n    return new java.lang.Runnable() {\n        @java.lang.Override\n        public void run() {\n            java.lang.System.out.println(\"Anonymous runner with parameter: \" + parameter);\n        }\n    };\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String parameter" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/InnerClassTestCase.java",
    "className" : "com.testproject.InnerClassTestCase",
    "startLine" : 193,
    "endLine" : 200,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : true,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.InnerClassTestCase.main(java.lang.String[])",
    "name" : "main",
    "signature" : "main(java.lang.String[])",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    com.testproject.InnerClassTestCase outer = new com.testproject.InnerClassTestCase();\n    // Test static nested class\n    com.testproject.InnerClassTestCase.StaticNestedClass staticNested = new com.testproject.InnerClassTestCase.StaticNestedClass();\n    staticNested.staticNestedMethod();\n    // Test non-static inner class\n    com.testproject.InnerClassTestCase.InnerClass inner = outer.new InnerClass();\n    inner.innerMethod();\n    // Test nested inner class\n    com.testproject.InnerClassTestCase.InnerClass.NestedInnerClass nestedInner = inner.new NestedInnerClass();\n    nestedInner.nestedInnerMethod();\n    // Test method with local and anonymous classes\n    outer.methodWithLocalAndAnonymousClasses();\n    // Test anonymous runner\n    java.lang.Runnable runner = outer.createAnonymousRunner(\"test parameter\");\n    runner.run();\n    // Test generic inner class\n    com.testproject.InnerClassTestCase.GenericInnerClass<java.lang.String> genericInner = outer.new GenericInnerClass<>(\"generic value\");\n    java.lang.System.out.println(\"Generic field: \" + genericInner.getGenericField());\n    // Test inner enum\n    java.lang.System.out.println(\"Inner enum: \" + com.testproject.InnerClassTestCase.InnerEnum.VALUE1.getDescription());\n    // Test inner interface implementation\n    com.testproject.InnerClassTestCase.InnerInterfaceImpl interfaceImpl = outer.new InnerInterfaceImpl();\n    interfaceImpl.innerInterfaceMethod();\n    interfaceImpl.defaultInnerMethod();\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String[] args" ],
    "isAbstract" : false,
    "isStatic" : true,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/InnerClassTestCase.java",
    "className" : "com.testproject.InnerClassTestCase",
    "startLine" : 277,
    "endLine" : 310,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.InnerClassTestCase.methodWithLocalAndAnonymousClasses()",
    "name" : "methodWithLocalAndAnonymousClasses",
    "signature" : "methodWithLocalAndAnonymousClasses()",
    "returnType" : "void",
    "comment" : "Method demonstrating local classes and anonymous classes\n",
    "body" : "{\n    final java.lang.String localVar = \"local variable\";\n    /**\n     * Local class within method\n     */\n    class LocalClass {\n        private java.lang.String localClassField = \"local class\";\n\n        public void localClassMethod() {\n            java.lang.System.out.println(((\"Local class accessing: \" + localVar) + \", \") + outerField);\n        }\n\n        /**\n         * Inner class within local class\n         */\n        class InnerLocalClass {\n            public void innerLocalMethod() {\n                java.lang.System.out.println(\"Inner local class\");\n            }\n        }\n    }\n    // Create instance of local class\n    LocalClass localInstance = new LocalClass();\n    localInstance.localClassMethod();\n    // Anonymous class implementing Runnable\n    java.lang.Runnable anonymousRunnable = new java.lang.Runnable() {\n        private java.lang.String anonymousField = \"anonymous\";\n\n        @java.lang.Override\n        public void run() {\n            java.lang.System.out.println(((((\"Anonymous class: \" + anonymousField) + \", \") + localVar) + \", \") + outerField);\n        }\n\n        public void customAnonymousMethod() {\n            java.lang.System.out.println(\"Custom method in anonymous class\");\n        }\n    };\n    // Anonymous class extending BaseEntity\n    com.testproject.BaseEntity anonymousEntity = new com.testproject.BaseEntity(\"anonymous-creator\") {\n        @java.lang.Override\n        public java.lang.String getEntityName() {\n            return \"AnonymousEntity\";\n        }\n\n        public void customEntityMethod() {\n            java.lang.System.out.println(\"Custom method in anonymous entity\");\n        }\n    };\n    // Anonymous class with generic type\n    java.lang.Comparable<java.lang.String> anonymousComparable = new java.lang.Comparable<java.lang.String>() {\n        @java.lang.Override\n        public int compareTo(java.lang.String other) {\n            return outerField.compareTo(other);\n        }\n    };\n    anonymousRunnable.run();\n    java.lang.System.out.println(\"Anonymous entity: \" + anonymousEntity.getEntityName());\n    java.lang.System.out.println(\"Comparison result: \" + anonymousComparable.compareTo(\"test\"));\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/InnerClassTestCase.java",
    "className" : "com.testproject.InnerClassTestCase",
    "startLine" : 124,
    "endLine" : 188,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase.findUser(java.lang.String)",
    "name" : "findUser",
    "signature" : "findUser(java.lang.String)",
    "returnType" : "com.testproject.User",
    "comment" : "",
    "body" : "{\n    com.testproject.User user = userService.findById(id);\n    return user;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String id" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/MethodOverloadingTestCase.java",
    "className" : "com.testproject.MethodOverloadingTestCase",
    "startLine" : 65,
    "endLine" : 68,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase.findUser(java.lang.String,java.lang.String)",
    "name" : "findUser",
    "signature" : "findUser(java.lang.String,java.lang.String)",
    "returnType" : "com.testproject.User",
    "comment" : "",
    "body" : "{\n    java.util.List<com.testproject.User> users = userService.findByName(firstName, lastName);\n    return users.isEmpty() ? null : users.get(0);\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String firstName", "java.lang.String lastName" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/MethodOverloadingTestCase.java",
    "className" : "com.testproject.MethodOverloadingTestCase",
    "startLine" : 70,
    "endLine" : 73,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase.findUser(java.lang.String,java.lang.String,int)",
    "name" : "findUser",
    "signature" : "findUser(java.lang.String,java.lang.String,int)",
    "returnType" : "java.util.List",
    "comment" : "",
    "body" : "{\n    java.util.List<com.testproject.User> allUsers = userService.findByName(firstName, lastName);\n    return allUsers.subList(0, java.lang.Math.min(limit, allUsers.size()));\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String firstName", "java.lang.String lastName", "int limit" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/MethodOverloadingTestCase.java",
    "className" : "com.testproject.MethodOverloadingTestCase",
    "startLine" : 75,
    "endLine" : 78,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : true,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase.format(java.lang.String)",
    "name" : "format",
    "signature" : "format(java.lang.String)",
    "returnType" : "java.lang.String",
    "comment" : "",
    "body" : "{\n    return text.toUpperCase();\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String text" ],
    "isAbstract" : false,
    "isStatic" : true,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/MethodOverloadingTestCase.java",
    "className" : "com.testproject.MethodOverloadingTestCase",
    "startLine" : 140,
    "endLine" : 142,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : true,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase.format(java.lang.String,boolean)",
    "name" : "format",
    "signature" : "format(java.lang.String,boolean)",
    "returnType" : "java.lang.String",
    "comment" : "",
    "body" : "{\n    if (capitalize) {\n        return text.substring(0, 1).toUpperCase() + text.substring(1).toLowerCase();\n    }\n    return text.toLowerCase();\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 2,
    "parameters" : [ "java.lang.String text", "boolean capitalize" ],
    "isAbstract" : false,
    "isStatic" : true,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/MethodOverloadingTestCase.java",
    "className" : "com.testproject.MethodOverloadingTestCase",
    "startLine" : 144,
    "endLine" : 149,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : true,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase.format(java.lang.String,java.lang.String,java.lang.String)",
    "name" : "format",
    "signature" : "format(java.lang.String,java.lang.String,java.lang.String)",
    "returnType" : "java.lang.String",
    "comment" : "",
    "body" : "{\n    return (prefix + text) + suffix;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String text", "java.lang.String prefix", "java.lang.String suffix" ],
    "isAbstract" : false,
    "isStatic" : true,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/MethodOverloadingTestCase.java",
    "className" : "com.testproject.MethodOverloadingTestCase",
    "startLine" : 151,
    "endLine" : 153,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase.process(java.lang.String)",
    "name" : "process",
    "signature" : "process(java.lang.String)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    java.lang.System.out.println(\"Processing string data: \" + data);\n    validateData(data);\n    transformData(data);\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 2,
    "parameters" : [ "java.lang.String data" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/MethodOverloadingTestCase.java",
    "className" : "com.testproject.MethodOverloadingTestCase",
    "startLine" : 42,
    "endLine" : 46,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase.process(java.lang.String,boolean)",
    "name" : "process",
    "signature" : "process(java.lang.String,boolean)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    if (async) {\n        processAsync(data);\n    } else {\n        process(data);// Calls the single-parameter version\n\n    }\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 2,
    "parameters" : [ "java.lang.String data", "boolean async" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/MethodOverloadingTestCase.java",
    "className" : "com.testproject.MethodOverloadingTestCase",
    "startLine" : 56,
    "endLine" : 62,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase.process(java.util.List)",
    "name" : "process",
    "signature" : "process(java.util.List)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    java.lang.System.out.println((\"Processing list data: \" + dataList.size()) + \" items\");\n    for (java.lang.String data : dataList) {\n        validateData(data);\n        transformData(data);\n    }\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 3,
    "parameters" : [ "java.util.List dataList" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/MethodOverloadingTestCase.java",
    "className" : "com.testproject.MethodOverloadingTestCase",
    "startLine" : 48,
    "endLine" : 54,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase.processAsync(java.lang.String)",
    "name" : "processAsync",
    "signature" : "processAsync(java.lang.String)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    java.lang.System.out.println(\"Processing asynchronously: \" + data);\n    validateData(data);\n    transformData(data);\n}",
    "visibility" : "private",
    "cyclomaticComplexity" : 2,
    "parameters" : [ "java.lang.String data" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/MethodOverloadingTestCase.java",
    "className" : "com.testproject.MethodOverloadingTestCase",
    "startLine" : 117,
    "endLine" : 121,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase.save(com.testproject.Order)",
    "name" : "save",
    "signature" : "save(com.testproject.Order)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    java.lang.System.out.println(\"Saving order: \" + order.getId());\n    orderService.validateOrder(order);\n    orderService.persistOrder(order);\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "com.testproject.Order order" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/MethodOverloadingTestCase.java",
    "className" : "com.testproject.MethodOverloadingTestCase",
    "startLine" : 22,
    "endLine" : 26,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase.save(com.testproject.Order,java.lang.String)",
    "name" : "save",
    "signature" : "save(com.testproject.Order,java.lang.String)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    java.lang.System.out.println(\"Saving order in context: \" + context);\n    orderService.validateOrder(order);\n    orderService.persistOrder(order);\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "com.testproject.Order order", "java.lang.String context" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/MethodOverloadingTestCase.java",
    "className" : "com.testproject.MethodOverloadingTestCase",
    "startLine" : 35,
    "endLine" : 39,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase.save(com.testproject.User)",
    "name" : "save",
    "signature" : "save(com.testproject.User)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    java.lang.System.out.println(\"Saving user: \" + user.getName());\n    userService.validateUser(user);\n    userService.persistUser(user);\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "com.testproject.User user" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/MethodOverloadingTestCase.java",
    "className" : "com.testproject.MethodOverloadingTestCase",
    "startLine" : 16,
    "endLine" : 20,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase.save(com.testproject.User,boolean)",
    "name" : "save",
    "signature" : "save(com.testproject.User,boolean)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    if (validate) {\n        userService.validateUser(user);\n    }\n    userService.persistUser(user);\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 2,
    "parameters" : [ "com.testproject.User user", "boolean validate" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/MethodOverloadingTestCase.java",
    "className" : "com.testproject.MethodOverloadingTestCase",
    "startLine" : 28,
    "endLine" : 33,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase.testMethodCalls()",
    "name" : "testMethodCalls",
    "signature" : "testMethodCalls()",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    // Test overloaded save methods\n    com.testproject.User user = new com.testproject.User(\"John\", \"john@example.com\");\n    com.testproject.Order order = new com.testproject.Order(\"ORD-001\", user);\n    save(user);\n    // Calls save(User)\n    save(order);\n    // Calls save(Order)\n    save(user, true);\n    // Calls save(User, boolean)\n    save(order, \"web\");// Calls save(Order, String)\n\n    // Test overloaded process methods\n    process(\"test data\");// Calls process(String)\n\n    java.util.List<java.lang.String> dataList = new java.util.ArrayList<>();\n    dataList.add(\"item1\");\n    dataList.add(\"item2\");\n    process(dataList);\n    // Calls process(List<String>)\n    process(\"async data\", true);// Calls process(String, boolean)\n\n    // Test overloaded find methods\n    com.testproject.User foundUser1 = findUser(\"user-123\");\n    // Calls findUser(String)\n    com.testproject.User foundUser2 = findUser(\"John\", \"Doe\");\n    // Calls findUser(String, String)\n    java.util.List<com.testproject.User> foundUsers = findUser(\"Jane\", \"Smith\", 5);// Calls findUser(String, String, int)\n\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/MethodOverloadingTestCase.java",
    "className" : "com.testproject.MethodOverloadingTestCase",
    "startLine" : 81,
    "endLine" : 104,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase.testStaticCalls()",
    "name" : "testStaticCalls",
    "signature" : "testStaticCalls()",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    java.lang.String result1 = com.testproject.MethodOverloadingTestCase.format(\"hello\");\n    // Calls format(String)\n    java.lang.String result2 = com.testproject.MethodOverloadingTestCase.format(\"world\", true);\n    // Calls format(String, boolean)\n    java.lang.String result3 = com.testproject.MethodOverloadingTestCase.format(\"test\", \"[\", \"]\");// Calls format(String, String, String)\n\n    java.lang.System.out.println((((result1 + \", \") + result2) + \", \") + result3);\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 7,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/MethodOverloadingTestCase.java",
    "className" : "com.testproject.MethodOverloadingTestCase",
    "startLine" : 156,
    "endLine" : 162,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase.transformData(java.lang.String)",
    "name" : "transformData",
    "signature" : "transformData(java.lang.String)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    java.lang.System.out.println(\"Transforming: \" + data.toUpperCase());\n}",
    "visibility" : "private",
    "cyclomaticComplexity" : 2,
    "parameters" : [ "java.lang.String data" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/MethodOverloadingTestCase.java",
    "className" : "com.testproject.MethodOverloadingTestCase",
    "startLine" : 113,
    "endLine" : 115,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase.validateData(java.lang.String)",
    "name" : "validateData",
    "signature" : "validateData(java.lang.String)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    if ((data == null) || data.trim().isEmpty()) {\n        throw new java.lang.IllegalArgumentException(\"Data cannot be null or empty\");\n    }\n}",
    "visibility" : "private",
    "cyclomaticComplexity" : 3,
    "parameters" : [ "java.lang.String data" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/MethodOverloadingTestCase.java",
    "className" : "com.testproject.MethodOverloadingTestCase",
    "startLine" : 107,
    "endLine" : 111,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : true,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase.com.testproject.MethodOverloadingTestCase()",
    "name" : "<init>",
    "signature" : "com.testproject.MethodOverloadingTestCase()",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    this.userService = new com.testproject.UserService();\n    this.orderService = new com.testproject.OrderService();\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/MethodOverloadingTestCase.java",
    "className" : "com.testproject.MethodOverloadingTestCase",
    "startLine" : 124,
    "endLine" : 127,
    "isConstructor" : true,
    "decorators" : null,
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : true,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase.com.testproject.MethodOverloadingTestCase(com.testproject.UserService)",
    "name" : "<init>",
    "signature" : "com.testproject.MethodOverloadingTestCase(com.testproject.UserService)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    this.userService = userService;\n    this.orderService = new com.testproject.OrderService();\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "com.testproject.UserService userService" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/MethodOverloadingTestCase.java",
    "className" : "com.testproject.MethodOverloadingTestCase",
    "startLine" : 129,
    "endLine" : 132,
    "isConstructor" : true,
    "decorators" : null,
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : true,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase.com.testproject.MethodOverloadingTestCase(com.testproject.UserService,com.testproject.OrderService)",
    "name" : "<init>",
    "signature" : "com.testproject.MethodOverloadingTestCase(com.testproject.UserService,com.testproject.OrderService)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    this.userService = userService;\n    this.orderService = orderService;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "com.testproject.UserService userService", "com.testproject.OrderService orderService" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/MethodOverloadingTestCase.java",
    "className" : "com.testproject.MethodOverloadingTestCase",
    "startLine" : 134,
    "endLine" : 137,
    "isConstructor" : true,
    "decorators" : null,
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.Order.calculateTotal()",
    "name" : "calculateTotal",
    "signature" : "calculateTotal()",
    "returnType" : "void",
    "comment" : "Method demonstrating:\n- Stream operations (would require java.util.stream import)\n- BigDecimal calculations\n- Exception handling\n",
    "body" : "{\n    try {\n        java.math.BigDecimal total = java.math.BigDecimal.ZERO;\n        if (items != null) {\n            for (com.testproject.OrderItem item : items) {\n                if ((item.getPrice() != null) && (item.getQuantity() > 0)) {\n                    java.math.BigDecimal itemTotal = item.getPrice().multiply(java.math.BigDecimal.valueOf(item.getQuantity()));\n                    total = total.add(itemTotal);\n                }\n            }\n        }\n        this.totalAmount = total;\n        markAsUpdated(\"system\");\n    } catch (java.lang.Exception e) {\n        throw new java.lang.RuntimeException(\"Error calculating order total\", e);\n    }\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 6,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/Order.java",
    "className" : "com.testproject.Order",
    "startLine" : 127,
    "endLine" : 146,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.Order.getDeliveryDate()",
    "name" : "getDeliveryDate",
    "signature" : "getDeliveryDate()",
    "returnType" : "java.time.LocalDateTime",
    "comment" : "",
    "body" : "{\n    return deliveryDate;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/Order.java",
    "className" : "com.testproject.Order",
    "startLine" : 89,
    "endLine" : 91,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.Order.getEntityName()",
    "name" : "getEntityName",
    "signature" : "getEntityName()",
    "returnType" : "java.lang.String",
    "comment" : "",
    "body" : "{\n    return \"Order\";\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/Order.java",
    "className" : "com.testproject.Order",
    "startLine" : 44,
    "endLine" : 46,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.Order.getItems()",
    "name" : "getItems",
    "signature" : "getItems()",
    "returnType" : "java.util.List",
    "comment" : "",
    "body" : "{\n    return items;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/Order.java",
    "className" : "com.testproject.Order",
    "startLine" : 97,
    "endLine" : 99,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.Order.getMetadata()",
    "name" : "getMetadata",
    "signature" : "getMetadata()",
    "returnType" : "java.util.Map",
    "comment" : "",
    "body" : "{\n    return metadata;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/Order.java",
    "className" : "com.testproject.Order",
    "startLine" : 105,
    "endLine" : 107,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.Order.getOrderDate()",
    "name" : "getOrderDate",
    "signature" : "getOrderDate()",
    "returnType" : "java.time.LocalDateTime",
    "comment" : "",
    "body" : "{\n    return orderDate;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/Order.java",
    "className" : "com.testproject.Order",
    "startLine" : 81,
    "endLine" : 83,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.Order.getOrderNumber()",
    "name" : "getOrderNumber",
    "signature" : "getOrderNumber()",
    "returnType" : "java.lang.String",
    "comment" : "",
    "body" : "{\n    return orderNumber;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/Order.java",
    "className" : "com.testproject.Order",
    "startLine" : 49,
    "endLine" : 51,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.Order.getShippingAddress()",
    "name" : "getShippingAddress",
    "signature" : "getShippingAddress()",
    "returnType" : "com.testproject.ShippingAddress",
    "comment" : "",
    "body" : "{\n    return shippingAddress;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/Order.java",
    "className" : "com.testproject.Order",
    "startLine" : 113,
    "endLine" : 115,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.Order.getStatus()",
    "name" : "getStatus",
    "signature" : "getStatus()",
    "returnType" : "com.testproject.OrderStatus",
    "comment" : "",
    "body" : "{\n    return status;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/Order.java",
    "className" : "com.testproject.Order",
    "startLine" : 65,
    "endLine" : 67,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.Order.getTotalAmount()",
    "name" : "getTotalAmount",
    "signature" : "getTotalAmount()",
    "returnType" : "java.math.BigDecimal",
    "comment" : "",
    "body" : "{\n    return totalAmount;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/Order.java",
    "className" : "com.testproject.Order",
    "startLine" : 73,
    "endLine" : 75,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.Order.getUser()",
    "name" : "getUser",
    "signature" : "getUser()",
    "returnType" : "com.testproject.User",
    "comment" : "",
    "body" : "{\n    return user;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/Order.java",
    "className" : "com.testproject.Order",
    "startLine" : 57,
    "endLine" : 59,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.Order.groupItemsByCategory()",
    "name" : "groupItemsByCategory",
    "signature" : "groupItemsByCategory()",
    "returnType" : "java.util.Map",
    "comment" : "Method with nested generics\n",
    "body" : "{\n    java.util.Map<java.lang.String, java.util.List<com.testproject.OrderItem>> grouped = new java.util.HashMap<>();\n    if (items != null) {\n        for (com.testproject.OrderItem item : items) {\n            java.lang.String category = (item.getProduct() != null) ? item.getProduct().getCategory() : \"Unknown\";\n            grouped.computeIfAbsent(category, k -> new java.util.ArrayList<>()).add(item);\n        }\n    }\n    return grouped;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 3,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/Order.java",
    "className" : "com.testproject.Order",
    "startLine" : 151,
    "endLine" : 162,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.Order.setDeliveryDate(java.time.LocalDateTime)",
    "name" : "setDeliveryDate",
    "signature" : "setDeliveryDate(java.time.LocalDateTime)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    this.deliveryDate = deliveryDate;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.time.LocalDateTime deliveryDate" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/Order.java",
    "className" : "com.testproject.Order",
    "startLine" : 93,
    "endLine" : 95,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.Order.setItems(java.util.List)",
    "name" : "setItems",
    "signature" : "setItems(java.util.List)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    this.items = items;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.util.List items" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/Order.java",
    "className" : "com.testproject.Order",
    "startLine" : 101,
    "endLine" : 103,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.Order.setMetadata(java.util.Map)",
    "name" : "setMetadata",
    "signature" : "setMetadata(java.util.Map)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    this.metadata = metadata;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.util.Map metadata" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/Order.java",
    "className" : "com.testproject.Order",
    "startLine" : 109,
    "endLine" : 111,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.Order.setOrderDate(java.time.LocalDateTime)",
    "name" : "setOrderDate",
    "signature" : "setOrderDate(java.time.LocalDateTime)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    this.orderDate = orderDate;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.time.LocalDateTime orderDate" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/Order.java",
    "className" : "com.testproject.Order",
    "startLine" : 85,
    "endLine" : 87,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.Order.setOrderNumber(java.lang.String)",
    "name" : "setOrderNumber",
    "signature" : "setOrderNumber(java.lang.String)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    this.orderNumber = orderNumber;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String orderNumber" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/Order.java",
    "className" : "com.testproject.Order",
    "startLine" : 53,
    "endLine" : 55,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.Order.setShippingAddress(com.testproject.ShippingAddress)",
    "name" : "setShippingAddress",
    "signature" : "setShippingAddress(com.testproject.ShippingAddress)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    this.shippingAddress = shippingAddress;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "com.testproject.ShippingAddress shippingAddress" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/Order.java",
    "className" : "com.testproject.Order",
    "startLine" : 117,
    "endLine" : 119,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.Order.setStatus(com.testproject.OrderStatus)",
    "name" : "setStatus",
    "signature" : "setStatus(com.testproject.OrderStatus)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    this.status = status;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "com.testproject.OrderStatus status" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/Order.java",
    "className" : "com.testproject.Order",
    "startLine" : 69,
    "endLine" : 71,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.Order.setTotalAmount(java.math.BigDecimal)",
    "name" : "setTotalAmount",
    "signature" : "setTotalAmount(java.math.BigDecimal)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    this.totalAmount = totalAmount;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.math.BigDecimal totalAmount" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/Order.java",
    "className" : "com.testproject.Order",
    "startLine" : 77,
    "endLine" : 79,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.Order.setUser(com.testproject.User)",
    "name" : "setUser",
    "signature" : "setUser(com.testproject.User)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    this.user = user;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "com.testproject.User user" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/Order.java",
    "className" : "com.testproject.Order",
    "startLine" : 61,
    "endLine" : 63,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : true,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.Order.com.testproject.Order()",
    "name" : "<init>",
    "signature" : "com.testproject.Order()",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    super();\n    this.items = new java.util.ArrayList<>();\n    this.metadata = new java.util.HashMap<>();\n    this.status = com.testproject.OrderStatus.PENDING;\n    this.orderDate = java.time.LocalDateTime.now();\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/Order.java",
    "className" : "com.testproject.Order",
    "startLine" : 29,
    "endLine" : 35,
    "isConstructor" : true,
    "decorators" : null,
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : true,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.Order.com.testproject.Order(java.lang.String,com.testproject.User)",
    "name" : "<init>",
    "signature" : "com.testproject.Order(java.lang.String,com.testproject.User)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    this();\n    this.orderNumber = orderNumber;\n    this.user = user;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String orderNumber", "com.testproject.User user" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/Order.java",
    "className" : "com.testproject.Order",
    "startLine" : 37,
    "endLine" : 41,
    "isConstructor" : true,
    "decorators" : null,
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.OrderService.afterCreate(com.testproject.Order)",
    "name" : "afterCreate",
    "signature" : "afterCreate(com.testproject.Order)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    super.afterCreate(order);\n    // Calculate total\n    calculateOrderTotal(order);\n    // Send confirmation\n    notificationService.sendOrderConfirmation(order);\n    // Reserve inventory\n    reserveInventory(order);\n}",
    "visibility" : "protected",
    "cyclomaticComplexity" : 2,
    "parameters" : [ "com.testproject.Order order" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/OrderService.java",
    "className" : "com.testproject.OrderService",
    "startLine" : 85,
    "endLine" : 96,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.OrderService.afterUpdate(com.testproject.Order)",
    "name" : "afterUpdate",
    "signature" : "afterUpdate(com.testproject.Order)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    super.afterUpdate(order);\n    // Handle status change notifications\n    handleStatusChangeNotification(order);\n}",
    "visibility" : "protected",
    "cyclomaticComplexity" : 3,
    "parameters" : [ "com.testproject.Order order" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/OrderService.java",
    "className" : "com.testproject.OrderService",
    "startLine" : 99,
    "endLine" : 104,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.OrderService.calculateOrderTotal(com.testproject.Order)",
    "name" : "calculateOrderTotal",
    "signature" : "calculateOrderTotal(com.testproject.Order)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    java.math.BigDecimal total = java.math.BigDecimal.ZERO;\n    for (com.testproject.OrderItem item : order.getItems()) {\n        java.math.BigDecimal itemTotal = item.getPrice().multiply(java.math.BigDecimal.valueOf(item.getQuantity()));\n        total = total.add(itemTotal);\n    }\n    order.setTotalAmount(total);\n}",
    "visibility" : "private",
    "cyclomaticComplexity" : 2,
    "parameters" : [ "com.testproject.Order order" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/OrderService.java",
    "className" : "com.testproject.OrderService",
    "startLine" : 204,
    "endLine" : 213,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.OrderService.cancel(java.lang.Long)",
    "name" : "cancel",
    "signature" : "cancel(java.lang.Long)",
    "returnType" : "boolean",
    "comment" : "",
    "body" : "{\n    try {\n        return updateStatus(orderId, com.testproject.OrderStatus.CANCELLED) != null;\n    } catch (com.testproject.EntityNotFoundException e) {\n        return false;\n    }\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 2,
    "parameters" : [ "java.lang.Long orderId" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/OrderService.java",
    "className" : "com.testproject.OrderService",
    "startLine" : 134,
    "endLine" : 140,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.OrderService.findActiveByUser(com.testproject.User)",
    "name" : "findActiveByUser",
    "signature" : "findActiveByUser(com.testproject.User)",
    "returnType" : "java.util.List",
    "comment" : "",
    "body" : "{\n    return orderRepository.findByUserAndStatusIn(user, com.testproject.OrderStatus.getActiveStatuses());\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "com.testproject.User user" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/OrderService.java",
    "className" : "com.testproject.OrderService",
    "startLine" : 111,
    "endLine" : 113,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.OrderService.findByUser(com.testproject.User)",
    "name" : "findByUser",
    "signature" : "findByUser(com.testproject.User)",
    "returnType" : "java.util.List",
    "comment" : "",
    "body" : "{\n    return orderRepository.findByUserAndDeletedFalse(user);\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "com.testproject.User user" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/OrderService.java",
    "className" : "com.testproject.OrderService",
    "startLine" : 107,
    "endLine" : 109,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.OrderService.getEntityName()",
    "name" : "getEntityName",
    "signature" : "getEntityName()",
    "returnType" : "java.lang.String",
    "comment" : "",
    "body" : "{\n    return \"Order\";\n}",
    "visibility" : "protected",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/OrderService.java",
    "className" : "com.testproject.OrderService",
    "startLine" : 38,
    "endLine" : 40,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.OrderService.handleStatusChangeNotification(com.testproject.Order)",
    "name" : "handleStatusChangeNotification",
    "signature" : "handleStatusChangeNotification(com.testproject.Order)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    switch (order.getStatus()) {\n        case SHIPPED :\n            notificationService.sendShippingNotification(order);\n            break;\n        case DELIVERED :\n            notificationService.sendDeliveryConfirmation(order);\n            break;\n        case CANCELLED :\n            notificationService.sendCancellationNotification(order);\n            // Release inventory\n            releaseInventory(order);\n            break;\n    }\n}",
    "visibility" : "private",
    "cyclomaticComplexity" : 7,
    "parameters" : [ "com.testproject.Order order" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/OrderService.java",
    "className" : "com.testproject.OrderService",
    "startLine" : 221,
    "endLine" : 235,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.OrderService.handleStatusTransition(com.testproject.Order,com.testproject.OrderStatus,com.testproject.OrderStatus)",
    "name" : "handleStatusTransition",
    "signature" : "handleStatusTransition(com.testproject.Order,com.testproject.OrderStatus,com.testproject.OrderStatus)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    // Log status change\n    java.lang.String logMessage = java.lang.String.format(\"Order %s status changed from %s to %s\", order.getOrderNumber(), oldStatus, newStatus);\n    java.lang.System.out.println(logMessage);\n    // Handle business logic for specific transitions\n    if ((oldStatus == com.testproject.OrderStatus.CONFIRMED) && (newStatus == com.testproject.OrderStatus.PROCESSING)) {\n        // Start fulfillment process\n        startFulfillment(order);\n    }\n}",
    "visibility" : "private",
    "cyclomaticComplexity" : 6,
    "parameters" : [ "com.testproject.Order order", "com.testproject.OrderStatus oldStatus", "com.testproject.OrderStatus newStatus" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/OrderService.java",
    "className" : "com.testproject.OrderService",
    "startLine" : 237,
    "endLine" : 248,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.OrderService.performUpdate(com.testproject.Order,com.testproject.Order)",
    "name" : "performUpdate",
    "signature" : "performUpdate(com.testproject.Order,com.testproject.Order)",
    "returnType" : "com.testproject.Order",
    "comment" : "",
    "body" : "{\n    if (updated.getStatus() != null) {\n        existing.setStatus(updated.getStatus());\n    }\n    if (updated.getShippingAddress() != null) {\n        existing.setShippingAddress(updated.getShippingAddress());\n    }\n    existing.markAsUpdated(\"system\");\n    return existing;\n}",
    "visibility" : "protected",
    "cyclomaticComplexity" : 3,
    "parameters" : [ "com.testproject.Order existing", "com.testproject.Order updated" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/OrderService.java",
    "className" : "com.testproject.OrderService",
    "startLine" : 70,
    "endLine" : 81,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.OrderService.processPayment(java.lang.Long,com.testproject.PaymentRequest)",
    "name" : "processPayment",
    "signature" : "processPayment(java.lang.Long,com.testproject.PaymentRequest)",
    "returnType" : "com.testproject.Order",
    "comment" : "Complex method with multiple exception types and nested calls\n",
    "body" : "{\n    com.testproject.Order order = orderRepository.findById(orderId).orElseThrow(() -> new com.testproject.EntityNotFoundException(\"Order\", orderId, \"process payment\"));\n    if (order.getStatus() != com.testproject.OrderStatus.CONFIRMED) {\n        throw new com.testproject.ValidationException(\"Order must be confirmed before payment\", \"status\", order.getStatus());\n    }\n    try {\n        // Process payment\n        com.testproject.PaymentResult result = paymentService.processPayment(order.getTotalAmount(), paymentRequest);\n        if (result.isSuccessful()) {\n            order.setStatus(com.testproject.OrderStatus.PROCESSING);\n            order.getMetadata().put(\"paymentId\", result.getTransactionId());\n            order.getMetadata().put(\"paymentMethod\", paymentRequest.getMethod());\n            com.testproject.Order savedOrder = orderRepository.save(order);\n            notificationService.sendPaymentConfirmation(savedOrder, result);\n            return savedOrder;\n        } else {\n            throw new com.testproject.PaymentException(\"Payment failed: \" + result.getErrorMessage());\n        }\n    } catch (com.testproject.PaymentServiceException e) {\n        throw new com.testproject.PaymentException(\"Payment service error\", e);\n    }\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 6,
    "parameters" : [ "java.lang.Long orderId", "com.testproject.PaymentRequest paymentRequest" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/OrderService.java",
    "className" : "com.testproject.OrderService",
    "startLine" : 145,
    "endLine" : 175,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.OrderService.releaseInventory(com.testproject.Order)",
    "name" : "releaseInventory",
    "signature" : "releaseInventory(com.testproject.Order)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    if (order.getItems() != null) {\n        for (com.testproject.OrderItem item : order.getItems()) {\n            productService.releaseInventory(item.getProduct().getId(), item.getQuantity());\n        }\n    }\n}",
    "visibility" : "private",
    "cyclomaticComplexity" : 3,
    "parameters" : [ "com.testproject.Order order" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/OrderService.java",
    "className" : "com.testproject.OrderService",
    "startLine" : 250,
    "endLine" : 256,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.OrderService.reserveInventory(com.testproject.Order)",
    "name" : "reserveInventory",
    "signature" : "reserveInventory(com.testproject.Order)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    for (com.testproject.OrderItem item : order.getItems()) {\n        productService.reserveInventory(item.getProduct().getId(), item.getQuantity());\n    }\n}",
    "visibility" : "private",
    "cyclomaticComplexity" : 2,
    "parameters" : [ "com.testproject.Order order" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/OrderService.java",
    "className" : "com.testproject.OrderService",
    "startLine" : 215,
    "endLine" : 219,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.OrderService.startFulfillment(com.testproject.Order)",
    "name" : "startFulfillment",
    "signature" : "startFulfillment(com.testproject.Order)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    // Implementation would trigger fulfillment workflow\n    order.getMetadata().put(\"fulfillmentStarted\", java.time.LocalDateTime.now().toString());\n}",
    "visibility" : "private",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "com.testproject.Order order" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/OrderService.java",
    "className" : "com.testproject.OrderService",
    "startLine" : 258,
    "endLine" : 261,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.OrderService.updateStatus(java.lang.Long,com.testproject.OrderStatus)",
    "name" : "updateStatus",
    "signature" : "updateStatus(java.lang.Long,com.testproject.OrderStatus)",
    "returnType" : "com.testproject.Order",
    "comment" : "",
    "body" : "{\n    java.util.Optional<com.testproject.Order> orderOpt = orderRepository.findById(orderId);\n    if (!orderOpt.isPresent()) {\n        throw new com.testproject.EntityNotFoundException(\"Order\", orderId, \"update status\");\n    }\n    com.testproject.Order order = orderOpt.get();\n    com.testproject.OrderStatus oldStatus = order.getStatus();\n    validateStatusTransition(oldStatus, newStatus);\n    order.setStatus(newStatus);\n    com.testproject.Order savedOrder = orderRepository.save(order);\n    handleStatusTransition(savedOrder, oldStatus, newStatus);\n    return savedOrder;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 2,
    "parameters" : [ "java.lang.Long orderId", "com.testproject.OrderStatus newStatus" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/OrderService.java",
    "className" : "com.testproject.OrderService",
    "startLine" : 115,
    "endLine" : 132,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.OrderService.validateForCreation(com.testproject.Order)",
    "name" : "validateForCreation",
    "signature" : "validateForCreation(com.testproject.Order)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    if (order.getUser() == null) {\n        throw new com.testproject.ValidationException(\"Order must have a user\");\n    }\n    if ((order.getItems() == null) || order.getItems().isEmpty()) {\n        throw new com.testproject.ValidationException(\"Order must have at least one item\");\n    }\n    // Validate each item\n    for (com.testproject.OrderItem item : order.getItems()) {\n        validateOrderItem(item);\n    }\n}",
    "visibility" : "protected",
    "cyclomaticComplexity" : 5,
    "parameters" : [ "com.testproject.Order order" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/OrderService.java",
    "className" : "com.testproject.OrderService",
    "startLine" : 43,
    "endLine" : 56,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.OrderService.validateForUpdate(com.testproject.Order,com.testproject.Order)",
    "name" : "validateForUpdate",
    "signature" : "validateForUpdate(com.testproject.Order,com.testproject.Order)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    if (existing.getStatus().isTerminal()) {\n        throw new com.testproject.ValidationException(\"Cannot update order in terminal status: \" + existing.getStatus());\n    }\n    if (updated.getStatus() != null) {\n        validateStatusTransition(existing.getStatus(), updated.getStatus());\n    }\n}",
    "visibility" : "protected",
    "cyclomaticComplexity" : 3,
    "parameters" : [ "com.testproject.Order existing", "com.testproject.Order updated" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/OrderService.java",
    "className" : "com.testproject.OrderService",
    "startLine" : 59,
    "endLine" : 67,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.OrderService.validateOrderItem(com.testproject.OrderItem)",
    "name" : "validateOrderItem",
    "signature" : "validateOrderItem(com.testproject.OrderItem)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    if (item.getProduct() == null) {\n        throw new com.testproject.ValidationException(\"Order item must have a product\");\n    }\n    if (item.getQuantity() <= 0) {\n        throw new com.testproject.ValidationException(\"Order item quantity must be positive\");\n    }\n    if ((item.getPrice() == null) || (item.getPrice().compareTo(java.math.BigDecimal.ZERO) <= 0)) {\n        throw new com.testproject.ValidationException(\"Order item price must be positive\");\n    }\n}",
    "visibility" : "private",
    "cyclomaticComplexity" : 5,
    "parameters" : [ "com.testproject.OrderItem item" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/OrderService.java",
    "className" : "com.testproject.OrderService",
    "startLine" : 178,
    "endLine" : 190,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.OrderService.validateStatusTransition(com.testproject.OrderStatus,com.testproject.OrderStatus)",
    "name" : "validateStatusTransition",
    "signature" : "validateStatusTransition(com.testproject.OrderStatus,com.testproject.OrderStatus)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    com.testproject.OrderStatus[] allowedStatuses = from.getNextStatuses();\n    for (com.testproject.OrderStatus allowed : allowedStatuses) {\n        if (allowed == to) {\n            return;\n        }\n    }\n    throw new com.testproject.ValidationException(java.lang.String.format(\"Invalid status transition from %s to %s\", from, to));\n}",
    "visibility" : "private",
    "cyclomaticComplexity" : 4,
    "parameters" : [ "com.testproject.OrderStatus from", "com.testproject.OrderStatus to" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/OrderService.java",
    "className" : "com.testproject.OrderService",
    "startLine" : 192,
    "endLine" : 202,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : true,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.OrderService.com.testproject.OrderService(com.testproject.OrderRepository,com.testproject.ProductService,com.testproject.NotificationService,com.testproject.PaymentService)",
    "name" : "<init>",
    "signature" : "com.testproject.OrderService(com.testproject.OrderRepository,com.testproject.ProductService,com.testproject.NotificationService,com.testproject.PaymentService)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    super(orderRepository);\n    this.orderRepository = orderRepository;\n    this.productService = productService;\n    this.notificationService = notificationService;\n    this.paymentService = paymentService;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 3,
    "parameters" : [ "com.testproject.OrderRepository orderRepository", "com.testproject.ProductService productService", "com.testproject.NotificationService notificationService", "com.testproject.PaymentService paymentService" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/OrderService.java",
    "className" : "com.testproject.OrderService",
    "startLine" : 25,
    "endLine" : 34,
    "isConstructor" : true,
    "decorators" : null,
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.SimpleCallTest.caller()",
    "name" : "caller",
    "signature" : "caller()",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    // Simple method call\n    target();\n    // Call with parameters\n    targetWithParam(\"hello\");\n    // Overloaded method calls\n    overloaded(\"string\");\n    overloaded(42);\n    overloaded(\"string\", 42);\n    // Call static method\n    java.lang.String result = com.testproject.SimpleCallTest.formatMessage(\"test\");\n    java.lang.System.out.println(result);\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 2,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/SimpleCallTest.java",
    "className" : "com.testproject.SimpleCallTest",
    "startLine" : 8,
    "endLine" : 23,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : true,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.SimpleCallTest.formatMessage(java.lang.String)",
    "name" : "formatMessage",
    "signature" : "formatMessage(java.lang.String)",
    "returnType" : "java.lang.String",
    "comment" : "",
    "body" : "{\n    return \"Formatted: \" + message.toUpperCase();\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String message" ],
    "isAbstract" : false,
    "isStatic" : true,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/SimpleCallTest.java",
    "className" : "com.testproject.SimpleCallTest",
    "startLine" : 46,
    "endLine" : 48,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.SimpleCallTest.overloaded(int)",
    "name" : "overloaded",
    "signature" : "overloaded(int)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    java.lang.System.out.println(\"Int version: \" + param);\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "int param" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/SimpleCallTest.java",
    "className" : "com.testproject.SimpleCallTest",
    "startLine" : 38,
    "endLine" : 40,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.SimpleCallTest.overloaded(java.lang.String)",
    "name" : "overloaded",
    "signature" : "overloaded(java.lang.String)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    java.lang.System.out.println(\"String version: \" + param);\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String param" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/SimpleCallTest.java",
    "className" : "com.testproject.SimpleCallTest",
    "startLine" : 34,
    "endLine" : 36,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.SimpleCallTest.overloaded(java.lang.String,int)",
    "name" : "overloaded",
    "signature" : "overloaded(java.lang.String,int)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    java.lang.System.out.println(((\"Two param version: \" + param1) + \", \") + param2);\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String param1", "int param2" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/SimpleCallTest.java",
    "className" : "com.testproject.SimpleCallTest",
    "startLine" : 42,
    "endLine" : 44,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.SimpleCallTest.target()",
    "name" : "target",
    "signature" : "target()",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    java.lang.System.out.println(\"Target method called\");\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/SimpleCallTest.java",
    "className" : "com.testproject.SimpleCallTest",
    "startLine" : 25,
    "endLine" : 27,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.SimpleCallTest.targetWithParam(java.lang.String)",
    "name" : "targetWithParam",
    "signature" : "targetWithParam(java.lang.String)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    java.lang.System.out.println(\"Target with param: \" + param);\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String param" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/SimpleCallTest.java",
    "className" : "com.testproject.SimpleCallTest",
    "startLine" : 29,
    "endLine" : 31,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : true,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.ResponseEntity.badRequest()",
    "name" : "badRequest",
    "signature" : "badRequest()",
    "returnType" : "com.testproject.ResponseEntity",
    "comment" : "",
    "body" : "{\n    return new com.testproject.ResponseEntity<>(null, com.testproject.HttpStatus.BAD_REQUEST);\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : true,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/SpringAnnotations.java",
    "className" : "com.testproject.ResponseEntity",
    "startLine" : 194,
    "endLine" : 196,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.ResponseEntity.body(java.lang.Object)",
    "name" : "body",
    "signature" : "body(java.lang.Object)",
    "returnType" : "com.testproject.ResponseEntity",
    "comment" : "",
    "body" : "{\n    return new com.testproject.ResponseEntity<>(body, this.status);\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "T body" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/SpringAnnotations.java",
    "className" : "com.testproject.ResponseEntity",
    "startLine" : 198,
    "endLine" : 200,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.ResponseEntity.build()",
    "name" : "build",
    "signature" : "build()",
    "returnType" : "com.testproject.ResponseEntity",
    "comment" : "",
    "body" : "{\n    return this;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/SpringAnnotations.java",
    "className" : "com.testproject.ResponseEntity",
    "startLine" : 202,
    "endLine" : 204,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : true,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.ResponseEntity.notFound()",
    "name" : "notFound",
    "signature" : "notFound()",
    "returnType" : "com.testproject.ResponseEntity",
    "comment" : "",
    "body" : "{\n    return new com.testproject.ResponseEntity<>(null, com.testproject.HttpStatus.NOT_FOUND);\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : true,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/SpringAnnotations.java",
    "className" : "com.testproject.ResponseEntity",
    "startLine" : 190,
    "endLine" : 192,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : true,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.ResponseEntity.ok(java.lang.Object)",
    "name" : "ok",
    "signature" : "ok(java.lang.Object)",
    "returnType" : "com.testproject.ResponseEntity",
    "comment" : "",
    "body" : "{\n    return new com.testproject.ResponseEntity<>(body, com.testproject.HttpStatus.OK);\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "T body" ],
    "isAbstract" : false,
    "isStatic" : true,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/SpringAnnotations.java",
    "className" : "com.testproject.ResponseEntity",
    "startLine" : 182,
    "endLine" : 184,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : true,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.ResponseEntity.status(com.testproject.HttpStatus)",
    "name" : "status",
    "signature" : "status(com.testproject.HttpStatus)",
    "returnType" : "com.testproject.ResponseEntity",
    "comment" : "",
    "body" : "{\n    return new com.testproject.ResponseEntity<>(null, status);\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "com.testproject.HttpStatus status" ],
    "isAbstract" : false,
    "isStatic" : true,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/SpringAnnotations.java",
    "className" : "com.testproject.ResponseEntity",
    "startLine" : 186,
    "endLine" : 188,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : true,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.ResponseEntity.com.testproject.ResponseEntity(java.lang.Object,com.testproject.HttpStatus)",
    "name" : "<init>",
    "signature" : "com.testproject.ResponseEntity(java.lang.Object,com.testproject.HttpStatus)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    this.body = body;\n    this.status = status;\n}",
    "visibility" : "private",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "T body", "com.testproject.HttpStatus status" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/SpringAnnotations.java",
    "className" : "com.testproject.ResponseEntity",
    "startLine" : 177,
    "endLine" : 180,
    "isConstructor" : true,
    "decorators" : null,
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.User.addOrder(com.testproject.Order)",
    "name" : "addOrder",
    "signature" : "addOrder(com.testproject.Order)",
    "returnType" : "void",
    "comment" : "Business method demonstrating:\n- Local variables\n- Generic types\n- Method chaining\n- Exception handling\n",
    "body" : "{\n    if (order == null) {\n        throw new java.lang.IllegalArgumentException(\"Order cannot be null\");\n    }\n    if (this.orders == null) {\n        this.orders = new java.util.ArrayList<>();\n    }\n    this.orders.add(order);\n    order.setUser(this);\n    markAsUpdated(\"system\");\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 3,
    "parameters" : [ "com.testproject.Order order" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/User.java",
    "className" : "com.testproject.User",
    "startLine" : 123,
    "endLine" : 135,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.User.findRoleByType(java.lang.Class)",
    "name" : "findRoleByType",
    "signature" : "findRoleByType(java.lang.Class)",
    "returnType" : "T",
    "comment" : "Method with generic return type\n",
    "body" : "{\n    if (roles == null) {\n        return null;\n    }\n    for (com.testproject.Role role : roles) {\n        if (roleType.isInstance(role)) {\n            return roleType.cast(role);\n        }\n    }\n    return null;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 4,
    "parameters" : [ "java.lang.Class roleType" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/User.java",
    "className" : "com.testproject.User",
    "startLine" : 140,
    "endLine" : 149,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.User.getEmail()",
    "name" : "getEmail",
    "signature" : "getEmail()",
    "returnType" : "java.lang.String",
    "comment" : "",
    "body" : "{\n    return email;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/User.java",
    "className" : "com.testproject.User",
    "startLine" : 60,
    "endLine" : 62,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.User.getEntityName()",
    "name" : "getEntityName",
    "signature" : "getEntityName()",
    "returnType" : "java.lang.String",
    "comment" : "",
    "body" : "{\n    return \"User\";\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/User.java",
    "className" : "com.testproject.User",
    "startLine" : 47,
    "endLine" : 49,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.User.getFirstName()",
    "name" : "getFirstName",
    "signature" : "getFirstName()",
    "returnType" : "java.lang.String",
    "comment" : "",
    "body" : "{\n    return firstName;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/User.java",
    "className" : "com.testproject.User",
    "startLine" : 68,
    "endLine" : 70,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.User.getFullName()",
    "name" : "getFullName",
    "signature" : "getFullName()",
    "returnType" : "java.lang.String",
    "comment" : "Method demonstrating static method calls\n",
    "body" : "{\n    return java.lang.String.format(\"%s %s\", firstName != null ? firstName : \"\", lastName != null ? lastName : \"\").trim();\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 2,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/User.java",
    "className" : "com.testproject.User",
    "startLine" : 154,
    "endLine" : 158,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.User.getLastName()",
    "name" : "getLastName",
    "signature" : "getLastName()",
    "returnType" : "java.lang.String",
    "comment" : "",
    "body" : "{\n    return lastName;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/User.java",
    "className" : "com.testproject.User",
    "startLine" : 76,
    "endLine" : 78,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.User.getOrders()",
    "name" : "getOrders",
    "signature" : "getOrders()",
    "returnType" : "java.util.List",
    "comment" : "",
    "body" : "{\n    return orders;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/User.java",
    "className" : "com.testproject.User",
    "startLine" : 92,
    "endLine" : 94,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.User.getProfile()",
    "name" : "getProfile",
    "signature" : "getProfile()",
    "returnType" : "com.testproject.Profile",
    "comment" : "",
    "body" : "{\n    return profile;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/User.java",
    "className" : "com.testproject.User",
    "startLine" : 108,
    "endLine" : 110,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.User.getRoles()",
    "name" : "getRoles",
    "signature" : "getRoles()",
    "returnType" : "java.util.Set",
    "comment" : "",
    "body" : "{\n    return roles;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/User.java",
    "className" : "com.testproject.User",
    "startLine" : 100,
    "endLine" : 102,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.User.getStatus()",
    "name" : "getStatus",
    "signature" : "getStatus()",
    "returnType" : "com.testproject.UserStatus",
    "comment" : "",
    "body" : "{\n    return status;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/User.java",
    "className" : "com.testproject.User",
    "startLine" : 84,
    "endLine" : 86,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.User.getUsername()",
    "name" : "getUsername",
    "signature" : "getUsername()",
    "returnType" : "java.lang.String",
    "comment" : "",
    "body" : "{\n    return username;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/User.java",
    "className" : "com.testproject.User",
    "startLine" : 52,
    "endLine" : 54,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.User.setEmail(java.lang.String)",
    "name" : "setEmail",
    "signature" : "setEmail(java.lang.String)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    this.email = email;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String email" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/User.java",
    "className" : "com.testproject.User",
    "startLine" : 64,
    "endLine" : 66,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.User.setFirstName(java.lang.String)",
    "name" : "setFirstName",
    "signature" : "setFirstName(java.lang.String)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    this.firstName = firstName;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String firstName" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/User.java",
    "className" : "com.testproject.User",
    "startLine" : 72,
    "endLine" : 74,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.User.setLastName(java.lang.String)",
    "name" : "setLastName",
    "signature" : "setLastName(java.lang.String)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    this.lastName = lastName;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String lastName" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/User.java",
    "className" : "com.testproject.User",
    "startLine" : 80,
    "endLine" : 82,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.User.setOrders(java.util.List)",
    "name" : "setOrders",
    "signature" : "setOrders(java.util.List)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    this.orders = orders;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.util.List orders" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/User.java",
    "className" : "com.testproject.User",
    "startLine" : 96,
    "endLine" : 98,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.User.setProfile(com.testproject.Profile)",
    "name" : "setProfile",
    "signature" : "setProfile(com.testproject.Profile)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    this.profile = profile;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "com.testproject.Profile profile" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/User.java",
    "className" : "com.testproject.User",
    "startLine" : 112,
    "endLine" : 114,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.User.setRoles(java.util.Set)",
    "name" : "setRoles",
    "signature" : "setRoles(java.util.Set)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    this.roles = roles;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.util.Set roles" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/User.java",
    "className" : "com.testproject.User",
    "startLine" : 104,
    "endLine" : 106,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.User.setStatus(com.testproject.UserStatus)",
    "name" : "setStatus",
    "signature" : "setStatus(com.testproject.UserStatus)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    this.status = status;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "com.testproject.UserStatus status" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/User.java",
    "className" : "com.testproject.User",
    "startLine" : 88,
    "endLine" : 90,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.User.setUsername(java.lang.String)",
    "name" : "setUsername",
    "signature" : "setUsername(java.lang.String)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    this.username = username;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String username" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/User.java",
    "className" : "com.testproject.User",
    "startLine" : 56,
    "endLine" : 58,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.User.validateUser()",
    "name" : "validateUser",
    "signature" : "validateUser()",
    "returnType" : "void",
    "comment" : "Method with multiple exception types\n",
    "body" : "{\n    if ((username == null) || username.isEmpty()) {\n        throw new com.testproject.ValidationException(\"Username is required\");\n    }\n    if ((email == null) || (!email.contains(\"@\"))) {\n        throw new com.testproject.ValidationException(\"Valid email is required\");\n    }\n    if (status == com.testproject.UserStatus.BLOCKED) {\n        throw new java.lang.SecurityException(\"User is blocked\");\n    }\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 6,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/User.java",
    "className" : "com.testproject.User",
    "startLine" : 163,
    "endLine" : 175,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : true,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.User.com.testproject.User()",
    "name" : "<init>",
    "signature" : "com.testproject.User()",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    super();\n    this.orders = new java.util.ArrayList<>();\n    this.roles = new java.util.HashSet<>();\n    this.status = com.testproject.UserStatus.ACTIVE;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/User.java",
    "className" : "com.testproject.User",
    "startLine" : 27,
    "endLine" : 32,
    "isConstructor" : true,
    "decorators" : null,
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : true,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.User.com.testproject.User(java.lang.String,java.lang.String)",
    "name" : "<init>",
    "signature" : "com.testproject.User(java.lang.String,java.lang.String)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    this();\n    this.username = username;\n    this.email = email;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String username", "java.lang.String email" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/User.java",
    "className" : "com.testproject.User",
    "startLine" : 34,
    "endLine" : 38,
    "isConstructor" : true,
    "decorators" : null,
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : true,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.User.com.testproject.User(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
    "name" : "<init>",
    "signature" : "com.testproject.User(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    this(username, email);\n    this.firstName = firstName;\n    this.lastName = lastName;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String username", "java.lang.String email", "java.lang.String firstName", "java.lang.String lastName" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/User.java",
    "className" : "com.testproject.User",
    "startLine" : 40,
    "endLine" : 44,
    "isConstructor" : true,
    "decorators" : null,
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : true,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserController.createUser(com.testproject.CreateUserRequest)",
    "name" : "createUser",
    "signature" : "createUser(com.testproject.CreateUserRequest)",
    "returnType" : "com.testproject.ResponseEntity",
    "comment" : "",
    "body" : "{\n    try {\n        com.testproject.User user = userMapper.toEntity(request);\n        com.testproject.User savedUser = userService.save(user);\n        com.testproject.UserDto userDto = userMapper.toDto(savedUser);\n        return com.testproject.ResponseEntity.status(com.testproject.HttpStatus.CREATED).body(userDto);\n    } catch (com.testproject.ValidationException e) {\n        return com.testproject.ResponseEntity.badRequest().build();\n    }\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 2,
    "parameters" : [ "com.testproject.CreateUserRequest request" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserController.java",
    "className" : "com.testproject.UserController",
    "startLine" : 60,
    "endLine" : 70,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "PostMapping",
      "arguments" : [ "consumes=com.testproject.MediaType.APPLICATION_JSON_VALUE", "produces=com.testproject.MediaType.APPLICATION_JSON_VALUE" ],
      "properties" : { }
    } ],
    "isApiEndpoint" : true,
    "httpMethod" : "POST",
    "requestPath" : "/api/v1/users/createUser"
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : true,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserController.createUserOrder(java.lang.Long,com.testproject.CreateOrderRequest)",
    "name" : "createUserOrder",
    "signature" : "createUserOrder(java.lang.Long,com.testproject.CreateOrderRequest)",
    "returnType" : "com.testproject.ResponseEntity",
    "comment" : "",
    "body" : "{\n    com.testproject.Order order = userService.createOrderForUser(id, request);\n    com.testproject.OrderDto orderDto = new com.testproject.OrderDto(order);\n    return com.testproject.ResponseEntity.status(com.testproject.HttpStatus.CREATED).body(orderDto);\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.Long id", "com.testproject.CreateOrderRequest request" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserController.java",
    "className" : "com.testproject.UserController",
    "startLine" : 125,
    "endLine" : 133,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "PostMapping",
      "arguments" : [ "\"/{id}/orders\"" ],
      "properties" : { }
    } ],
    "isApiEndpoint" : true,
    "httpMethod" : "POST",
    "requestPath" : "/api/v1/users/{id}/orders"
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : true,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserController.deleteUser(java.lang.Long)",
    "name" : "deleteUser",
    "signature" : "deleteUser(java.lang.Long)",
    "returnType" : "com.testproject.ResponseEntity",
    "comment" : "",
    "body" : "{\n    boolean deleted = userService.deleteById(id);\n    if (deleted) {\n        return com.testproject.ResponseEntity.noContent(com.testproject.ResponseEntity).build();\n    } else {\n        return com.testproject.ResponseEntity.notFound().build();\n    }\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 2,
    "parameters" : [ "java.lang.Long id" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserController.java",
    "className" : "com.testproject.UserController",
    "startLine" : 90,
    "endLine" : 98,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "DeleteMapping",
      "arguments" : [ "\"/{id}\"" ],
      "properties" : { }
    } ],
    "isApiEndpoint" : true,
    "httpMethod" : "DELETE",
    "requestPath" : "/api/v1/users/{id}"
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : true,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserController.getAllUsers(int,int,java.lang.String)",
    "name" : "getAllUsers",
    "signature" : "getAllUsers(int,int,java.lang.String)",
    "returnType" : "com.testproject.ResponseEntity",
    "comment" : "",
    "body" : "{\n    try {\n        java.util.List<com.testproject.User> users = userService.findAll(page, size, search);\n        java.util.List<com.testproject.UserDto> userDtos = userMapper.toDto(users);\n        return com.testproject.ResponseEntity.ok(userDtos);\n    } catch (java.lang.Exception e) {\n        return com.testproject.ResponseEntity.status(com.testproject.HttpStatus.INTERNAL_SERVER_ERROR).build();\n    }\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 2,
    "parameters" : [ "int page", "int size", "java.lang.String search" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserController.java",
    "className" : "com.testproject.UserController",
    "startLine" : 33,
    "endLine" : 45,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "GetMapping",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : true,
    "httpMethod" : "GET",
    "requestPath" : "/api/v1/users/getAllUsers"
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : true,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserController.getUserById(java.lang.Long)",
    "name" : "getUserById",
    "signature" : "getUserById(java.lang.Long)",
    "returnType" : "com.testproject.ResponseEntity",
    "comment" : "",
    "body" : "{\n    java.util.Optional<com.testproject.User> user = userService.findById(id);\n    if (user.isPresent()) {\n        com.testproject.UserDto userDto = userMapper.toDto(user.get());\n        return com.testproject.ResponseEntity.ok(userDto);\n    } else {\n        return com.testproject.ResponseEntity.notFound().build();\n    }\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 2,
    "parameters" : [ "java.lang.Long id" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserController.java",
    "className" : "com.testproject.UserController",
    "startLine" : 48,
    "endLine" : 57,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "GetMapping",
      "arguments" : [ "path=\"/{id}\"" ],
      "properties" : { }
    } ],
    "isApiEndpoint" : true,
    "httpMethod" : "GET",
    "requestPath" : "/api/v1/users/{id}"
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : true,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserController.getUserOrders(java.lang.Long)",
    "name" : "getUserOrders",
    "signature" : "getUserOrders(java.lang.Long)",
    "returnType" : "com.testproject.ResponseEntity",
    "comment" : "",
    "body" : "{\n    java.util.List<com.testproject.Order> orders = userService.getUserOrders(id);\n    java.util.List<com.testproject.OrderDto> orderDtos = orders.stream().map(order -> new com.testproject.OrderDto(order)).collect(java.util.stream.Collectors.toList());\n    return com.testproject.ResponseEntity.ok(orderDtos);\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.Long id" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserController.java",
    "className" : "com.testproject.UserController",
    "startLine" : 115,
    "endLine" : 122,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "GetMapping",
      "arguments" : [ "\"/{id}/orders\"" ],
      "properties" : { }
    } ],
    "isApiEndpoint" : true,
    "httpMethod" : "GET",
    "requestPath" : "/api/v1/users/{id}/orders"
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : true,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserController.searchUsers(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
    "name" : "searchUsers",
    "signature" : "searchUsers(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
    "returnType" : "com.testproject.ResponseEntity",
    "comment" : "Complex endpoint with multiple parameters and custom media type\n",
    "body" : "{\n    java.util.Map<java.lang.String, java.lang.Object> result = userService.searchUsers(query, sortBy, sortDirection);\n    return com.testproject.ResponseEntity.ok(result);\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String query", "java.lang.String sortBy", "java.lang.String sortDirection", "java.lang.String clientVersion" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserController.java",
    "className" : "com.testproject.UserController",
    "startLine" : 143,
    "endLine" : 151,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "RequestMapping",
      "arguments" : [ "method=RequestMethod.GET", "path=\"/search\"", "produces={ com.testproject.MediaType.APPLICATION_JSON_VALUE, com.testproject.MediaType.APPLICATION_XML_VALUE }" ],
      "properties" : { }
    } ],
    "isApiEndpoint" : true,
    "httpMethod" : "GET",
    "requestPath" : "/api/v1/users/search"
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : true,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserController.updateUser(java.lang.Long,com.testproject.UpdateUserRequest)",
    "name" : "updateUser",
    "signature" : "updateUser(java.lang.Long,com.testproject.UpdateUserRequest)",
    "returnType" : "com.testproject.ResponseEntity",
    "comment" : "",
    "body" : "{\n    java.util.Optional<com.testproject.User> existingUser = userService.findById(id);\n    if (!existingUser.isPresent()) {\n        return com.testproject.ResponseEntity.notFound().build();\n    }\n    com.testproject.User user = userMapper.updateEntity(existingUser.get(), request);\n    com.testproject.User savedUser = userService.save(user);\n    com.testproject.UserDto userDto = userMapper.toDto(savedUser);\n    return com.testproject.ResponseEntity.ok(userDto);\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 2,
    "parameters" : [ "java.lang.Long id", "com.testproject.UpdateUserRequest request" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserController.java",
    "className" : "com.testproject.UserController",
    "startLine" : 73,
    "endLine" : 87,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "PutMapping",
      "arguments" : [ "consumes=com.testproject.MediaType.APPLICATION_JSON_VALUE", "path=\"/{id}\"" ],
      "properties" : { }
    } ],
    "isApiEndpoint" : true,
    "httpMethod" : "PUT",
    "requestPath" : "/api/v1/users/{id}"
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : true,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserController.updateUserStatus(java.lang.Long,com.testproject.UserStatus)",
    "name" : "updateUserStatus",
    "signature" : "updateUserStatus(java.lang.Long,com.testproject.UserStatus)",
    "returnType" : "com.testproject.ResponseEntity",
    "comment" : "",
    "body" : "{\n    try {\n        com.testproject.User user = userService.updateStatus(id, status);\n        com.testproject.UserDto userDto = userMapper.toDto(user);\n        return com.testproject.ResponseEntity.ok(userDto);\n    } catch (com.testproject.EntityNotFoundException e) {\n        return com.testproject.ResponseEntity.notFound().build();\n    }\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 2,
    "parameters" : [ "java.lang.Long id", "com.testproject.UserStatus status" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserController.java",
    "className" : "com.testproject.UserController",
    "startLine" : 101,
    "endLine" : 112,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "PatchMapping",
      "arguments" : [ "path=\"/{id}/status\"" ],
      "properties" : { }
    } ],
    "isApiEndpoint" : true,
    "httpMethod" : "PATCH",
    "requestPath" : "/api/v1/users/{id}/status"
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : true,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserController.com.testproject.UserController(com.testproject.UserService,com.testproject.UserMapper)",
    "name" : "<init>",
    "signature" : "com.testproject.UserController(com.testproject.UserService,com.testproject.UserMapper)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    this.userService = userService;\n    this.userMapper = userMapper;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "com.testproject.UserService userService", "com.testproject.UserMapper userMapper" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserController.java",
    "className" : "com.testproject.UserController",
    "startLine" : 27,
    "endLine" : 30,
    "isConstructor" : true,
    "decorators" : null,
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserRepository.count()",
    "name" : "count",
    "signature" : "count()",
    "returnType" : "long",
    "comment" : "",
    "body" : "{\n    // Implementation would use JPA/Hibernate\n    return 0;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserRepository.java",
    "className" : "com.testproject.UserRepository",
    "startLine" : 47,
    "endLine" : 50,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserRepository.countUsersByStatus()",
    "name" : "countUsersByStatus",
    "signature" : "countUsersByStatus()",
    "returnType" : "java.util.Map",
    "comment" : "Method with complex parameters and return type\n",
    "body" : "{\n    java.util.Map<com.testproject.UserStatus, java.lang.Long> statusCounts = new java.util.HashMap<>();\n    for (com.testproject.UserStatus status : com.testproject.UserStatus.values()) {\n        // Count users for each status\n        statusCounts.put(status, 0L);\n    }\n    return statusCounts;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 3,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserRepository.java",
    "className" : "com.testproject.UserRepository",
    "startLine" : 100,
    "endLine" : 109,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserRepository.deleteAll()",
    "name" : "deleteAll",
    "signature" : "deleteAll()",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    // Implementation would use JPA/Hibernate\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserRepository.java",
    "className" : "com.testproject.UserRepository",
    "startLine" : 65,
    "endLine" : 67,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserRepository.deleteById(java.lang.Long)",
    "name" : "deleteById",
    "signature" : "deleteById(java.lang.Long)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    // Implementation would use JPA/Hibernate\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.Long id" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserRepository.java",
    "className" : "com.testproject.UserRepository",
    "startLine" : 36,
    "endLine" : 38,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserRepository.existsById(java.lang.Long)",
    "name" : "existsById",
    "signature" : "existsById(java.lang.Long)",
    "returnType" : "boolean",
    "comment" : "",
    "body" : "{\n    // Implementation would use JPA/Hibernate\n    return false;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.Long id" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserRepository.java",
    "className" : "com.testproject.UserRepository",
    "startLine" : 41,
    "endLine" : 44,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserRepository.existsByUsername(java.lang.String)",
    "name" : "existsByUsername",
    "signature" : "existsByUsername(java.lang.String)",
    "returnType" : "boolean",
    "comment" : "",
    "body" : "{\n    // Check for username existence\n    return false;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 2,
    "parameters" : [ "java.lang.String username" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserRepository.java",
    "className" : "com.testproject.UserRepository",
    "startLine" : 82,
    "endLine" : 85,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserRepository.findAll()",
    "name" : "findAll",
    "signature" : "findAll()",
    "returnType" : "java.util.List",
    "comment" : "",
    "body" : "{\n    // Implementation would use JPA/Hibernate\n    return java.util.Collections.emptyList();\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserRepository.java",
    "className" : "com.testproject.UserRepository",
    "startLine" : 24,
    "endLine" : 27,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserRepository.findAllById(java.lang.Iterable)",
    "name" : "findAllById",
    "signature" : "findAllById(java.lang.Iterable)",
    "returnType" : "java.util.List",
    "comment" : "",
    "body" : "{\n    // Implementation would use JPA/Hibernate\n    return java.util.Collections.emptyList();\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.Iterable ids" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserRepository.java",
    "className" : "com.testproject.UserRepository",
    "startLine" : 53,
    "endLine" : 56,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserRepository.findByDeletedFalse()",
    "name" : "findByDeletedFalse",
    "signature" : "findByDeletedFalse()",
    "returnType" : "java.util.List",
    "comment" : "",
    "body" : "{\n    // Find non-deleted users\n    return java.util.Collections.emptyList();\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserRepository.java",
    "className" : "com.testproject.UserRepository",
    "startLine" : 77,
    "endLine" : 80,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserRepository.findById(java.lang.Long)",
    "name" : "findById",
    "signature" : "findById(java.lang.Long)",
    "returnType" : "java.util.Optional",
    "comment" : "",
    "body" : "{\n    // Implementation would use JPA/Hibernate\n    return java.util.Optional.empty();\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.Long id" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserRepository.java",
    "className" : "com.testproject.UserRepository",
    "startLine" : 18,
    "endLine" : 21,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserRepository.findByStatus(com.testproject.UserStatus)",
    "name" : "findByStatus",
    "signature" : "findByStatus(com.testproject.UserStatus)",
    "returnType" : "java.util.List",
    "comment" : "",
    "body" : "{\n    // Find users by status\n    return java.util.Collections.emptyList();\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "com.testproject.UserStatus status" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserRepository.java",
    "className" : "com.testproject.UserRepository",
    "startLine" : 87,
    "endLine" : 90,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserRepository.findByUsernameContainingOrEmailContaining(java.lang.String,java.lang.String)",
    "name" : "findByUsernameContainingOrEmailContaining",
    "signature" : "findByUsernameContainingOrEmailContaining(java.lang.String,java.lang.String)",
    "returnType" : "java.util.List",
    "comment" : "Custom repository methods\n",
    "body" : "{\n    // Custom query implementation\n    return java.util.Collections.emptyList();\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String username", "java.lang.String email" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserRepository.java",
    "className" : "com.testproject.UserRepository",
    "startLine" : 72,
    "endLine" : 75,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserRepository.save(com.testproject.User)",
    "name" : "save",
    "signature" : "save(com.testproject.User)",
    "returnType" : "com.testproject.User",
    "comment" : "",
    "body" : "{\n    // Implementation would use JPA/Hibernate\n    return user;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "com.testproject.User user" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserRepository.java",
    "className" : "com.testproject.UserRepository",
    "startLine" : 30,
    "endLine" : 33,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserRepository.saveAll(java.lang.Iterable)",
    "name" : "saveAll",
    "signature" : "saveAll(java.lang.Iterable)",
    "returnType" : "java.util.List",
    "comment" : "",
    "body" : "{\n    // Implementation would use JPA/Hibernate\n    return java.util.Collections.emptyList();\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.Iterable users" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserRepository.java",
    "className" : "com.testproject.UserRepository",
    "startLine" : 59,
    "endLine" : 62,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserRepository.searchUsers(java.lang.String,java.lang.String,java.lang.String)",
    "name" : "searchUsers",
    "signature" : "searchUsers(java.lang.String,java.lang.String,java.lang.String)",
    "returnType" : "java.util.List",
    "comment" : "",
    "body" : "{\n    // Complex search implementation\n    return java.util.Collections.emptyList();\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String query", "java.lang.String sortBy", "java.lang.String sortDirection" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserRepository.java",
    "className" : "com.testproject.UserRepository",
    "startLine" : 92,
    "endLine" : 95,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserService.afterCreate(com.testproject.User)",
    "name" : "afterCreate",
    "signature" : "afterCreate(com.testproject.User)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    super.afterCreate(user);\n    notificationService.sendWelcomeEmail(user);\n}",
    "visibility" : "protected",
    "cyclomaticComplexity" : 2,
    "parameters" : [ "com.testproject.User user" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserService.java",
    "className" : "com.testproject.UserService",
    "startLine" : 84,
    "endLine" : 87,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserService.beforeDelete(com.testproject.User)",
    "name" : "beforeDelete",
    "signature" : "beforeDelete(com.testproject.User)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    super.beforeDelete(user);\n    // Cancel any pending orders\n    java.util.List<com.testproject.Order> activeOrders = orderService.findActiveByUser(user);\n    for (com.testproject.Order order : activeOrders) {\n        orderService.cancel(order.getId());\n    }\n}",
    "visibility" : "protected",
    "cyclomaticComplexity" : 3,
    "parameters" : [ "com.testproject.User user" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserService.java",
    "className" : "com.testproject.UserService",
    "startLine" : 90,
    "endLine" : 97,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserService.createOrderForUser(java.lang.Long,com.testproject.CreateOrderRequest)",
    "name" : "createOrderForUser",
    "signature" : "createOrderForUser(java.lang.Long,com.testproject.CreateOrderRequest)",
    "returnType" : "com.testproject.Order",
    "comment" : "",
    "body" : "{\n    com.testproject.User user = userRepository.findById(userId).orElseThrow(() -> new com.testproject.EntityNotFoundException(\"User not found\"));\n    com.testproject.Order order = new com.testproject.Order();\n    order.setUser(user);\n    order.setOrderNumber(generateOrderNumber());\n    return orderService.save(order);\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.Long userId", "com.testproject.CreateOrderRequest request" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserService.java",
    "className" : "com.testproject.UserService",
    "startLine" : 173,
    "endLine" : 182,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserService.deleteById(java.lang.Long)",
    "name" : "deleteById",
    "signature" : "deleteById(java.lang.Long)",
    "returnType" : "boolean",
    "comment" : "",
    "body" : "{\n    java.util.Optional<com.testproject.User> user = findById(id);\n    if (user.isPresent()) {\n        userRepository.deleteById(id);\n        return true;\n    }\n    return false;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 2,
    "parameters" : [ "java.lang.Long id" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserService.java",
    "className" : "com.testproject.UserService",
    "startLine" : 141,
    "endLine" : 148,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserService.findAll()",
    "name" : "findAll",
    "signature" : "findAll()",
    "returnType" : "java.util.List",
    "comment" : "",
    "body" : "{\n    beforeFindAll();\n    // Custom implementation - exclude deleted users\n    java.util.List<com.testproject.User> users = userRepository.findByDeletedFalse();\n    afterFindAll(users);\n    return users;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 2,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserService.java",
    "className" : "com.testproject.UserService",
    "startLine" : 101,
    "endLine" : 107,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserService.findAll(int,int,java.lang.String)",
    "name" : "findAll",
    "signature" : "findAll(int,int,java.lang.String)",
    "returnType" : "java.util.List",
    "comment" : "",
    "body" : "{\n    if ((search != null) && (!search.isEmpty())) {\n        return userRepository.findByUsernameContainingOrEmailContaining(search, search);\n    }\n    return userRepository.findAll();\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 3,
    "parameters" : [ "int page", "int size", "java.lang.String search" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserService.java",
    "className" : "com.testproject.UserService",
    "startLine" : 110,
    "endLine" : 115,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Transactional",
      "arguments" : [ "readOnly=true" ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserService.findById(java.lang.Long)",
    "name" : "findById",
    "signature" : "findById(java.lang.Long)",
    "returnType" : "java.util.Optional",
    "comment" : "",
    "body" : "{\n    if (id == null) {\n        throw new java.lang.IllegalArgumentException(\"ID cannot be null\");\n    }\n    return userRepository.findById(id);\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 2,
    "parameters" : [ "java.lang.Long id" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserService.java",
    "className" : "com.testproject.UserService",
    "startLine" : 118,
    "endLine" : 123,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Transactional",
      "arguments" : [ "readOnly=true" ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserService.generateOrderNumber()",
    "name" : "generateOrderNumber",
    "signature" : "generateOrderNumber()",
    "returnType" : "java.lang.String",
    "comment" : "",
    "body" : "{\n    return \"ORD-\" + java.lang.System.currentTimeMillis();\n}",
    "visibility" : "private",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserService.java",
    "className" : "com.testproject.UserService",
    "startLine" : 234,
    "endLine" : 236,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserService.getEntityName()",
    "name" : "getEntityName",
    "signature" : "getEntityName()",
    "returnType" : "java.lang.String",
    "comment" : "",
    "body" : "{\n    return \"User\";\n}",
    "visibility" : "protected",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserService.java",
    "className" : "com.testproject.UserService",
    "startLine" : 36,
    "endLine" : 38,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserService.getUserOrders(java.lang.Long)",
    "name" : "getUserOrders",
    "signature" : "getUserOrders(java.lang.Long)",
    "returnType" : "java.util.List",
    "comment" : "",
    "body" : "{\n    com.testproject.User user = userRepository.findById(userId).orElseThrow(() -> new com.testproject.EntityNotFoundException(\"User not found\"));\n    return orderService.findByUser(user);\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.Long userId" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserService.java",
    "className" : "com.testproject.UserService",
    "startLine" : 166,
    "endLine" : 171,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Transactional",
      "arguments" : [ "readOnly=true" ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserService.handleStatusChange(com.testproject.User,com.testproject.UserStatus,com.testproject.UserStatus)",
    "name" : "handleStatusChange",
    "signature" : "handleStatusChange(com.testproject.User,com.testproject.UserStatus,com.testproject.UserStatus)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    if (oldStatus != newStatus) {\n        switch (newStatus) {\n            case ACTIVE :\n                notificationService.sendAccountActivatedEmail(user);\n                break;\n            case BLOCKED :\n                notificationService.sendAccountBlockedEmail(user);\n                break;\n            case INACTIVE :\n                notificationService.sendAccountDeactivatedEmail(user);\n                break;\n        }\n    }\n}",
    "visibility" : "private",
    "cyclomaticComplexity" : 6,
    "parameters" : [ "com.testproject.User user", "com.testproject.UserStatus oldStatus", "com.testproject.UserStatus newStatus" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserService.java",
    "className" : "com.testproject.UserService",
    "startLine" : 218,
    "endLine" : 232,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserService.isValidEmail(java.lang.String)",
    "name" : "isValidEmail",
    "signature" : "isValidEmail(java.lang.String)",
    "returnType" : "boolean",
    "comment" : "",
    "body" : "{\n    return ((email != null) && email.contains(\"@\")) && email.contains(\".\");\n}",
    "visibility" : "private",
    "cyclomaticComplexity" : 3,
    "parameters" : [ "java.lang.String email" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserService.java",
    "className" : "com.testproject.UserService",
    "startLine" : 214,
    "endLine" : 216,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserService.performUpdate(com.testproject.User,com.testproject.User)",
    "name" : "performUpdate",
    "signature" : "performUpdate(com.testproject.User,com.testproject.User)",
    "returnType" : "com.testproject.User",
    "comment" : "",
    "body" : "{\n    // Copy updated fields\n    if (updated.getFirstName() != null) {\n        existing.setFirstName(updated.getFirstName());\n    }\n    if (updated.getLastName() != null) {\n        existing.setLastName(updated.getLastName());\n    }\n    if (updated.getEmail() != null) {\n        existing.setEmail(updated.getEmail());\n    }\n    existing.markAsUpdated(\"system\");\n    return existing;\n}",
    "visibility" : "protected",
    "cyclomaticComplexity" : 4,
    "parameters" : [ "com.testproject.User existing", "com.testproject.User updated" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserService.java",
    "className" : "com.testproject.UserService",
    "startLine" : 66,
    "endLine" : 80,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserService.save(com.testproject.User)",
    "name" : "save",
    "signature" : "save(com.testproject.User)",
    "returnType" : "com.testproject.User",
    "comment" : "",
    "body" : "{\n    if (user == null) {\n        throw new java.lang.IllegalArgumentException(\"User cannot be null\");\n    }\n    // Validate user before saving\n    validateUser(user);\n    com.testproject.User savedUser = userRepository.save(user);\n    // Send notification asynchronously\n    notificationService.sendWelcomeEmail(savedUser);\n    return savedUser;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 5,
    "parameters" : [ "com.testproject.User user" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserService.java",
    "className" : "com.testproject.UserService",
    "startLine" : 125,
    "endLine" : 139,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserService.searchUsers(java.lang.String,java.lang.String,java.lang.String)",
    "name" : "searchUsers",
    "signature" : "searchUsers(java.lang.String,java.lang.String,java.lang.String)",
    "returnType" : "java.util.Map",
    "comment" : "",
    "body" : "{\n    // Complex search logic would go here\n    java.util.List<com.testproject.User> users = userRepository.searchUsers(query, sortBy, sortDirection);\n    java.util.Map<java.lang.String, java.lang.Object> result = new java.util.HashMap<>();\n    result.put(\"users\", users);\n    result.put(\"total\", users.size());\n    result.put(\"query\", query);\n    return result;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String query", "java.lang.String sortBy", "java.lang.String sortDirection" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserService.java",
    "className" : "com.testproject.UserService",
    "startLine" : 184,
    "endLine" : 194,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserService.updateStatus(java.lang.Long,com.testproject.UserStatus)",
    "name" : "updateStatus",
    "signature" : "updateStatus(java.lang.Long,com.testproject.UserStatus)",
    "returnType" : "com.testproject.User",
    "comment" : "",
    "body" : "{\n    com.testproject.User user = userRepository.findById(id).orElseThrow(() -> new com.testproject.EntityNotFoundException(\"User not found with id: \" + id));\n    com.testproject.UserStatus oldStatus = user.getStatus();\n    user.setStatus(status);\n    com.testproject.User updatedUser = userRepository.save(user);\n    // Handle status change notifications\n    handleStatusChange(updatedUser, oldStatus, status);\n    return updatedUser;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 2,
    "parameters" : [ "java.lang.Long id", "com.testproject.UserStatus status" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserService.java",
    "className" : "com.testproject.UserService",
    "startLine" : 150,
    "endLine" : 163,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserService.validateForCreation(com.testproject.User)",
    "name" : "validateForCreation",
    "signature" : "validateForCreation(com.testproject.User)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    if ((user.getUsername() == null) || user.getUsername().trim().isEmpty()) {\n        throw new com.testproject.ValidationException(\"Username is required\");\n    }\n    if ((user.getEmail() == null) || (!isValidEmail(user.getEmail()))) {\n        throw new com.testproject.ValidationException(\"Valid email is required\");\n    }\n    // Check for duplicate username\n    if (userRepository.existsByUsername(user.getUsername())) {\n        throw new com.testproject.ValidationException(\"Username already exists\");\n    }\n}",
    "visibility" : "protected",
    "cyclomaticComplexity" : 7,
    "parameters" : [ "com.testproject.User user" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserService.java",
    "className" : "com.testproject.UserService",
    "startLine" : 41,
    "endLine" : 54,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserService.validateForUpdate(com.testproject.User,com.testproject.User)",
    "name" : "validateForUpdate",
    "signature" : "validateForUpdate(com.testproject.User,com.testproject.User)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    if (((updated.getUsername() != null) && (!updated.getUsername().equals(existing.getUsername()))) && userRepository.existsByUsername(updated.getUsername())) {\n        throw new com.testproject.ValidationException(\"Username already exists\");\n    }\n}",
    "visibility" : "protected",
    "cyclomaticComplexity" : 4,
    "parameters" : [ "com.testproject.User existing", "com.testproject.User updated" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserService.java",
    "className" : "com.testproject.UserService",
    "startLine" : 57,
    "endLine" : 63,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserService.validateUser(com.testproject.User)",
    "name" : "validateUser",
    "signature" : "validateUser(com.testproject.User)",
    "returnType" : "void",
    "comment" : "Private method with exception handling\n",
    "body" : "{\n    if ((user.getUsername() == null) || user.getUsername().trim().isEmpty()) {\n        throw new com.testproject.ValidationException(\"Username is required\");\n    }\n    if ((user.getEmail() == null) || (!isValidEmail(user.getEmail()))) {\n        throw new com.testproject.ValidationException(\"Valid email is required\");\n    }\n    // Check for duplicate username\n    if (userRepository.existsByUsername(user.getUsername())) {\n        throw new com.testproject.ValidationException(\"Username already exists\");\n    }\n}",
    "visibility" : "private",
    "cyclomaticComplexity" : 7,
    "parameters" : [ "com.testproject.User user" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserService.java",
    "className" : "com.testproject.UserService",
    "startLine" : 199,
    "endLine" : 212,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : true,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserService.com.testproject.UserService(com.testproject.UserRepository,com.testproject.OrderService,com.testproject.NotificationService)",
    "name" : "<init>",
    "signature" : "com.testproject.UserService(com.testproject.UserRepository,com.testproject.OrderService,com.testproject.NotificationService)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    super(userRepository);\n    this.userRepository = userRepository;\n    this.orderService = orderService;\n    this.notificationService = notificationService;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 3,
    "parameters" : [ "com.testproject.UserRepository userRepository", "com.testproject.OrderService orderService", "com.testproject.NotificationService notificationService" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserService.java",
    "className" : "com.testproject.UserService",
    "startLine" : 25,
    "endLine" : 32,
    "isConstructor" : true,
    "decorators" : null,
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserServiceTest.any(java.lang.Class)",
    "name" : "any",
    "signature" : "any(java.lang.Class)",
    "returnType" : "T",
    "comment" : "",
    "body" : "{\n    return org.mockito.ArgumentMatchers.any(clazz);\n}",
    "visibility" : "private",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.Class clazz" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserServiceTest.java",
    "className" : "com.testproject.UserServiceTest",
    "startLine" : 192,
    "endLine" : 194,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserServiceTest.assertThat(java.lang.Object)",
    "name" : "assertThat",
    "signature" : "assertThat(java.lang.Object)",
    "returnType" : "com.testproject.UserServiceTest$AssertThat",
    "comment" : "",
    "body" : "{\n    return new com.testproject.UserServiceTest.AssertThat(actual);\n}",
    "visibility" : "private",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.Object actual" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserServiceTest.java",
    "className" : "com.testproject.UserServiceTest",
    "startLine" : 200,
    "endLine" : 202,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserServiceTest.assertThrows(java.lang.Class,java.lang.Runnable)",
    "name" : "assertThrows",
    "signature" : "assertThrows(java.lang.Class,java.lang.Runnable)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    // JUnit assertion implementation\n}",
    "visibility" : "private",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.Class expectedType", "java.lang.Runnable executable" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserServiceTest.java",
    "className" : "com.testproject.UserServiceTest",
    "startLine" : 196,
    "endLine" : 198,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserServiceTest.createTestUser()",
    "name" : "createTestUser",
    "signature" : "createTestUser()",
    "returnType" : "com.testproject.User",
    "comment" : "Helper method to create test user\n",
    "body" : "{\n    return createTestUser(\"testuser\", \"test@example.com\");\n}",
    "visibility" : "private",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserServiceTest.java",
    "className" : "com.testproject.UserServiceTest",
    "startLine" : 167,
    "endLine" : 169,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserServiceTest.createTestUser(java.lang.String,java.lang.String)",
    "name" : "createTestUser",
    "signature" : "createTestUser(java.lang.String,java.lang.String)",
    "returnType" : "com.testproject.User",
    "comment" : "",
    "body" : "{\n    com.testproject.User user = new com.testproject.User();\n    user.setUsername(username);\n    user.setEmail(email);\n    user.setFirstName(\"Test\");\n    user.setLastName(\"User\");\n    user.setStatus(com.testproject.UserStatus.ACTIVE);\n    return user;\n}",
    "visibility" : "private",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String username", "java.lang.String email" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserServiceTest.java",
    "className" : "com.testproject.UserServiceTest",
    "startLine" : 171,
    "endLine" : 179,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserServiceTest.setUp()",
    "name" : "setUp",
    "signature" : "setUp()",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    org.mockito.MockitoAnnotations.openMocks(this);\n    userService = new com.testproject.UserService(userRepository, orderService, notificationService);\n}",
    "visibility" : "package",
    "cyclomaticComplexity" : 2,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserServiceTest.java",
    "className" : "com.testproject.UserServiceTest",
    "startLine" : 35,
    "endLine" : 38,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "BeforeEach",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserServiceTest.shouldFindUserById_WhenUserExists()",
    "name" : "shouldFindUserById_WhenUserExists",
    "signature" : "shouldFindUserById_WhenUserExists()",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    // Given\n    java.lang.Long userId = 1L;\n    com.testproject.User expectedUser = createTestUser();\n    // Mock repository behavior\n    when(userRepository.findById(userId)).thenReturn(java.util.Optional.of(expectedUser));\n    // When\n    java.util.Optional<com.testproject.User> result = userService.findById(userId);\n    // Then\n    assertThat(result).isPresent();\n    assertThat(result.get().getId()).isEqualTo(userId);\n    verify(userRepository).findById(userId);\n}",
    "visibility" : "package",
    "cyclomaticComplexity" : 2,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserServiceTest.java",
    "className" : "com.testproject.UserServiceTest",
    "startLine" : 47,
    "endLine" : 62,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Test",
      "arguments" : [ ],
      "properties" : { }
    }, {
      "name" : "DisplayName",
      "arguments" : [ "\"Should find user by ID when user exists\"" ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserServiceTest.shouldHandleMultipleUsersSearch()",
    "name" : "shouldHandleMultipleUsersSearch",
    "signature" : "shouldHandleMultipleUsersSearch()",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    // Given\n    java.lang.String query = \"john\";\n    java.util.List<com.testproject.User> expectedUsers = java.util.Arrays.asList(createTestUser(\"john1\", \"john1@test.com\"), createTestUser(\"john2\", \"john2@test.com\"));\n    when(userRepository.searchUsers(query, \"username\", \"asc\")).thenReturn(expectedUsers);\n    // When\n    java.util.Map<java.lang.String, java.lang.Object> result = userService.searchUsers(query, \"username\", \"asc\");\n    // Then\n    assertThat(result.get(\"users\")).isEqualTo(expectedUsers);\n    assertThat(result.get(\"total\")).isEqualTo(2);\n    assertThat(result.get(\"query\")).isEqualTo(query);\n}",
    "visibility" : "package",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserServiceTest.java",
    "className" : "com.testproject.UserServiceTest",
    "startLine" : 144,
    "endLine" : 162,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Test",
      "arguments" : [ ],
      "properties" : { }
    }, {
      "name" : "DisplayName",
      "arguments" : [ "\"Should handle multiple users search\"" ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserServiceTest.shouldReturnEmpty_WhenUserDoesNotExist()",
    "name" : "shouldReturnEmpty_WhenUserDoesNotExist",
    "signature" : "shouldReturnEmpty_WhenUserDoesNotExist()",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    // Given\n    java.lang.Long userId = 999L;\n    when(userRepository.findById(userId)).thenReturn(java.util.Optional.empty());\n    // When\n    java.util.Optional<com.testproject.User> result = userService.findById(userId);\n    // Then\n    assertThat(result).isEmpty();\n}",
    "visibility" : "package",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserServiceTest.java",
    "className" : "com.testproject.UserServiceTest",
    "startLine" : 66,
    "endLine" : 76,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Test",
      "arguments" : [ ],
      "properties" : { }
    }, {
      "name" : "DisplayName",
      "arguments" : [ "\"Should return empty when user does not exist\"" ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserServiceTest.shouldSaveUser_Successfully()",
    "name" : "shouldSaveUser_Successfully",
    "signature" : "shouldSaveUser_Successfully()",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    // Given\n    com.testproject.User userToSave = createTestUser();\n    com.testproject.User savedUser = createTestUser();\n    savedUser.setId(1L);\n    when(userRepository.existsByUsername(userToSave.getUsername())).thenReturn(false);\n    when(userRepository.save(userToSave)).thenReturn(savedUser);\n    // When\n    com.testproject.User result = userService.save(userToSave);\n    // Then\n    assertThat(result.getId()).isNotNull();\n    verify(userRepository).save(userToSave);\n    verify(notificationService).sendWelcomeEmail(savedUser);\n}",
    "visibility" : "package",
    "cyclomaticComplexity" : 4,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserServiceTest.java",
    "className" : "com.testproject.UserServiceTest",
    "startLine" : 89,
    "endLine" : 105,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Test",
      "arguments" : [ ],
      "properties" : { }
    }, {
      "name" : "DisplayName",
      "arguments" : [ "\"Should save user successfully\"" ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserServiceTest.shouldThrowException_WhenIdIsNull()",
    "name" : "shouldThrowException_WhenIdIsNull",
    "signature" : "shouldThrowException_WhenIdIsNull()",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    // When & Then\n    assertThrows(java.lang.IllegalArgumentException.class, () -> {\n        userService.findById(null);\n    });\n}",
    "visibility" : "package",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserServiceTest.java",
    "className" : "com.testproject.UserServiceTest",
    "startLine" : 80,
    "endLine" : 85,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Test",
      "arguments" : [ ],
      "properties" : { }
    }, {
      "name" : "DisplayName",
      "arguments" : [ "\"Should throw exception when ID is null\"" ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserServiceTest.shouldThrowValidationException_WhenUsernameIsDuplicate()",
    "name" : "shouldThrowValidationException_WhenUsernameIsDuplicate",
    "signature" : "shouldThrowValidationException_WhenUsernameIsDuplicate()",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    // Given\n    com.testproject.User userToSave = createTestUser();\n    when(userRepository.existsByUsername(userToSave.getUsername())).thenReturn(true);\n    // When & Then\n    assertThrows(com.testproject.ValidationException.class, () -> {\n        userService.save(userToSave);\n    });\n}",
    "visibility" : "package",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserServiceTest.java",
    "className" : "com.testproject.UserServiceTest",
    "startLine" : 109,
    "endLine" : 118,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Test",
      "arguments" : [ ],
      "properties" : { }
    }, {
      "name" : "DisplayName",
      "arguments" : [ "\"Should throw validation exception when username is duplicate\"" ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserServiceTest.shouldUpdateUserStatus_Successfully()",
    "name" : "shouldUpdateUserStatus_Successfully",
    "signature" : "shouldUpdateUserStatus_Successfully()",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    // Given\n    java.lang.Long userId = 1L;\n    com.testproject.User existingUser = createTestUser();\n    existingUser.setStatus(com.testproject.UserStatus.ACTIVE);\n    com.testproject.User updatedUser = createTestUser();\n    updatedUser.setStatus(com.testproject.UserStatus.INACTIVE);\n    when(userRepository.findById(userId)).thenReturn(java.util.Optional.of(existingUser));\n    when(userRepository.save(any(com.testproject.User.class))).thenReturn(updatedUser);\n    // When\n    com.testproject.User result = userService.updateStatus(userId, com.testproject.UserStatus.INACTIVE);\n    // Then\n    assertThat(result.getStatus()).isEqualTo(com.testproject.UserStatus.INACTIVE);\n    verify(notificationService).sendAccountDeactivatedEmail(updatedUser);\n}",
    "visibility" : "package",
    "cyclomaticComplexity" : 3,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserServiceTest.java",
    "className" : "com.testproject.UserServiceTest",
    "startLine" : 122,
    "endLine" : 140,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Test",
      "arguments" : [ ],
      "properties" : { }
    }, {
      "name" : "DisplayName",
      "arguments" : [ "\"Should update user status successfully\"" ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserServiceTest.tearDown()",
    "name" : "tearDown",
    "signature" : "tearDown()",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    // Cleanup resources if needed\n}",
    "visibility" : "package",
    "cyclomaticComplexity" : 2,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserServiceTest.java",
    "className" : "com.testproject.UserServiceTest",
    "startLine" : 41,
    "endLine" : 43,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "AfterEach",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserServiceTest.verify(java.lang.Object)",
    "name" : "verify",
    "signature" : "verify(java.lang.Object)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    org.mockito.Mockito.verify(mock);\n}",
    "visibility" : "private",
    "cyclomaticComplexity" : 2,
    "parameters" : [ "T mock" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserServiceTest.java",
    "className" : "com.testproject.UserServiceTest",
    "startLine" : 188,
    "endLine" : 190,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserServiceTest.when(java.lang.Object)",
    "name" : "when",
    "signature" : "when(java.lang.Object)",
    "returnType" : "org.mockito.stubbing.OngoingStubbing",
    "comment" : "Mock utility methods (these would normally come from Mockito imports)\n",
    "body" : "{\n    return org.mockito.Mockito.when(methodCall);\n}",
    "visibility" : "private",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "T methodCall" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserServiceTest.java",
    "className" : "com.testproject.UserServiceTest",
    "startLine" : 184,
    "endLine" : 186,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserStatus.canLogin()",
    "name" : "canLogin",
    "signature" : "canLogin()",
    "returnType" : "boolean",
    "comment" : "",
    "body" : "{\n    return canLogin;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserStatus.java",
    "className" : "com.testproject.UserStatus",
    "startLine" : 27,
    "endLine" : 29,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : true,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserStatus.fromString(java.lang.String)",
    "name" : "fromString",
    "signature" : "fromString(java.lang.String)",
    "returnType" : "com.testproject.UserStatus",
    "comment" : "",
    "body" : "{\n    if (status == null) {\n        return com.testproject.UserStatus.INACTIVE;\n    }\n    for (com.testproject.UserStatus userStatus : com.testproject.UserStatus.values()) {\n        if (userStatus.name().equalsIgnoreCase(status)) {\n            return userStatus;\n        }\n    }\n    return com.testproject.UserStatus.INACTIVE;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 4,
    "parameters" : [ "java.lang.String status" ],
    "isAbstract" : false,
    "isStatic" : true,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserStatus.java",
    "className" : "com.testproject.UserStatus",
    "startLine" : 31,
    "endLine" : 40,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserStatus.getDisplayName()",
    "name" : "getDisplayName",
    "signature" : "getDisplayName()",
    "returnType" : "java.lang.String",
    "comment" : "",
    "body" : "{\n    return displayName;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserStatus.java",
    "className" : "com.testproject.UserStatus",
    "startLine" : 23,
    "endLine" : 25,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : true,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.UserStatus.com.testproject.UserStatus(java.lang.String,boolean)",
    "name" : "<init>",
    "signature" : "com.testproject.UserStatus(java.lang.String,boolean)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    this.displayName = displayName;\n    this.canLogin = canLogin;\n}",
    "visibility" : "private",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String displayName", "boolean canLogin" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/UserStatus.java",
    "className" : "com.testproject.UserStatus",
    "startLine" : 18,
    "endLine" : 21,
    "isConstructor" : true,
    "decorators" : null,
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.ValidationException.getField()",
    "name" : "getField",
    "signature" : "getField()",
    "returnType" : "java.lang.String",
    "comment" : "",
    "body" : "{\n    return field;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/ValidationException.java",
    "className" : "com.testproject.ValidationException",
    "startLine" : 32,
    "endLine" : 34,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.ValidationException.getRejectedValue()",
    "name" : "getRejectedValue",
    "signature" : "getRejectedValue()",
    "returnType" : "java.lang.Object",
    "comment" : "",
    "body" : "{\n    return rejectedValue;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/ValidationException.java",
    "className" : "com.testproject.ValidationException",
    "startLine" : 36,
    "endLine" : 38,
    "isConstructor" : false,
    "decorators" : [ ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : false,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.ValidationException.toString()",
    "name" : "toString",
    "signature" : "toString()",
    "returnType" : "java.lang.String",
    "comment" : "",
    "body" : "{\n    java.lang.StringBuilder sb = new java.lang.StringBuilder();\n    sb.append(getClass().getSimpleName()).append(\": \");\n    sb.append(getMessage());\n    if (field != null) {\n        sb.append(\" [field: \").append(field).append(\"]\");\n    }\n    if (rejectedValue != null) {\n        sb.append(\" [rejected value: \").append(rejectedValue).append(\"]\");\n    }\n    return sb.toString();\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 3,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/ValidationException.java",
    "className" : "com.testproject.ValidationException",
    "startLine" : 41,
    "endLine" : 55,
    "isConstructor" : false,
    "decorators" : [ {
      "name" : "Override",
      "arguments" : [ ],
      "properties" : { }
    } ],
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : true,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.ValidationException.com.testproject.ValidationException()",
    "name" : "<init>",
    "signature" : "com.testproject.ValidationException()",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    super();\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/ValidationException.java",
    "className" : "com.testproject.ValidationException",
    "startLine" : 14,
    "endLine" : 16,
    "isConstructor" : true,
    "decorators" : null,
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : true,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.ValidationException.com.testproject.ValidationException(java.lang.String)",
    "name" : "<init>",
    "signature" : "com.testproject.ValidationException(java.lang.String)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    super(message);\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String message" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/ValidationException.java",
    "className" : "com.testproject.ValidationException",
    "startLine" : 18,
    "endLine" : 20,
    "isConstructor" : true,
    "decorators" : null,
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : true,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.ValidationException.com.testproject.ValidationException(java.lang.String,java.lang.String,java.lang.Object)",
    "name" : "<init>",
    "signature" : "com.testproject.ValidationException(java.lang.String,java.lang.String,java.lang.Object)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    super(message);\n    this.field = field;\n    this.rejectedValue = rejectedValue;\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String message", "java.lang.String field", "java.lang.Object rejectedValue" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/ValidationException.java",
    "className" : "com.testproject.ValidationException",
    "startLine" : 26,
    "endLine" : 30,
    "isConstructor" : true,
    "decorators" : null,
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  }, {
    "static" : false,
    "synchronized" : false,
    "constructor" : true,
    "apiEndpoint" : false,
    "abstract" : false,
    "final" : false,
    "id" : "comprehensive-test-project:com.testproject.ValidationException.com.testproject.ValidationException(java.lang.String,java.lang.Throwable)",
    "name" : "<init>",
    "signature" : "com.testproject.ValidationException(java.lang.String,java.lang.Throwable)",
    "returnType" : "void",
    "comment" : "",
    "body" : "{\n    super(message, cause);\n}",
    "visibility" : "public",
    "cyclomaticComplexity" : 1,
    "parameters" : [ "java.lang.String message", "java.lang.Throwable cause" ],
    "isAbstract" : false,
    "isStatic" : false,
    "isFinal" : false,
    "isSynchronized" : false,
    "filePath" : "src/main/java/com/testproject/ValidationException.java",
    "className" : "com.testproject.ValidationException",
    "startLine" : 22,
    "endLine" : 24,
    "isConstructor" : true,
    "decorators" : null,
    "isApiEndpoint" : false,
    "httpMethod" : null,
    "requestPath" : null
  } ],
  "dependencies" : [ {
    "name" : "comprehensive-test-project:org.springframework.boot:spring-boot-starter-web",
    "version" : "unknown",
    "scope" : "compile",
    "type" : "maven"
  }, {
    "name" : "comprehensive-test-project:org.springframework.boot:spring-boot-starter-data-jpa",
    "version" : "unknown",
    "scope" : "compile",
    "type" : "maven"
  }, {
    "name" : "comprehensive-test-project:org.springframework.boot:spring-boot-starter-test",
    "version" : "unknown",
    "scope" : "test",
    "type" : "maven"
  }, {
    "name" : "comprehensive-test-project:org.junit.jupiter:junit-jupiter",
    "version" : "unknown",
    "scope" : "test",
    "type" : "maven"
  }, {
    "name" : "comprehensive-test-project:org.mockito:mockito-core",
    "version" : "unknown",
    "scope" : "test",
    "type" : "maven"
  } ],
  "relationships" : [ {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/AbstractService.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.AbstractService",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.ApplicationConfig",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Configuration",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/ApplicationConfig.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.ApplicationConfig",
    "properties" : { }
  }, {
    "type" : "HAS_INNER_CLASS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.ApplicationConfig",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.ApplicationConfig$CustomThreadFactory",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/ApplicationConfig.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.ApplicationConfig$CustomThreadFactory",
    "properties" : { }
  }, {
    "type" : "IMPLEMENTS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.ApplicationConfig$CustomThreadFactory",
    "endNodeType" : "Interface",
    "endNodeId" : "comprehensive-test-project:java.util.concurrent.ThreadFactory",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/BaseEntity.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseEntity",
    "properties" : { }
  }, {
    "type" : "IMPLEMENTS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.BaseEntity",
    "endNodeType" : "Interface",
    "endNodeId" : "comprehensive-test-project:com.testproject.Auditable",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/CompleteTestClasses.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.OrderStatus",
    "properties" : { }
  }, {
    "type" : "EXTENDS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderStatus",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:java.lang.Enum",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/CompleteTestClasses.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.Role",
    "properties" : { }
  }, {
    "type" : "EXTENDS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.Role",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseEntity",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/CompleteTestClasses.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.Permission",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/CompleteTestClasses.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.OrderItem",
    "properties" : { }
  }, {
    "type" : "EXTENDS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderItem",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseEntity",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/CompleteTestClasses.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.Product",
    "properties" : { }
  }, {
    "type" : "EXTENDS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.Product",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseEntity",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/CompleteTestClasses.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.ShippingAddress",
    "properties" : { }
  }, {
    "type" : "EXTENDS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.ShippingAddress",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseEntity",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/CompleteTestClasses.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserDto",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/CompleteTestClasses.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.OrderDto",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/CompleteTestClasses.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.CreateUserRequest",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/CompleteTestClasses.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.UpdateUserRequest",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/CompleteTestClasses.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.CreateOrderRequest",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/CompleteTestClasses.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.OrderItemRequest",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/CompleteTestClasses.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserMapper",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/CompleteTestClasses.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.DataSource",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/CompleteTestClasses.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.SecurityProperties",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/CompleteTestClasses.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.CacheManager",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.GenericUtils",
    "properties" : { }
  }, {
    "type" : "HAS_INNER_CLASS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.GenericUtils",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.GenericUtils$TypeSafeBuilder",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.GenericUtils$TypeSafeBuilder",
    "properties" : { }
  }, {
    "type" : "HAS_INNER_CLASS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.GenericUtils",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.GenericUtils$InstanceBuilder",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.GenericUtils$InstanceBuilder",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseService",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.CacheableService",
    "properties" : { }
  }, {
    "type" : "EXTENDS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.CacheableService",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseService",
    "properties" : { }
  }, {
    "type" : "IMPLEMENTS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.CacheableService",
    "endNodeType" : "Interface",
    "endNodeId" : "comprehensive-test-project:com.testproject.Cacheable",
    "properties" : { }
  }, {
    "type" : "IMPLEMENTS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.CacheableService",
    "endNodeType" : "Interface",
    "endNodeId" : "comprehensive-test-project:com.testproject.Monitorable",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.BusinessException",
    "properties" : { }
  }, {
    "type" : "EXTENDS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.BusinessException",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:java.lang.Exception",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.PaymentException",
    "properties" : { }
  }, {
    "type" : "EXTENDS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.PaymentException",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.BusinessException",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.PaymentServiceException",
    "properties" : { }
  }, {
    "type" : "EXTENDS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.PaymentServiceException",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:java.lang.RuntimeException",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.NotificationService",
    "properties" : { }
  }, {
    "type" : "EXTENDS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.NotificationService",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.CacheableService",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.EmailService",
    "properties" : { }
  }, {
    "type" : "EXTENDS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.EmailService",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseService",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.SmsService",
    "properties" : { }
  }, {
    "type" : "EXTENDS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.SmsService",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseService",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.ProductService",
    "properties" : { }
  }, {
    "type" : "EXTENDS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.ProductService",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.AbstractService",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.InventoryService",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.PaymentService",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.PaymentRequest",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.PaymentResult",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.OrderRepository",
    "properties" : { }
  }, {
    "type" : "IMPLEMENTS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderRepository",
    "endNodeType" : "Interface",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseRepository",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.ProductRepository",
    "properties" : { }
  }, {
    "type" : "IMPLEMENTS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.ProductRepository",
    "endNodeType" : "Interface",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseRepository",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/EntityNotFoundException.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.EntityNotFoundException",
    "properties" : { }
  }, {
    "type" : "EXTENDS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.EntityNotFoundException",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:java.lang.RuntimeException",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/InnerClassTestCase.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.InnerClassTestCase",
    "properties" : { }
  }, {
    "type" : "HAS_INNER_CLASS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.InnerClassTestCase",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.InnerClassTestCase$StaticNestedClass",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/InnerClassTestCase.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.InnerClassTestCase$StaticNestedClass",
    "properties" : { }
  }, {
    "type" : "HAS_INNER_CLASS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.InnerClassTestCase$StaticNestedClass",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.InnerClassTestCase$StaticNestedClass$InnerInStaticNested",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/InnerClassTestCase.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.InnerClassTestCase$StaticNestedClass$InnerInStaticNested",
    "properties" : { }
  }, {
    "type" : "HAS_INNER_CLASS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.InnerClassTestCase",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.InnerClassTestCase$InnerClass",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/InnerClassTestCase.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.InnerClassTestCase$InnerClass",
    "properties" : { }
  }, {
    "type" : "HAS_INNER_CLASS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.InnerClassTestCase$InnerClass",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.InnerClassTestCase$InnerClass$NestedInnerClass",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/InnerClassTestCase.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.InnerClassTestCase$InnerClass$NestedInnerClass",
    "properties" : { }
  }, {
    "type" : "HAS_INNER_CLASS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.InnerClassTestCase$InnerClass$NestedInnerClass",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.InnerClassTestCase$InnerClass$NestedInnerClass$TripleNestedClass",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/InnerClassTestCase.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.InnerClassTestCase$InnerClass$NestedInnerClass$TripleNestedClass",
    "properties" : { }
  }, {
    "type" : "HAS_INNER_CLASS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.InnerClassTestCase",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.InnerClassTestCase$ProtectedInnerClass",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/InnerClassTestCase.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.InnerClassTestCase$ProtectedInnerClass",
    "properties" : { }
  }, {
    "type" : "HAS_INNER_CLASS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.InnerClassTestCase",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.InnerClassTestCase$PrivateInnerClass",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/InnerClassTestCase.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.InnerClassTestCase$PrivateInnerClass",
    "properties" : { }
  }, {
    "type" : "IMPLEMENTS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.InnerClassTestCase$PrivateInnerClass",
    "endNodeType" : "Interface",
    "endNodeId" : "comprehensive-test-project:java.lang.Runnable",
    "properties" : { }
  }, {
    "type" : "HAS_INNER_CLASS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.InnerClassTestCase",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.InnerClassTestCase$AbstractInnerClass",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/InnerClassTestCase.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.InnerClassTestCase$AbstractInnerClass",
    "properties" : { }
  }, {
    "type" : "HAS_INNER_CLASS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.InnerClassTestCase",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.InnerClassTestCase$FinalInnerClass",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/InnerClassTestCase.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.InnerClassTestCase$FinalInnerClass",
    "properties" : { }
  }, {
    "type" : "EXTENDS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.InnerClassTestCase$FinalInnerClass",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseEntity",
    "properties" : { }
  }, {
    "type" : "HAS_INNER_CLASS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.InnerClassTestCase",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.InnerClassTestCase$GenericInnerClass",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/InnerClassTestCase.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.InnerClassTestCase$GenericInnerClass",
    "properties" : { }
  }, {
    "type" : "HAS_INNER_CLASS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.InnerClassTestCase$GenericInnerClass",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.InnerClassTestCase$GenericInnerClass$NestedGenericInner",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/InnerClassTestCase.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.InnerClassTestCase$GenericInnerClass$NestedGenericInner",
    "properties" : { }
  }, {
    "type" : "HAS_INNER_CLASS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.InnerClassTestCase",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.InnerClassTestCase$InnerEnum",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/InnerClassTestCase.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.InnerClassTestCase$InnerEnum",
    "properties" : { }
  }, {
    "type" : "EXTENDS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.InnerClassTestCase$InnerEnum",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:java.lang.Enum",
    "properties" : { }
  }, {
    "type" : "HAS_INNER_CLASS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.InnerClassTestCase",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.InnerClassTestCase$InnerInterfaceImpl",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/InnerClassTestCase.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.InnerClassTestCase$InnerInterfaceImpl",
    "properties" : { }
  }, {
    "type" : "IMPLEMENTS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.InnerClassTestCase$InnerInterfaceImpl",
    "endNodeType" : "Interface",
    "endNodeId" : "comprehensive-test-project:com.testproject.InnerClassTestCase$InnerInterface",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/MethodOverloadingTestCase.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/Order.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.Order",
    "properties" : { }
  }, {
    "type" : "EXTENDS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.Order",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseEntity",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderService",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Service",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderService",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Transactional",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/OrderService.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.OrderService",
    "properties" : { }
  }, {
    "type" : "EXTENDS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderService",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.AbstractService",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/SimpleCallTest.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.SimpleCallTest",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/SpringAnnotations.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.MediaType",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/SpringAnnotations.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.HttpStatus",
    "properties" : { }
  }, {
    "type" : "EXTENDS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.HttpStatus",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:java.lang.Enum",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/SpringAnnotations.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.ResponseEntity",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/User.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.User",
    "properties" : { }
  }, {
    "type" : "EXTENDS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.User",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseEntity",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserController",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:RestController",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserController",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:RequestMapping",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserController",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:CrossOrigin",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/UserController.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserController",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserRepository",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Repository",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/UserRepository.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserRepository",
    "properties" : { }
  }, {
    "type" : "IMPLEMENTS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserRepository",
    "endNodeType" : "Interface",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseRepository",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserService",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Service",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserService",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Transactional",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/UserService.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserService",
    "properties" : { }
  }, {
    "type" : "EXTENDS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserService",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.AbstractService",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/UserServiceTest.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserServiceTest",
    "properties" : { }
  }, {
    "type" : "HAS_INNER_CLASS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserServiceTest",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserServiceTest$AssertThat",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/UserServiceTest.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserServiceTest$AssertThat",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/UserStatus.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserStatus",
    "properties" : { }
  }, {
    "type" : "EXTENDS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserStatus",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:java.lang.Enum",
    "properties" : { }
  }, {
    "type" : "DEFINES_CLASS",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/ValidationException.java",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.ValidationException",
    "properties" : { }
  }, {
    "type" : "EXTENDS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.ValidationException",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:java.lang.Exception",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.AbstractService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.AbstractService.afterCreate(com.testproject.BaseEntity)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.AbstractService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.AbstractService.afterDelete(com.testproject.BaseEntity)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.AbstractService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.AbstractService.afterFindAll(java.util.List)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.AbstractService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.AbstractService.afterUpdate(com.testproject.BaseEntity)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.AbstractService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.AbstractService.beforeCreate(com.testproject.BaseEntity)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.AbstractService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.AbstractService.beforeDelete(com.testproject.BaseEntity)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.AbstractService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.AbstractService.beforeFindAll()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.AbstractService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.AbstractService.beforeUpdate(com.testproject.BaseEntity,com.testproject.BaseEntity)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.AbstractService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.AbstractService.convertToRelated(com.testproject.BaseEntity,java.lang.Class)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.AbstractService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.AbstractService.create(com.testproject.BaseEntity)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.AbstractService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.AbstractService.delete(java.lang.Object)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.AbstractService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.AbstractService.findAll()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.AbstractService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.AbstractService.findById(java.lang.Object)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.AbstractService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.AbstractService.getEntityName()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.AbstractService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.AbstractService.groupEntities(java.util.List)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.AbstractService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.AbstractService.initializeService()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.AbstractService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.AbstractService.performUpdate(com.testproject.BaseEntity,com.testproject.BaseEntity)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.AbstractService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.AbstractService.update(java.lang.Object,com.testproject.BaseEntity)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.AbstractService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.AbstractService.validateForCreation(com.testproject.BaseEntity)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.AbstractService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.AbstractService.validateForUpdate(com.testproject.BaseEntity,com.testproject.BaseEntity)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.AbstractService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.AbstractService.com.testproject.AbstractService(com.testproject.BaseRepository)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.ApplicationConfig.cacheManager()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Bean",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.ApplicationConfig",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.ApplicationConfig.cacheManager()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.ApplicationConfig",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.ApplicationConfig.createBean(java.lang.Class)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.ApplicationConfig.developmentDataSource()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Bean",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.ApplicationConfig.developmentDataSource()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Profile",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.ApplicationConfig",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.ApplicationConfig.developmentDataSource()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.ApplicationConfig",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.ApplicationConfig.getApplicationVersion()",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.ApplicationConfig.productionDataSource()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Bean",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.ApplicationConfig.productionDataSource()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Profile",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.ApplicationConfig",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.ApplicationConfig.productionDataSource()",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.ApplicationConfig.securityProperties()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Bean",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.ApplicationConfig.securityProperties()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:ConfigurationProperties",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.ApplicationConfig",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.ApplicationConfig.securityProperties()",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.ApplicationConfig.taskExecutor()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Bean",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.ApplicationConfig",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.ApplicationConfig.taskExecutor()",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.BaseEntity.equals(java.lang.Object)",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.BaseEntity",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseEntity.equals(java.lang.Object)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.BaseEntity.getCreatedAt()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.BaseEntity",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseEntity.getCreatedAt()",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.BaseEntity.getCreatedBy()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.BaseEntity",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseEntity.getCreatedBy()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.BaseEntity",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseEntity.getEntityName()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.BaseEntity",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseEntity.getId()",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.BaseEntity.getUpdatedAt()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.BaseEntity",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseEntity.getUpdatedAt()",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.BaseEntity.getUpdatedBy()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.BaseEntity",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseEntity.getUpdatedBy()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.BaseEntity",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseEntity.getVersion()",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.BaseEntity.hashCode()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.BaseEntity",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseEntity.hashCode()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.BaseEntity",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseEntity.isActive()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.BaseEntity",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseEntity.isDeleted()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.BaseEntity",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseEntity.isSameType(com.testproject.BaseEntity)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.BaseEntity",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseEntity.markAsUpdated(java.lang.String)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.BaseEntity",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseEntity.setActive(boolean)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.BaseEntity.setCreatedAt(java.time.LocalDateTime)",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.BaseEntity",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseEntity.setCreatedAt(java.time.LocalDateTime)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.BaseEntity.setCreatedBy(java.lang.String)",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.BaseEntity",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseEntity.setCreatedBy(java.lang.String)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.BaseEntity",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseEntity.setDeleted(boolean)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.BaseEntity",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseEntity.setId(java.lang.Long)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.BaseEntity.setUpdatedAt(java.time.LocalDateTime)",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.BaseEntity",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseEntity.setUpdatedAt(java.time.LocalDateTime)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.BaseEntity.setUpdatedBy(java.lang.String)",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.BaseEntity",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseEntity.setUpdatedBy(java.lang.String)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.BaseEntity",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseEntity.setVersion(java.lang.String)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.BaseEntity",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseEntity.softDelete()",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.BaseEntity.toString()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.BaseEntity",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseEntity.toString()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.BaseEntity",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseEntity.com.testproject.BaseEntity()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.BaseEntity",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseEntity.com.testproject.BaseEntity(java.lang.Long,java.lang.String)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.BaseEntity",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseEntity.com.testproject.BaseEntity(java.lang.String)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.Role.getEntityName()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.Role",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.Role.getEntityName()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.Role",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.Role.getName()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.Role",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.Role.setName(java.lang.String)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.Role",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.Role.com.testproject.Role()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.Permission",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.Permission.getName()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.Permission",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.Permission.setName(java.lang.String)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderItem.getEntityName()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderItem",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.OrderItem.getEntityName()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderItem",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.OrderItem.getOrder()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderItem",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.OrderItem.getPrice()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderItem",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.OrderItem.getProduct()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderItem",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.OrderItem.getQuantity()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderItem",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.OrderItem.setOrder(com.testproject.Order)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderItem",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.OrderItem.setPrice(java.math.BigDecimal)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderItem",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.OrderItem.setProduct(com.testproject.Product)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderItem",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.OrderItem.setQuantity(int)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.Product",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.Product.getCategory()",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.Product.getEntityName()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.Product",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.Product.getEntityName()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.Product",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.Product.getName()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.Product",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.Product.getPrice()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.Product",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.Product.setCategory(java.lang.String)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.Product",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.Product.setName(java.lang.String)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.Product",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.Product.setPrice(java.math.BigDecimal)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.ShippingAddress.getEntityName()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.ShippingAddress",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.ShippingAddress.getEntityName()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserDto",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserDto.getId()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserDto",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserDto.getUsername()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserDto",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserDto.setId(java.lang.Long)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserDto",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserDto.setUsername(java.lang.String)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserDto",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserDto.com.testproject.UserDto()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserDto",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserDto.com.testproject.UserDto(com.testproject.User)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderDto",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.OrderDto.com.testproject.OrderDto()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderDto",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.OrderDto.com.testproject.OrderDto(com.testproject.Order)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.CreateUserRequest",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.CreateUserRequest.getUsername()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.CreateUserRequest",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.CreateUserRequest.setUsername(java.lang.String)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserMapper",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserMapper.toDto(com.testproject.User)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserMapper",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserMapper.toDto(java.util.List)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserMapper",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserMapper.toEntity(com.testproject.CreateUserRequest)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserMapper",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserMapper.updateEntity(com.testproject.User,com.testproject.UpdateUserRequest)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.DataSource",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.DataSource.getPassword()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.DataSource",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.DataSource.getUrl()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.DataSource",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.DataSource.getUsername()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.DataSource",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.DataSource.setPassword(java.lang.String)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.DataSource",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.DataSource.setUrl(java.lang.String)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.DataSource",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.DataSource.setUsername(java.lang.String)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.CacheManager",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.CacheManager.getCacheNames()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.CacheManager",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.CacheManager.setCacheNames(java.util.List)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.GenericUtils",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.GenericUtils.mapList(java.util.List,java.util.function.Function)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.GenericUtils",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.GenericUtils.sortMapByValue(java.util.Map)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.BaseService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseService.initialize()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.BaseService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseService.logMessage(java.lang.String)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.BaseService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseService.shutdown()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.BaseService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseService.com.testproject.BaseService(java.lang.String)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.CacheableService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.CacheableService.cacheValue(java.lang.String,java.lang.Object)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.CacheableService.clearCache()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.CacheableService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.CacheableService.clearCache()",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.CacheableService.getCacheSize()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.CacheableService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.CacheableService.getCacheSize()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.CacheableService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.CacheableService.getCachedValue(java.lang.String,java.lang.Class)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.CacheableService.getMetrics()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.CacheableService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.CacheableService.getMetrics()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.CacheableService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.CacheableService.processWithCache(java.lang.String,java.util.function.Supplier,java.lang.Class)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.CacheableService.recordMetric(java.lang.String,java.lang.Object)",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.CacheableService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.CacheableService.recordMetric(java.lang.String,java.lang.Object)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.CacheableService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.CacheableService.com.testproject.CacheableService(java.lang.String)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.BusinessException",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.BusinessException.addContext(java.lang.String,java.lang.Object)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.BusinessException",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.BusinessException.getBusinessMessage()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.BusinessException",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.BusinessException.getContext()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.BusinessException",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.BusinessException.getErrorCode()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.BusinessException",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.BusinessException.com.testproject.BusinessException(java.lang.String,java.lang.String)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.BusinessException",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.BusinessException.com.testproject.BusinessException(java.lang.String,java.lang.String,java.lang.Throwable)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.PaymentException.getBusinessMessage()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.PaymentException",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.PaymentException.getBusinessMessage()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.PaymentException",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.PaymentException.com.testproject.PaymentException(java.lang.String)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.PaymentException",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.PaymentException.com.testproject.PaymentException(java.lang.String,java.lang.Throwable)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.PaymentServiceException",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.PaymentServiceException.com.testproject.PaymentServiceException(java.lang.String)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.PaymentServiceException",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.PaymentServiceException.com.testproject.PaymentServiceException(java.lang.String,java.lang.Throwable)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.NotificationService.cacheValue(java.lang.String,java.lang.Object)",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.NotificationService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.NotificationService.cacheValue(java.lang.String,java.lang.Object)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.NotificationService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.NotificationService.formatOrderTemplate(java.lang.String,com.testproject.Order)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.NotificationService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.NotificationService.formatTemplate(java.lang.String,com.testproject.User)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.NotificationService.getCachedValue(java.lang.String,java.lang.Class)",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.NotificationService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.NotificationService.getCachedValue(java.lang.String,java.lang.Class)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.NotificationService.initialize()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.NotificationService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.NotificationService.initialize()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.NotificationService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.NotificationService.loadEmailTemplate(java.lang.String)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.NotificationService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.NotificationService.sendAccountActivatedEmail(com.testproject.User)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.NotificationService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.NotificationService.sendAccountBlockedEmail(com.testproject.User)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.NotificationService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.NotificationService.sendAccountDeactivatedEmail(com.testproject.User)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.NotificationService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.NotificationService.sendCancellationNotification(com.testproject.Order)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.NotificationService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.NotificationService.sendDeliveryConfirmation(com.testproject.Order)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.NotificationService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.NotificationService.sendOrderConfirmation(com.testproject.Order)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.NotificationService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.NotificationService.sendPaymentConfirmation(com.testproject.Order,com.testproject.PaymentResult)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.NotificationService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.NotificationService.sendShippingNotification(com.testproject.Order)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.NotificationService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.NotificationService.sendWelcomeEmail(com.testproject.User)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.NotificationService.shutdown()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.NotificationService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.NotificationService.shutdown()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.NotificationService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.NotificationService.com.testproject.NotificationService(com.testproject.EmailService,com.testproject.SmsService)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.EmailService.initialize()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.EmailService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.EmailService.initialize()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.EmailService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.EmailService.sendEmail(java.lang.String,java.lang.String,java.lang.String)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.EmailService.shutdown()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.EmailService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.EmailService.shutdown()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.EmailService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.EmailService.com.testproject.EmailService()",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.SmsService.initialize()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.SmsService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.SmsService.initialize()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.SmsService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.SmsService.sendSms(java.lang.String,java.lang.String)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.SmsService.shutdown()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.SmsService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.SmsService.shutdown()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.SmsService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.SmsService.com.testproject.SmsService()",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.ProductService.getEntityName()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.ProductService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.ProductService.getEntityName()",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.ProductService.performUpdate(com.testproject.Product,com.testproject.Product)",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.ProductService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.ProductService.performUpdate(com.testproject.Product,com.testproject.Product)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.ProductService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.ProductService.releaseInventory(java.lang.Long,int)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.ProductService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.ProductService.reserveInventory(java.lang.Long,int)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.ProductService.validateForCreation(com.testproject.Product)",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.ProductService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.ProductService.validateForCreation(com.testproject.Product)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.ProductService.validateForUpdate(com.testproject.Product,com.testproject.Product)",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.ProductService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.ProductService.validateForUpdate(com.testproject.Product,com.testproject.Product)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.ProductService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.ProductService.com.testproject.ProductService(com.testproject.ProductRepository,com.testproject.InventoryService)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.InventoryService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.InventoryService.release(java.lang.Long,int)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.InventoryService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.InventoryService.reserve(java.lang.Long,int)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.PaymentService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.PaymentService.processPayment(java.math.BigDecimal,com.testproject.PaymentRequest)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.PaymentRequest",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.PaymentRequest.getMethod()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.PaymentRequest",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.PaymentRequest.setMethod(java.lang.String)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.PaymentResult",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.PaymentResult.getErrorMessage()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.PaymentResult",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.PaymentResult.getTransactionId()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.PaymentResult",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.PaymentResult.isSuccessful()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.PaymentResult",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.PaymentResult.com.testproject.PaymentResult(boolean,java.lang.String,java.lang.String)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderRepository.count()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderRepository",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.OrderRepository.count()",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderRepository.deleteAll()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderRepository",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.OrderRepository.deleteAll()",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderRepository.deleteById(java.lang.Long)",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderRepository",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.OrderRepository.deleteById(java.lang.Long)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderRepository.existsById(java.lang.Long)",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderRepository",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.OrderRepository.existsById(java.lang.Long)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderRepository.findAll()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderRepository",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.OrderRepository.findAll()",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderRepository.findAllById(java.lang.Iterable)",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderRepository",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.OrderRepository.findAllById(java.lang.Iterable)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderRepository.findById(java.lang.Long)",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderRepository",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.OrderRepository.findById(java.lang.Long)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderRepository",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.OrderRepository.findByUserAndDeletedFalse(com.testproject.User)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderRepository",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.OrderRepository.findByUserAndStatusIn(com.testproject.User,com.testproject.OrderStatus[])",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderRepository.save(com.testproject.Order)",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderRepository",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.OrderRepository.save(com.testproject.Order)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderRepository.saveAll(java.lang.Iterable)",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderRepository",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.OrderRepository.saveAll(java.lang.Iterable)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.ProductRepository.count()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.ProductRepository",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.ProductRepository.count()",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.ProductRepository.deleteAll()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.ProductRepository",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.ProductRepository.deleteAll()",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.ProductRepository.deleteById(java.lang.Long)",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.ProductRepository",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.ProductRepository.deleteById(java.lang.Long)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.ProductRepository.existsById(java.lang.Long)",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.ProductRepository",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.ProductRepository.existsById(java.lang.Long)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.ProductRepository.findAll()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.ProductRepository",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.ProductRepository.findAll()",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.ProductRepository.findAllById(java.lang.Iterable)",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.ProductRepository",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.ProductRepository.findAllById(java.lang.Iterable)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.ProductRepository.findById(java.lang.Long)",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.ProductRepository",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.ProductRepository.findById(java.lang.Long)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.ProductRepository.save(com.testproject.Product)",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.ProductRepository",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.ProductRepository.save(com.testproject.Product)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.ProductRepository.saveAll(java.lang.Iterable)",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.ProductRepository",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.ProductRepository.saveAll(java.lang.Iterable)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.EntityNotFoundException",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.EntityNotFoundException.getEntityId()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.EntityNotFoundException",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.EntityNotFoundException.getEntityType()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.EntityNotFoundException",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.EntityNotFoundException.getOperation()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.EntityNotFoundException",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.EntityNotFoundException.orderNotFound(java.lang.Long)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.EntityNotFoundException",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.EntityNotFoundException.productNotFound(java.lang.String)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.EntityNotFoundException.toString()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.EntityNotFoundException",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.EntityNotFoundException.toString()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.EntityNotFoundException",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.EntityNotFoundException.userNotFound(java.lang.Long)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.EntityNotFoundException",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.EntityNotFoundException.com.testproject.EntityNotFoundException()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.EntityNotFoundException",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.EntityNotFoundException.com.testproject.EntityNotFoundException(java.lang.String)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.EntityNotFoundException",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.EntityNotFoundException.com.testproject.EntityNotFoundException(java.lang.String,java.lang.Object)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.EntityNotFoundException",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.EntityNotFoundException.com.testproject.EntityNotFoundException(java.lang.String,java.lang.Object,java.lang.String)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.EntityNotFoundException",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.EntityNotFoundException.com.testproject.EntityNotFoundException(java.lang.String,java.lang.Object,java.lang.String,java.lang.Throwable)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.EntityNotFoundException",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.EntityNotFoundException.com.testproject.EntityNotFoundException(java.lang.String,java.lang.Throwable)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.InnerClassTestCase",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.InnerClassTestCase.createAnonymousRunner(java.lang.String)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.InnerClassTestCase",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.InnerClassTestCase.main(java.lang.String[])",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.InnerClassTestCase",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.InnerClassTestCase.methodWithLocalAndAnonymousClasses()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase.findUser(java.lang.String)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase.findUser(java.lang.String,java.lang.String)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase.findUser(java.lang.String,java.lang.String,int)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase.format(java.lang.String)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase.format(java.lang.String,boolean)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase.format(java.lang.String,java.lang.String,java.lang.String)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase.process(java.lang.String)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase.process(java.lang.String,boolean)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase.process(java.util.List)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase.processAsync(java.lang.String)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase.save(com.testproject.Order)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase.save(com.testproject.Order,java.lang.String)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase.save(com.testproject.User)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase.save(com.testproject.User,boolean)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase.testMethodCalls()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase.testStaticCalls()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase.transformData(java.lang.String)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase.validateData(java.lang.String)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase.com.testproject.MethodOverloadingTestCase()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase.com.testproject.MethodOverloadingTestCase(com.testproject.UserService)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.MethodOverloadingTestCase.com.testproject.MethodOverloadingTestCase(com.testproject.UserService,com.testproject.OrderService)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.Order",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.Order.calculateTotal()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.Order",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.Order.getDeliveryDate()",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.Order.getEntityName()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.Order",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.Order.getEntityName()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.Order",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.Order.getItems()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.Order",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.Order.getMetadata()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.Order",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.Order.getOrderDate()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.Order",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.Order.getOrderNumber()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.Order",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.Order.getShippingAddress()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.Order",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.Order.getStatus()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.Order",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.Order.getTotalAmount()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.Order",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.Order.getUser()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.Order",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.Order.groupItemsByCategory()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.Order",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.Order.setDeliveryDate(java.time.LocalDateTime)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.Order",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.Order.setItems(java.util.List)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.Order",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.Order.setMetadata(java.util.Map)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.Order",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.Order.setOrderDate(java.time.LocalDateTime)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.Order",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.Order.setOrderNumber(java.lang.String)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.Order",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.Order.setShippingAddress(com.testproject.ShippingAddress)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.Order",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.Order.setStatus(com.testproject.OrderStatus)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.Order",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.Order.setTotalAmount(java.math.BigDecimal)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.Order",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.Order.setUser(com.testproject.User)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.Order",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.Order.com.testproject.Order()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.Order",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.Order.com.testproject.Order(java.lang.String,com.testproject.User)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderService.afterCreate(com.testproject.Order)",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.OrderService.afterCreate(com.testproject.Order)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderService.afterUpdate(com.testproject.Order)",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.OrderService.afterUpdate(com.testproject.Order)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.OrderService.calculateOrderTotal(com.testproject.Order)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.OrderService.cancel(java.lang.Long)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.OrderService.findActiveByUser(com.testproject.User)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.OrderService.findByUser(com.testproject.User)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderService.getEntityName()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.OrderService.getEntityName()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.OrderService.handleStatusChangeNotification(com.testproject.Order)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.OrderService.handleStatusTransition(com.testproject.Order,com.testproject.OrderStatus,com.testproject.OrderStatus)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderService.performUpdate(com.testproject.Order,com.testproject.Order)",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.OrderService.performUpdate(com.testproject.Order,com.testproject.Order)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.OrderService.processPayment(java.lang.Long,com.testproject.PaymentRequest)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.OrderService.releaseInventory(com.testproject.Order)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.OrderService.reserveInventory(com.testproject.Order)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.OrderService.startFulfillment(com.testproject.Order)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.OrderService.updateStatus(java.lang.Long,com.testproject.OrderStatus)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderService.validateForCreation(com.testproject.Order)",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.OrderService.validateForCreation(com.testproject.Order)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderService.validateForUpdate(com.testproject.Order,com.testproject.Order)",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.OrderService.validateForUpdate(com.testproject.Order,com.testproject.Order)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.OrderService.validateOrderItem(com.testproject.OrderItem)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.OrderService.validateStatusTransition(com.testproject.OrderStatus,com.testproject.OrderStatus)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.OrderService.com.testproject.OrderService(com.testproject.OrderRepository,com.testproject.ProductService,com.testproject.NotificationService,com.testproject.PaymentService)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.SimpleCallTest",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.SimpleCallTest.caller()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.SimpleCallTest",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.SimpleCallTest.formatMessage(java.lang.String)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.SimpleCallTest",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.SimpleCallTest.overloaded(int)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.SimpleCallTest",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.SimpleCallTest.overloaded(java.lang.String)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.SimpleCallTest",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.SimpleCallTest.overloaded(java.lang.String,int)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.SimpleCallTest",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.SimpleCallTest.target()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.SimpleCallTest",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.SimpleCallTest.targetWithParam(java.lang.String)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.ResponseEntity",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.ResponseEntity.badRequest()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.ResponseEntity",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.ResponseEntity.body(java.lang.Object)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.ResponseEntity",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.ResponseEntity.build()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.ResponseEntity",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.ResponseEntity.notFound()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.ResponseEntity",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.ResponseEntity.ok(java.lang.Object)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.ResponseEntity",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.ResponseEntity.status(com.testproject.HttpStatus)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.ResponseEntity",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.ResponseEntity.com.testproject.ResponseEntity(java.lang.Object,com.testproject.HttpStatus)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.User",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.User.addOrder(com.testproject.Order)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.User",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.User.findRoleByType(java.lang.Class)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.User",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.User.getEmail()",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.User.getEntityName()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.User",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.User.getEntityName()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.User",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.User.getFirstName()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.User",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.User.getFullName()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.User",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.User.getLastName()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.User",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.User.getOrders()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.User",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.User.getProfile()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.User",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.User.getRoles()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.User",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.User.getStatus()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.User",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.User.getUsername()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.User",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.User.setEmail(java.lang.String)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.User",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.User.setFirstName(java.lang.String)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.User",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.User.setLastName(java.lang.String)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.User",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.User.setOrders(java.util.List)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.User",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.User.setProfile(com.testproject.Profile)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.User",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.User.setRoles(java.util.Set)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.User",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.User.setStatus(com.testproject.UserStatus)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.User",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.User.setUsername(java.lang.String)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.User",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.User.validateUser()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.User",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.User.com.testproject.User()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.User",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.User.com.testproject.User(java.lang.String,java.lang.String)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.User",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.User.com.testproject.User(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserController.createUser(com.testproject.CreateUserRequest)",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:PostMapping",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserController",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserController.createUser(com.testproject.CreateUserRequest)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserController.createUserOrder(java.lang.Long,com.testproject.CreateOrderRequest)",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:PostMapping",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserController",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserController.createUserOrder(java.lang.Long,com.testproject.CreateOrderRequest)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserController.deleteUser(java.lang.Long)",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:DeleteMapping",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserController",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserController.deleteUser(java.lang.Long)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserController.getAllUsers(int,int,java.lang.String)",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:GetMapping",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserController",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserController.getAllUsers(int,int,java.lang.String)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserController.getUserById(java.lang.Long)",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:GetMapping",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserController",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserController.getUserById(java.lang.Long)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserController.getUserOrders(java.lang.Long)",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:GetMapping",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserController",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserController.getUserOrders(java.lang.Long)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserController.searchUsers(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:RequestMapping",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserController",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserController.searchUsers(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserController.updateUser(java.lang.Long,com.testproject.UpdateUserRequest)",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:PutMapping",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserController",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserController.updateUser(java.lang.Long,com.testproject.UpdateUserRequest)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserController.updateUserStatus(java.lang.Long,com.testproject.UserStatus)",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:PatchMapping",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserController",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserController.updateUserStatus(java.lang.Long,com.testproject.UserStatus)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserController",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserController.com.testproject.UserController(com.testproject.UserService,com.testproject.UserMapper)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserRepository.count()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserRepository",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserRepository.count()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserRepository",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserRepository.countUsersByStatus()",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserRepository.deleteAll()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserRepository",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserRepository.deleteAll()",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserRepository.deleteById(java.lang.Long)",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserRepository",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserRepository.deleteById(java.lang.Long)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserRepository.existsById(java.lang.Long)",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserRepository",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserRepository.existsById(java.lang.Long)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserRepository",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserRepository.existsByUsername(java.lang.String)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserRepository.findAll()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserRepository",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserRepository.findAll()",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserRepository.findAllById(java.lang.Iterable)",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserRepository",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserRepository.findAllById(java.lang.Iterable)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserRepository",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserRepository.findByDeletedFalse()",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserRepository.findById(java.lang.Long)",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserRepository",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserRepository.findById(java.lang.Long)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserRepository",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserRepository.findByStatus(com.testproject.UserStatus)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserRepository",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserRepository.findByUsernameContainingOrEmailContaining(java.lang.String,java.lang.String)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserRepository.save(com.testproject.User)",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserRepository",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserRepository.save(com.testproject.User)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserRepository.saveAll(java.lang.Iterable)",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserRepository",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserRepository.saveAll(java.lang.Iterable)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserRepository",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserRepository.searchUsers(java.lang.String,java.lang.String,java.lang.String)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserService.afterCreate(com.testproject.User)",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserService.afterCreate(com.testproject.User)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserService.beforeDelete(com.testproject.User)",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserService.beforeDelete(com.testproject.User)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserService.createOrderForUser(java.lang.Long,com.testproject.CreateOrderRequest)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserService.deleteById(java.lang.Long)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserService.findAll()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserService.findAll()",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserService.findAll(int,int,java.lang.String)",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Transactional",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserService.findAll(int,int,java.lang.String)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserService.findById(java.lang.Long)",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Transactional",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserService.findById(java.lang.Long)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserService.generateOrderNumber()",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserService.getEntityName()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserService.getEntityName()",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserService.getUserOrders(java.lang.Long)",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Transactional",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserService.getUserOrders(java.lang.Long)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserService.handleStatusChange(com.testproject.User,com.testproject.UserStatus,com.testproject.UserStatus)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserService.isValidEmail(java.lang.String)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserService.performUpdate(com.testproject.User,com.testproject.User)",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserService.performUpdate(com.testproject.User,com.testproject.User)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserService.save(com.testproject.User)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserService.searchUsers(java.lang.String,java.lang.String,java.lang.String)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserService.updateStatus(java.lang.Long,com.testproject.UserStatus)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserService.validateForCreation(com.testproject.User)",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserService.validateForCreation(com.testproject.User)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserService.validateForUpdate(com.testproject.User,com.testproject.User)",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserService.validateForUpdate(com.testproject.User,com.testproject.User)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserService.validateUser(com.testproject.User)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserService",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserService.com.testproject.UserService(com.testproject.UserRepository,com.testproject.OrderService,com.testproject.NotificationService)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserServiceTest",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserServiceTest.any(java.lang.Class)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserServiceTest",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserServiceTest.assertThat(java.lang.Object)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserServiceTest",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserServiceTest.assertThrows(java.lang.Class,java.lang.Runnable)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserServiceTest",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserServiceTest.createTestUser()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserServiceTest",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserServiceTest.createTestUser(java.lang.String,java.lang.String)",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserServiceTest.setUp()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:BeforeEach",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserServiceTest",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserServiceTest.setUp()",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserServiceTest.shouldFindUserById_WhenUserExists()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Test",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserServiceTest.shouldFindUserById_WhenUserExists()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:DisplayName",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserServiceTest",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserServiceTest.shouldFindUserById_WhenUserExists()",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserServiceTest.shouldHandleMultipleUsersSearch()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Test",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserServiceTest.shouldHandleMultipleUsersSearch()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:DisplayName",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserServiceTest",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserServiceTest.shouldHandleMultipleUsersSearch()",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserServiceTest.shouldReturnEmpty_WhenUserDoesNotExist()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Test",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserServiceTest.shouldReturnEmpty_WhenUserDoesNotExist()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:DisplayName",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserServiceTest",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserServiceTest.shouldReturnEmpty_WhenUserDoesNotExist()",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserServiceTest.shouldSaveUser_Successfully()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Test",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserServiceTest.shouldSaveUser_Successfully()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:DisplayName",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserServiceTest",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserServiceTest.shouldSaveUser_Successfully()",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserServiceTest.shouldThrowException_WhenIdIsNull()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Test",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserServiceTest.shouldThrowException_WhenIdIsNull()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:DisplayName",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserServiceTest",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserServiceTest.shouldThrowException_WhenIdIsNull()",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserServiceTest.shouldThrowValidationException_WhenUsernameIsDuplicate()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Test",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserServiceTest.shouldThrowValidationException_WhenUsernameIsDuplicate()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:DisplayName",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserServiceTest",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserServiceTest.shouldThrowValidationException_WhenUsernameIsDuplicate()",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserServiceTest.shouldUpdateUserStatus_Successfully()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Test",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserServiceTest.shouldUpdateUserStatus_Successfully()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:DisplayName",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserServiceTest",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserServiceTest.shouldUpdateUserStatus_Successfully()",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserServiceTest.tearDown()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:AfterEach",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserServiceTest",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserServiceTest.tearDown()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserServiceTest",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserServiceTest.verify(java.lang.Object)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserServiceTest",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserServiceTest.when(java.lang.Object)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserStatus",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserStatus.canLogin()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserStatus",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserStatus.fromString(java.lang.String)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserStatus",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserStatus.getDisplayName()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserStatus",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.UserStatus.com.testproject.UserStatus(java.lang.String,boolean)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.ValidationException",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.ValidationException.getField()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.ValidationException",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.ValidationException.getRejectedValue()",
    "properties" : { }
  }, {
    "type" : "ANNOTATED_WITH",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.ValidationException.toString()",
    "endNodeType" : "Annotation",
    "endNodeId" : "comprehensive-test-project:annotation:Override",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.ValidationException",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.ValidationException.toString()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.ValidationException",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.ValidationException.com.testproject.ValidationException()",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.ValidationException",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.ValidationException.com.testproject.ValidationException(java.lang.String)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.ValidationException",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.ValidationException.com.testproject.ValidationException(java.lang.String,java.lang.String,java.lang.Object)",
    "properties" : { }
  }, {
    "type" : "HAS_METHOD",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.ValidationException",
    "endNodeType" : "Method",
    "endNodeId" : "comprehensive-test-project:com.testproject.ValidationException.com.testproject.ValidationException(java.lang.String,java.lang.Throwable)",
    "properties" : { }
  }, {
    "type" : "DEFINES_INTERFACE",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/Auditable.java",
    "endNodeType" : "Interface",
    "endNodeId" : "comprehensive-test-project:com.testproject.Auditable",
    "properties" : { }
  }, {
    "type" : "DEFINES_INTERFACE",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/BaseRepository.java",
    "endNodeType" : "Interface",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseRepository",
    "properties" : { }
  }, {
    "type" : "DEFINES_INTERFACE",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "endNodeType" : "Interface",
    "endNodeId" : "comprehensive-test-project:com.testproject.DataProcessor",
    "properties" : { }
  }, {
    "type" : "DEFINES_INTERFACE",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "endNodeType" : "Interface",
    "endNodeId" : "comprehensive-test-project:com.testproject.Cacheable",
    "properties" : { }
  }, {
    "type" : "DEFINES_INTERFACE",
    "startNodeType" : "File",
    "startNodeId" : "comprehensive-test-project:src/main/java/com/testproject/EdgeCaseTestClasses.java",
    "endNodeType" : "Interface",
    "endNodeId" : "comprehensive-test-project:com.testproject.Monitorable",
    "properties" : { }
  }, {
    "type" : "USES_TYPE",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.AbstractService",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseEntity",
    "properties" : { }
  }, {
    "type" : "IMPLEMENTS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.BaseEntity",
    "endNodeType" : "Interface",
    "endNodeId" : "comprehensive-test-project:com.testproject.Auditable",
    "properties" : { }
  }, {
    "type" : "USES_TYPE",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.BaseEntity",
    "endNodeType" : "Interface",
    "endNodeId" : "comprehensive-test-project:com.testproject.Auditable",
    "properties" : { }
  }, {
    "type" : "EXTENDS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.Role",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseEntity",
    "properties" : { }
  }, {
    "type" : "USES_TYPE",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.Role",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseEntity",
    "properties" : { }
  }, {
    "type" : "EXTENDS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderItem",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseEntity",
    "properties" : { }
  }, {
    "type" : "USES_TYPE",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderItem",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseEntity",
    "properties" : { }
  }, {
    "type" : "EXTENDS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.Product",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseEntity",
    "properties" : { }
  }, {
    "type" : "USES_TYPE",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.Product",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseEntity",
    "properties" : { }
  }, {
    "type" : "EXTENDS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.ShippingAddress",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseEntity",
    "properties" : { }
  }, {
    "type" : "USES_TYPE",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.ShippingAddress",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseEntity",
    "properties" : { }
  }, {
    "type" : "EXTENDS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.CacheableService",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseService",
    "properties" : { }
  }, {
    "type" : "USES_TYPE",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.CacheableService",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseService",
    "properties" : { }
  }, {
    "type" : "IMPLEMENTS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.CacheableService",
    "endNodeType" : "Interface",
    "endNodeId" : "comprehensive-test-project:com.testproject.Cacheable",
    "properties" : { }
  }, {
    "type" : "USES_TYPE",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.CacheableService",
    "endNodeType" : "Interface",
    "endNodeId" : "comprehensive-test-project:com.testproject.Cacheable",
    "properties" : { }
  }, {
    "type" : "IMPLEMENTS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.CacheableService",
    "endNodeType" : "Interface",
    "endNodeId" : "comprehensive-test-project:com.testproject.Monitorable",
    "properties" : { }
  }, {
    "type" : "USES_TYPE",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.CacheableService",
    "endNodeType" : "Interface",
    "endNodeId" : "comprehensive-test-project:com.testproject.Monitorable",
    "properties" : { }
  }, {
    "type" : "EXTENDS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.PaymentException",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.BusinessException",
    "properties" : { }
  }, {
    "type" : "USES_TYPE",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.PaymentException",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.BusinessException",
    "properties" : { }
  }, {
    "type" : "EXTENDS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.NotificationService",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.CacheableService",
    "properties" : { }
  }, {
    "type" : "USES_TYPE",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.NotificationService",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.CacheableService",
    "properties" : { }
  }, {
    "type" : "EXTENDS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.EmailService",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseService",
    "properties" : { }
  }, {
    "type" : "USES_TYPE",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.EmailService",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseService",
    "properties" : { }
  }, {
    "type" : "EXTENDS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.SmsService",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseService",
    "properties" : { }
  }, {
    "type" : "USES_TYPE",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.SmsService",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseService",
    "properties" : { }
  }, {
    "type" : "EXTENDS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.ProductService",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.AbstractService",
    "properties" : { }
  }, {
    "type" : "USES_TYPE",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.ProductService",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.AbstractService",
    "properties" : { }
  }, {
    "type" : "IMPLEMENTS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderRepository",
    "endNodeType" : "Interface",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseRepository",
    "properties" : { }
  }, {
    "type" : "USES_TYPE",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderRepository",
    "endNodeType" : "Interface",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseRepository",
    "properties" : { }
  }, {
    "type" : "IMPLEMENTS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.ProductRepository",
    "endNodeType" : "Interface",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseRepository",
    "properties" : { }
  }, {
    "type" : "USES_TYPE",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.ProductRepository",
    "endNodeType" : "Interface",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseRepository",
    "properties" : { }
  }, {
    "type" : "EXTENDS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.Order",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseEntity",
    "properties" : { }
  }, {
    "type" : "USES_TYPE",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.Order",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseEntity",
    "properties" : { }
  }, {
    "type" : "EXTENDS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderService",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.AbstractService",
    "properties" : { }
  }, {
    "type" : "USES_TYPE",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.OrderService",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.AbstractService",
    "properties" : { }
  }, {
    "type" : "EXTENDS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.User",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseEntity",
    "properties" : { }
  }, {
    "type" : "USES_TYPE",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.User",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseEntity",
    "properties" : { }
  }, {
    "type" : "IMPLEMENTS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserRepository",
    "endNodeType" : "Interface",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseRepository",
    "properties" : { }
  }, {
    "type" : "USES_TYPE",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserRepository",
    "endNodeType" : "Interface",
    "endNodeId" : "comprehensive-test-project:com.testproject.BaseRepository",
    "properties" : { }
  }, {
    "type" : "EXTENDS",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserService",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.AbstractService",
    "properties" : { }
  }, {
    "type" : "USES_TYPE",
    "startNodeType" : "Class",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserService",
    "endNodeType" : "Class",
    "endNodeId" : "comprehensive-test-project:com.testproject.AbstractService",
    "properties" : { }
  }, {
    "type" : "DEPENDS_ON",
    "startNodeType" : "Codebase",
    "startNodeId" : "comprehensive-test-project",
    "endNodeType" : "Dependency",
    "endNodeId" : "comprehensive-test-project:org.springframework.boot:spring-boot-starter-web",
    "properties" : { }
  }, {
    "type" : "DEPENDS_ON",
    "startNodeType" : "Codebase",
    "startNodeId" : "comprehensive-test-project",
    "endNodeType" : "Dependency",
    "endNodeId" : "comprehensive-test-project:org.springframework.boot:spring-boot-starter-data-jpa",
    "properties" : { }
  }, {
    "type" : "DEPENDS_ON",
    "startNodeType" : "Codebase",
    "startNodeId" : "comprehensive-test-project",
    "endNodeType" : "Dependency",
    "endNodeId" : "comprehensive-test-project:org.springframework.boot:spring-boot-starter-test",
    "properties" : { }
  }, {
    "type" : "DEPENDS_ON",
    "startNodeType" : "Codebase",
    "startNodeId" : "comprehensive-test-project",
    "endNodeType" : "Dependency",
    "endNodeId" : "comprehensive-test-project:org.junit.jupiter:junit-jupiter",
    "properties" : { }
  }, {
    "type" : "DEPENDS_ON",
    "startNodeType" : "Codebase",
    "startNodeId" : "comprehensive-test-project",
    "endNodeType" : "Dependency",
    "endNodeId" : "comprehensive-test-project:org.mockito:mockito-core",
    "properties" : { }
  }, {
    "type" : "IMPLEMENTS_ENDPOINT",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserController.createUser(com.testproject.CreateUserRequest)",
    "endNodeType" : "APIEndpoint",
    "endNodeId" : "comprehensive-test-project:endpoint:POST:/api/v1/users/createUser",
    "properties" : { }
  }, {
    "type" : "IMPLEMENTS_ENDPOINT",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserController.createUserOrder(java.lang.Long,com.testproject.CreateOrderRequest)",
    "endNodeType" : "APIEndpoint",
    "endNodeId" : "comprehensive-test-project:endpoint:POST:/api/v1/users/{id}/orders",
    "properties" : { }
  }, {
    "type" : "IMPLEMENTS_ENDPOINT",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserController.deleteUser(java.lang.Long)",
    "endNodeType" : "APIEndpoint",
    "endNodeId" : "comprehensive-test-project:endpoint:DELETE:/api/v1/users/{id}",
    "properties" : { }
  }, {
    "type" : "IMPLEMENTS_ENDPOINT",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserController.getAllUsers(int,int,java.lang.String)",
    "endNodeType" : "APIEndpoint",
    "endNodeId" : "comprehensive-test-project:endpoint:GET:/api/v1/users/getAllUsers",
    "properties" : { }
  }, {
    "type" : "IMPLEMENTS_ENDPOINT",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserController.getUserById(java.lang.Long)",
    "endNodeType" : "APIEndpoint",
    "endNodeId" : "comprehensive-test-project:endpoint:GET:/api/v1/users/{id}",
    "properties" : { }
  }, {
    "type" : "IMPLEMENTS_ENDPOINT",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserController.getUserOrders(java.lang.Long)",
    "endNodeType" : "APIEndpoint",
    "endNodeId" : "comprehensive-test-project:endpoint:GET:/api/v1/users/{id}/orders",
    "properties" : { }
  }, {
    "type" : "IMPLEMENTS_ENDPOINT",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserController.searchUsers(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
    "endNodeType" : "APIEndpoint",
    "endNodeId" : "comprehensive-test-project:endpoint:GET:/api/v1/users/search",
    "properties" : { }
  }, {
    "type" : "IMPLEMENTS_ENDPOINT",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserController.updateUser(java.lang.Long,com.testproject.UpdateUserRequest)",
    "endNodeType" : "APIEndpoint",
    "endNodeId" : "comprehensive-test-project:endpoint:PUT:/api/v1/users/{id}",
    "properties" : { }
  }, {
    "type" : "IMPLEMENTS_ENDPOINT",
    "startNodeType" : "Method",
    "startNodeId" : "comprehensive-test-project:com.testproject.UserController.updateUserStatus(java.lang.Long,com.testproject.UserStatus)",
    "endNodeType" : "APIEndpoint",
    "endNodeId" : "comprehensive-test-project:endpoint:PATCH:/api/v1/users/{id}/status",
    "properties" : { }
  } ],
  "apiEndpoints" : [ {
    "id" : "comprehensive-test-project:endpoint:POST:/api/v1/users/createUser",
    "httpMethod" : "POST",
    "path" : "/api/v1/users/createUser",
    "description" : "",
    "methodName" : "createUser",
    "className" : "UserController",
    "filePath" : "src/main/java/com/testproject/UserController.java",
    "parameters" : [ "com.testproject.CreateUserRequest request" ],
    "returnType" : "com.testproject.ResponseEntity"
  }, {
    "id" : "comprehensive-test-project:endpoint:POST:/api/v1/users/{id}/orders",
    "httpMethod" : "POST",
    "path" : "/api/v1/users/{id}/orders",
    "description" : "",
    "methodName" : "createUserOrder",
    "className" : "UserController",
    "filePath" : "src/main/java/com/testproject/UserController.java",
    "parameters" : [ "java.lang.Long id", "com.testproject.CreateOrderRequest request" ],
    "returnType" : "com.testproject.ResponseEntity"
  }, {
    "id" : "comprehensive-test-project:endpoint:DELETE:/api/v1/users/{id}",
    "httpMethod" : "DELETE",
    "path" : "/api/v1/users/{id}",
    "description" : "",
    "methodName" : "deleteUser",
    "className" : "UserController",
    "filePath" : "src/main/java/com/testproject/UserController.java",
    "parameters" : [ "java.lang.Long id" ],
    "returnType" : "com.testproject.ResponseEntity"
  }, {
    "id" : "comprehensive-test-project:endpoint:GET:/api/v1/users/getAllUsers",
    "httpMethod" : "GET",
    "path" : "/api/v1/users/getAllUsers",
    "description" : "",
    "methodName" : "getAllUsers",
    "className" : "UserController",
    "filePath" : "src/main/java/com/testproject/UserController.java",
    "parameters" : [ "int page", "int size", "java.lang.String search" ],
    "returnType" : "com.testproject.ResponseEntity"
  }, {
    "id" : "comprehensive-test-project:endpoint:GET:/api/v1/users/{id}",
    "httpMethod" : "GET",
    "path" : "/api/v1/users/{id}",
    "description" : "",
    "methodName" : "getUserById",
    "className" : "UserController",
    "filePath" : "src/main/java/com/testproject/UserController.java",
    "parameters" : [ "java.lang.Long id" ],
    "returnType" : "com.testproject.ResponseEntity"
  }, {
    "id" : "comprehensive-test-project:endpoint:GET:/api/v1/users/{id}/orders",
    "httpMethod" : "GET",
    "path" : "/api/v1/users/{id}/orders",
    "description" : "",
    "methodName" : "getUserOrders",
    "className" : "UserController",
    "filePath" : "src/main/java/com/testproject/UserController.java",
    "parameters" : [ "java.lang.Long id" ],
    "returnType" : "com.testproject.ResponseEntity"
  }, {
    "id" : "comprehensive-test-project:endpoint:GET:/api/v1/users/search",
    "httpMethod" : "GET",
    "path" : "/api/v1/users/search",
    "description" : "Complex endpoint with multiple parameters and custom media type\n",
    "methodName" : "searchUsers",
    "className" : "UserController",
    "filePath" : "src/main/java/com/testproject/UserController.java",
    "parameters" : [ "java.lang.String query", "java.lang.String sortBy", "java.lang.String sortDirection", "java.lang.String clientVersion" ],
    "returnType" : "com.testproject.ResponseEntity"
  }, {
    "id" : "comprehensive-test-project:endpoint:PUT:/api/v1/users/{id}",
    "httpMethod" : "PUT",
    "path" : "/api/v1/users/{id}",
    "description" : "",
    "methodName" : "updateUser",
    "className" : "UserController",
    "filePath" : "src/main/java/com/testproject/UserController.java",
    "parameters" : [ "java.lang.Long id", "com.testproject.UpdateUserRequest request" ],
    "returnType" : "com.testproject.ResponseEntity"
  }, {
    "id" : "comprehensive-test-project:endpoint:PATCH:/api/v1/users/{id}/status",
    "httpMethod" : "PATCH",
    "path" : "/api/v1/users/{id}/status",
    "description" : "",
    "methodName" : "updateUserStatus",
    "className" : "UserController",
    "filePath" : "src/main/java/com/testproject/UserController.java",
    "parameters" : [ "java.lang.Long id", "com.testproject.UserStatus status" ],
    "returnType" : "com.testproject.ResponseEntity"
  } ],
  "documents" : [ ],
  "testCases" : [ {
    "id" : "comprehensive-test-project:test:com.testproject.MethodOverloadingTestCase.testMethodCalls",
    "name" : "testMethodCalls",
    "filePath" : "src/main/java/com/testproject/MethodOverloadingTestCase.java",
    "className" : "com.testproject.MethodOverloadingTestCase",
    "methodName" : "testMethodCalls",
    "testType" : "unit",
    "framework" : "Unknown"
  }, {
    "id" : "comprehensive-test-project:test:com.testproject.MethodOverloadingTestCase.testStaticCalls",
    "name" : "testStaticCalls",
    "filePath" : "src/main/java/com/testproject/MethodOverloadingTestCase.java",
    "className" : "com.testproject.MethodOverloadingTestCase",
    "methodName" : "testStaticCalls",
    "testType" : "unit",
    "framework" : "Unknown"
  }, {
    "id" : "comprehensive-test-project:test:com.testproject.UserServiceTest.shouldFindUserById_WhenUserExists",
    "name" : "shouldFindUserById_WhenUserExists",
    "filePath" : "src/main/java/com/testproject/UserServiceTest.java",
    "className" : "com.testproject.UserServiceTest",
    "methodName" : "shouldFindUserById_WhenUserExists",
    "testType" : "unit",
    "framework" : "Unknown"
  }, {
    "id" : "comprehensive-test-project:test:com.testproject.UserServiceTest.shouldHandleMultipleUsersSearch",
    "name" : "shouldHandleMultipleUsersSearch",
    "filePath" : "src/main/java/com/testproject/UserServiceTest.java",
    "className" : "com.testproject.UserServiceTest",
    "methodName" : "shouldHandleMultipleUsersSearch",
    "testType" : "unit",
    "framework" : "Unknown"
  }, {
    "id" : "comprehensive-test-project:test:com.testproject.UserServiceTest.shouldReturnEmpty_WhenUserDoesNotExist",
    "name" : "shouldReturnEmpty_WhenUserDoesNotExist",
    "filePath" : "src/main/java/com/testproject/UserServiceTest.java",
    "className" : "com.testproject.UserServiceTest",
    "methodName" : "shouldReturnEmpty_WhenUserDoesNotExist",
    "testType" : "unit",
    "framework" : "Unknown"
  }, {
    "id" : "comprehensive-test-project:test:com.testproject.UserServiceTest.shouldSaveUser_Successfully",
    "name" : "shouldSaveUser_Successfully",
    "filePath" : "src/main/java/com/testproject/UserServiceTest.java",
    "className" : "com.testproject.UserServiceTest",
    "methodName" : "shouldSaveUser_Successfully",
    "testType" : "unit",
    "framework" : "Unknown"
  }, {
    "id" : "comprehensive-test-project:test:com.testproject.UserServiceTest.shouldThrowException_WhenIdIsNull",
    "name" : "shouldThrowException_WhenIdIsNull",
    "filePath" : "src/main/java/com/testproject/UserServiceTest.java",
    "className" : "com.testproject.UserServiceTest",
    "methodName" : "shouldThrowException_WhenIdIsNull",
    "testType" : "unit",
    "framework" : "Unknown"
  }, {
    "id" : "comprehensive-test-project:test:com.testproject.UserServiceTest.shouldThrowValidationException_WhenUsernameIsDuplicate",
    "name" : "shouldThrowValidationException_WhenUsernameIsDuplicate",
    "filePath" : "src/main/java/com/testproject/UserServiceTest.java",
    "className" : "com.testproject.UserServiceTest",
    "methodName" : "shouldThrowValidationException_WhenUsernameIsDuplicate",
    "testType" : "unit",
    "framework" : "Unknown"
  }, {
    "id" : "comprehensive-test-project:test:com.testproject.UserServiceTest.shouldUpdateUserStatus_Successfully",
    "name" : "shouldUpdateUserStatus_Successfully",
    "filePath" : "src/main/java/com/testproject/UserServiceTest.java",
    "className" : "com.testproject.UserServiceTest",
    "methodName" : "shouldUpdateUserStatus_Successfully",
    "testType" : "unit",
    "framework" : "Unknown"
  } ],
  "metadata" : {
    "codebaseName" : "comprehensive-test-project",
    "framework" : "spring-boot",
    "detectedFrameworks" : [ "spring-boot", "maven", "java" ],
    "version" : "1.0.0",
    "parseTime" : "2025-07-29T10:57:07.422820Z",
    "statistics" : {
      "totalFiles" : 83,
      "totalLines" : 24671,
      "complexity" : 563
    }
  }
}